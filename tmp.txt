Script started on 2025-06-10 23:41:33-05:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="293" LINES="47"]
[?2004h]0;earl@earl-MS-7C39: ~/rust/ues/src[01;32mearl@earl-MS-7C39[00m:[01;34m~/rust/ues/src[00m$ cargo run 1
[?2004l[1m[32m    Finished[0m ]8;;https://doc.rust-lang.org/cargo/reference/profiles.html#default-profiles\`dev` profile [unoptimized + debuginfo]]8;;\ target(s) in 0.02s
[1m[32m     Running[0m `/home/earl/rust/ues/target/debug/ues 1`

Dom 0 s0_0000 -0-> s0_0000 [00_00/00/00/00]

Dom 0 Adding square s0_0000 -0-> s0_0000

Dom 0 Act 0 Adding Group G(r0_0000, pn: 1, pnc: f, [00_00/00/00/00])

Dom 0 s0_0000 -0-> s0_0000 [00_00/00/00/00]

  Square s0_0000 adding result 2 s0_0000, pn 1, pnc false

Dom 0 s0_0000 -0-> s0_0000 [00_00/00/00/00]

  Square s0_0000 adding result 3 s0_0000, pn 1, pnc changed from false to true
Dom 0 Act 0 Group r0_0000 confirmed

Dom 0 s1_1111 -0-> s1_1111 [11_11/11/11/11]

Dom 0 Adding square s1_1111 -0-> s1_1111

Dom 0 Act 0 Adding Group G(rx_xxxx, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) from [s0_0000, s1_1111]

Dom 0 s1_1111 -0-> s1_1111 [11_11/11/11/11]

  Square s1_1111 adding result 2 s1_1111, pn 1, pnc false

Dom 0 s1_1111 -0-> s1_1111 [11_11/11/11/11]

  Square s1_1111 adding result 3 s1_1111, pn 1, pnc changed from false to true
Dom 0 Act 0 Group rx_xxxx confirmed

Dom 0 s0000_0000_0000_0000 -0-> s0000_0000_0000_0000 [00/00/00/00_00/00/00/00_00/00/00/00_00/00/00/00]

Dom 0 Adding square s0000_0000_0000_0000 -0-> s0000_0000_0000_0000

Dom 0 Act 0 Adding Group G(r0000_0000_0000_0000, pn: 1, pnc: f, [00/00/00/00_00/00/00/00_00/00/00/00_00/00/00/00])

Dom 0 s0000_0000_0000_0000 -0-> s0000_0000_0000_0000 [00/00/00/00_00/00/00/00_00/00/00/00_00/00/00/00]

  Square s0000_0000_0000_0000 adding result 2 s0000_0000_0000_0000, pn 1, pnc false

Dom 0 s0000_0000_0000_0000 -0-> s0000_0000_0000_0000 [00/00/00/00_00/00/00/00_00/00/00/00_00/00/00/00]

  Square s0000_0000_0000_0000 adding result 3 s0000_0000_0000_0000, pn 1, pnc changed from false to true
Dom 0 Act 0 Group r0000_0000_0000_0000 confirmed

Dom 0 s1111_1111_1111_1111 -0-> s1111_1111_1111_1111 [11/11/11/11_11/11/11/11_11/11/11/11_11/11/11/11]

Dom 0 Adding square s1111_1111_1111_1111 -0-> s1111_1111_1111_1111

Dom 0 Act 0 Adding Group G(rxxxx_xxxx_xxxx_xxxx, pn: 1, pnc: f, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) from [s0000_0000_0000_0000, s1111_1111_1111_1111]

Dom 0 s1111_1111_1111_1111 -0-> s1111_1111_1111_1111 [11/11/11/11_11/11/11/11_11/11/11/11_11/11/11/11]

  Square s1111_1111_1111_1111 adding result 2 s1111_1111_1111_1111, pn 1, pnc false

Dom 0 s1111_1111_1111_1111 -0-> s1111_1111_1111_1111 [11/11/11/11_11/11/11/11_11/11/11/11_11/11/11/11]

  Square s1111_1111_1111_1111 adding result 3 s1111_1111_1111_1111, pn 1, pnc changed from false to true
Dom 0 Act 0 Group rxxxx_xxxx_xxxx_xxxx confirmed

Number needs: 24, priority(count): 250(13) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 1 All domain states: SC[s1_1111, s0001_0011_0101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 0)
  ACT(ID: 3, number squares: 0)
  ACT(ID: 4, number squares: 0)
  ACT(ID: 5, number squares: 0)
  ACT(ID: 6, number squares: 0)

Dom: 0 Current State: s1_1111 Available changes: .._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1111 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_1111 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s1_1111 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s1_1111 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s1_1111 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s1_1111 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 7 N(Dom 1 Act 2 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 8 N(Dom 1 Act 3 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 9 N(Dom 1 Act 4 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
10 N(Dom 1 Act 5 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
11 N(Dom 1 Act 6 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
12 N(Dom 1 Act 7 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target

Need chosen:  5 N(Dom 0 Act 6 Pri 250 Sample State s1_1111 not in a group) At Target

Dom 0 s1_1111 -6-> s1_1111 [11_11/11/11/11]

Dom 0 Adding square s1_1111 -6-> s1_1111

Dom 0 Act 6 Adding Group G(r1_1111, pn: 1, pnc: f, [11_11/11/11/11])
Need satisfied

Number needs: 24, priority(count): 250(12) 400(1) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 2 All domain states: SC[s1_1111, s0001_0011_0101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 0)
  ACT(ID: 3, number squares: 0)
  ACT(ID: 4, number squares: 0)
  ACT(ID: 5, number squares: 0)
  ACT(ID: 6, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 0 Current State: s1_1111 Available changes: .._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1111 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_1111 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s1_1111 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s1_1111 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s1_1111 not in a group) At Target
 5 N(Dom 1 Act 1 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 6 N(Dom 1 Act 2 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 7 N(Dom 1 Act 3 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 8 N(Dom 1 Act 4 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 9 N(Dom 1 Act 5 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
10 N(Dom 1 Act 6 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
11 N(Dom 1 Act 7 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target

Need chosen:  2 N(Dom 0 Act 3 Pri 250 Sample State s1_1111 not in a group) At Target

Dom 0 s1_1111 -3-> s1_1101 [11_11/11/10/11]

Dom 0 Adding square s1_1111 -3-> s1_1101

Dom 0 Act 3 Adding Group G(r1_1111, pn: 1, pnc: f, [11_11/11/10/11])
Need satisfied

Number needs: 26, priority(count): 250(13) 400(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 3 All domain states: SC[s1_1101, s0001_0011_0101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 0)
  ACT(ID: 3, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/10/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 0)
  ACT(ID: 5, number squares: 0)
  ACT(ID: 6, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 0 Current State: s1_1101 Available changes: .._../../10/..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1101 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_1101 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s1_1101 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s1_1101 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s1_1101 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s1_1101 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 7 N(Dom 1 Act 2 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 8 N(Dom 1 Act 3 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 9 N(Dom 1 Act 4 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
10 N(Dom 1 Act 5 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
11 N(Dom 1 Act 6 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
12 N(Dom 1 Act 7 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target

Need chosen:  1 N(Dom 0 Act 2 Pri 250 Sample State s1_1101 not in a group) At Target

Dom 0 s1_1101 -2-> s1_1111 [11_11/11/01/11]

Dom 0 Adding square s1_1101 -2-> s1_1111

Dom 0 Act 2 Adding Group G(r1_1101, pn: 1, pnc: f, [11_11/11/01/11])
Need satisfied

Number needs: 25, priority(count): 250(11) 400(3) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 4 All domain states: SC[s1_1111, s0001_0011_0101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 1
       Grps: G(r1_1101,  pn: 1, pnc: f, [11_11/11/01/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 3, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/10/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 0)
  ACT(ID: 5, number squares: 0)
  ACT(ID: 6, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 0 Current State: s1_1111 Available changes: .._../../Xx/..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1111 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_1111 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s1_1111 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s1_1111 not in a group) At Target
 4 N(Dom 1 Act 1 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 5 N(Dom 1 Act 2 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 6 N(Dom 1 Act 3 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 7 N(Dom 1 Act 4 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 8 N(Dom 1 Act 5 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 9 N(Dom 1 Act 6 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
10 N(Dom 1 Act 7 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target

Need chosen:  3 N(Dom 0 Act 5 Pri 250 Sample State s1_1111 not in a group) At Target

Dom 0 s1_1111 -5-> s1_0111 [11_10/11/11/11]

Dom 0 Adding square s1_1111 -5-> s1_0111

Dom 0 Act 5 Adding Group G(r1_1111, pn: 1, pnc: f, [11_10/11/11/11])
Need satisfied

Number needs: 28, priority(count): 250(13) 400(4) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 5 All domain states: SC[s1_0111, s0001_0011_0101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 1
       Grps: G(r1_1101,  pn: 1, pnc: f, [11_11/11/01/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 3, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/10/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 0)
  ACT(ID: 5, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_10/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 0 Current State: s1_0111 Available changes: .._10/../Xx/..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_0111 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_0111 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s1_0111 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s1_0111 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s1_0111 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s1_0111 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 7 N(Dom 1 Act 2 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 8 N(Dom 1 Act 3 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
 9 N(Dom 1 Act 4 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
10 N(Dom 1 Act 5 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
11 N(Dom 1 Act 6 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target
12 N(Dom 1 Act 7 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target

Need chosen:  8 N(Dom 1 Act 3 Pri 250 Sample State s0001_0011_0101_1011 not in a group) At Target

All domain states: SC[s1_0111, s0001_0011_0101_1011]

Dom 1 s0001_0011_0101_1011 -3-> s0001_0010_1101_1011 [00/00/00/11_00/00/11/10_01/11/00/11_11/00/11/11]

Dom 1 Adding square s0001_0011_0101_1011 -3-> s0001_0010_1101_1011

Dom 1 Act 3 Adding Group G(r0001_0011_0101_1011, pn: 1, pnc: f, [00/00/00/11_00/00/11/10_01/11/00/11_11/00/11/11])
Need satisfied

Number needs: 29, priority(count): 250(13) 400(5) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 6 All domain states: SC[s1_0111, s0001_0010_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 0)
  ACT(ID: 3, number squares: 1
       Grps: G(r0001_0011_0101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_01/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 0)
  ACT(ID: 5, number squares: 0)
  ACT(ID: 6, number squares: 0)
  ACT(ID: 7, number squares: 0)

Dom: 1 Current State: s0001_0010_1101_1011 Available changes: ../../../.._../../../10_01/../../.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_0111 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_0111 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s1_0111 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s1_0111 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s1_0111 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s1_0111 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 2 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 8 N(Dom 1 Act 3 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 9 N(Dom 1 Act 4 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
10 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
11 N(Dom 1 Act 6 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
12 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

Need chosen:  4 N(Dom 0 Act 5 Pri 250 Sample State s1_0111 not in a group) At Target

All domain states: SC[s1_0111, s0001_0010_1101_1011]

Dom 0 s1_0111 -5-> s0_0111 [10_00/11/11/11]

Dom 0 Adding square s1_0111 -5-> s0_0111

Dom 0 Act 5 Adding Group G(r1_0111, pn: 1, pnc: f, [10_00/11/11/11])
Need satisfied

Number needs: 30, priority(count): 250(13) 400(5) 401(1) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 7 All domain states: SC[s0_0111, s0001_0010_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 1
       Grps: G(r1_1101,  pn: 1, pnc: f, [11_11/11/01/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 3, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/10/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 0)
  ACT(ID: 5, number squares: 2
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_10/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_0111,  pn: 1, pnc: f, [10_00/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 0 Current State: s0_0111 Available changes: 10_10/../Xx/..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0111 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_0111 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_0111 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s0_0111 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s0_0111 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s0_0111 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 2 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 8 N(Dom 1 Act 3 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 9 N(Dom 1 Act 4 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
10 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
11 N(Dom 1 Act 6 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
12 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

Need chosen:  1 N(Dom 0 Act 2 Pri 250 Sample State s0_0111 not in a group) At Target

Dom 0 s0_0111 -2-> s0_0011 [00_00/10/11/11]

Dom 0 Adding square s0_0111 -2-> s0_0011

Dom 0 Act 2 Adding Group G(r0_0111, pn: 1, pnc: f, [00_00/10/11/11])
Need satisfied

Number needs: 31, priority(count): 250(13) 400(5) 401(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 8 All domain states: SC[s0_0011, s0001_0010_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 2
       Grps: G(r1_1101,  pn: 1, pnc: f, [11_11/11/01/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0111,  pn: 1, pnc: f, [00_00/10/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 3, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/10/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 0)
  ACT(ID: 5, number squares: 2
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_10/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_0111,  pn: 1, pnc: f, [10_00/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 0 Current State: s0_0011 Available changes: 10_10/10/Xx/..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0011 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_0011 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_0011 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s0_0011 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s0_0011 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s0_0011 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 2 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 8 N(Dom 1 Act 3 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 9 N(Dom 1 Act 4 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
10 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
11 N(Dom 1 Act 6 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
12 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

Need chosen:  1 N(Dom 0 Act 2 Pri 250 Sample State s0_0011 not in a group) At Target

Dom 0 s0_0011 -2-> s0_0111 [00_00/01/11/11]

Dom 0 Adding square s0_0011 -2-> s0_0111

Dom 0 Act 2 Adding Group G(r0_0x11, pn: 1, pnc: f, [00_00/Xx/11/11]) from [s0_0011, s0_0111]
Need satisfied

Number needs: 31, priority(count): 250(12) 400(5) 401(3) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 9 All domain states: SC[s0_0111, s0001_0010_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 3
       Grps: G(r1_1101,  pn: 1, pnc: f, [11_11/11/01/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/10/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 0)
  ACT(ID: 5, number squares: 2
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_10/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_0111,  pn: 1, pnc: f, [10_00/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 0 Current State: s0_0111 Available changes: 10_10/Xx/Xx/..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0111 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s0_0111 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s0_0111 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_0111 not in a group) At Target
 4 N(Dom 0 Act 6 Pri 250 Sample State s0_0111 not in a group) At Target
 5 N(Dom 1 Act 1 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 6 N(Dom 1 Act 2 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 3 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 8 N(Dom 1 Act 4 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 9 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
10 N(Dom 1 Act 6 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
11 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

Need chosen:  4 N(Dom 0 Act 6 Pri 250 Sample State s0_0111 not in a group) At Target

Dom 0 s0_0111 -6-> s0_0111 [00_00/11/11/11]

Dom 0 Adding square s0_0111 -6-> s0_0111

Dom 0 Act 6 Adding Group G(rX_X111, pn: 1, pnc: f, [XX_XX/11/11/11]) from [s1_1111, s0_0111]
Need satisfied

Number needs: 31, priority(count): 250(11) 400(6) 401(3) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 10 All domain states: SC[s0_0111, s0001_0010_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 3
       Grps: G(r1_1101,  pn: 1, pnc: f, [11_11/11/01/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/10/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 0)
  ACT(ID: 5, number squares: 2
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_10/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_0111,  pn: 1, pnc: f, [10_00/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 2
       Grps: G(rX_X111,  pn: 1, pnc: f, [XX_XX/11/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 0 Current State: s0_0111 Available changes: 10_10/Xx/Xx/..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0111 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s0_0111 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s0_0111 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_0111 not in a group) At Target
 4 N(Dom 1 Act 1 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 5 N(Dom 1 Act 2 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 6 N(Dom 1 Act 3 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 4 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 8 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 9 N(Dom 1 Act 6 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
10 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

Need chosen:  5 N(Dom 1 Act 2 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

All domain states: SC[s0_0111, s0001_0010_1101_1011]

Dom 1 s0001_0010_1101_1011 -2-> s0001_0011_1001_1011 [00/00/00/11_00/00/11/01_11/10/00/11_11/00/11/11]

Dom 1 Adding square s0001_0010_1101_1011 -2-> s0001_0011_1001_1011

Dom 1 Act 2 Adding Group G(r0001_0010_1101_1011, pn: 1, pnc: f, [00/00/00/11_00/00/11/01_11/10/00/11_11/00/11/11])
Need satisfied

Number needs: 31, priority(count): 250(11) 400(7) 401(3) 900(2) 902(5) 903(1) 904(2) 
Priority 250
Step: 11 All domain states: SC[s0_0111, s0001_0011_1001_1011] Status: Positive, in RC[rx_0xx1, rXXXX_XXX1_1XXX_XXXX], 2 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 1
       Grps: G(r0001_0010_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/01_11/10/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 3, number squares: 1
       Grps: G(r0001_0011_0101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_01/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 0)
  ACT(ID: 5, number squares: 0)
  ACT(ID: 6, number squares: 0)
  ACT(ID: 7, number squares: 0)

Dom: 1 Current State: s0001_0011_1001_1011 Available changes: ../../../.._../../../Xx_01/10/../.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0111 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s0_0111 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s0_0111 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_0111 not in a group) At Target
 4 N(Dom 1 Act 1 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target
 5 N(Dom 1 Act 2 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target
 6 N(Dom 1 Act 3 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target
 7 N(Dom 1 Act 4 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target
 8 N(Dom 1 Act 5 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target
 9 N(Dom 1 Act 6 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target
10 N(Dom 1 Act 7 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target

Need chosen:  6 N(Dom 1 Act 3 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target

Dom 1 s0001_0011_1001_1011 -3-> s0001_0010_0001_1011 [00/00/00/11_00/00/11/10_10/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0011_1001_1011 -3-> s0001_0010_0001_1011

Dom 1 Act 3 Adding Group G(r0001_0011_xX01_1011, pn: 1, pnc: f, [00/00/00/11_00/00/11/10_Xx/XX/00/11_11/00/11/11]) from [s0001_0011_0101_1011, s0001_0011_1001_1011]
Need satisfied

Number needs: 33, priority(count): 250(11) 400(8) 401(3) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 12 All domain states: SC[s0_0111, s0001_0010_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 1
       Grps: G(r0001_0010_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/01_11/10/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 3, number squares: 2
       Grps: G(r0001_0011_xX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 4, number squares: 0)
  ACT(ID: 5, number squares: 0)
  ACT(ID: 6, number squares: 0)
  ACT(ID: 7, number squares: 0)

Dom: 1 Current State: s0001_0010_0001_1011 Available changes: ../../../.._../../../Xx_Xx/10/../.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0111 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s0_0111 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s0_0111 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_0111 not in a group) At Target
 4 N(Dom 1 Act 1 Pri 250 Sample State s0001_0010_0001_1011 not in a group) At Target
 5 N(Dom 1 Act 2 Pri 250 Sample State s0001_0010_0001_1011 not in a group) At Target
 6 N(Dom 1 Act 3 Pri 250 Sample State s0001_0010_0001_1011 not in a group) At Target
 7 N(Dom 1 Act 4 Pri 250 Sample State s0001_0010_0001_1011 not in a group) At Target
 8 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_0001_1011 not in a group) At Target
 9 N(Dom 1 Act 6 Pri 250 Sample State s0001_0010_0001_1011 not in a group) At Target
10 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_0001_1011 not in a group) At Target

Need chosen:  7 N(Dom 1 Act 4 Pri 250 Sample State s0001_0010_0001_1011 not in a group) At Target

Dom 1 s0001_0010_0001_1011 -4-> s0001_0011_0001_1011 [00/00/00/11_00/00/11/01_00/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0010_0001_1011 -4-> s0001_0011_0001_1011

Dom 1 Act 4 Adding Group G(r0001_0010_0001_1011, pn: 1, pnc: f, [00/00/00/11_00/00/11/01_00/00/00/11_11/00/11/11])
Need satisfied

Number needs: 33, priority(count): 250(10) 400(9) 401(3) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 13 All domain states: SC[s0_0111, s0001_0011_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 1
       Grps: G(r0001_0010_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/01_11/10/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 3, number squares: 2
       Grps: G(r0001_0011_xX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 4, number squares: 1
       Grps: G(r0001_0010_0001_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/01_00/00/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 5, number squares: 0)
  ACT(ID: 6, number squares: 0)
  ACT(ID: 7, number squares: 0)

Dom: 1 Current State: s0001_0011_0001_1011 Available changes: ../../../.._../../../Xx_Xx/10/../.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0111 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s0_0111 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s0_0111 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_0111 not in a group) At Target
 4 N(Dom 1 Act 1 Pri 250 Sample State s0001_0011_0001_1011 not in a group) At Target
 5 N(Dom 1 Act 2 Pri 250 Sample State s0001_0011_0001_1011 not in a group) At Target
 6 N(Dom 1 Act 4 Pri 250 Sample State s0001_0011_0001_1011 not in a group) At Target
 7 N(Dom 1 Act 5 Pri 250 Sample State s0001_0011_0001_1011 not in a group) At Target
 8 N(Dom 1 Act 6 Pri 250 Sample State s0001_0011_0001_1011 not in a group) At Target
 9 N(Dom 1 Act 7 Pri 250 Sample State s0001_0011_0001_1011 not in a group) At Target

Need chosen:  5 N(Dom 1 Act 2 Pri 250 Sample State s0001_0011_0001_1011 not in a group) At Target

Dom 1 s0001_0011_0001_1011 -2-> s0001_0010_0101_1011 [00/00/00/11_00/00/11/10_00/01/00/11_11/00/11/11]

Dom 1 Adding square s0001_0011_0001_1011 -2-> s0001_0010_0101_1011

Dom 1 Act 2 Adding Group G(r0001_001x_XX01_1011, pn: 1, pnc: f, [00/00/00/11_00/00/11/Xx_XX/Xx/00/11_11/00/11/11]) from [s0001_0010_1101_1011, s0001_0011_0001_1011]
Need satisfied

Number needs: 34, priority(count): 250(10) 400(10) 401(3) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 14 All domain states: SC[s0_0111, s0001_0010_0101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 2
       Grps: G(r0001_001x_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 2
       Grps: G(r0001_0011_xX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 4, number squares: 1
       Grps: G(r0001_0010_0001_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/01_00/00/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 5, number squares: 0)
  ACT(ID: 6, number squares: 0)
  ACT(ID: 7, number squares: 0)

Dom: 1 Current State: s0001_0010_0101_1011 Available changes: ../../../.._../../../Xx_Xx/Xx/../.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0111 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s0_0111 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s0_0111 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_0111 not in a group) At Target
 4 N(Dom 1 Act 1 Pri 250 Sample State s0001_0010_0101_1011 not in a group) At Target
 5 N(Dom 1 Act 3 Pri 250 Sample State s0001_0010_0101_1011 not in a group) At Target
 6 N(Dom 1 Act 4 Pri 250 Sample State s0001_0010_0101_1011 not in a group) At Target
 7 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_0101_1011 not in a group) At Target
 8 N(Dom 1 Act 6 Pri 250 Sample State s0001_0010_0101_1011 not in a group) At Target
 9 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_0101_1011 not in a group) At Target

Need chosen:  9 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_0101_1011 not in a group) At Target

Dom 1 s0001_0010_0101_1011 -7-> s0001_0000_0101_1011 [00/00/00/11_00/00/10/00_00/11/00/11_11/00/11/11]

Dom 1 Adding square s0001_0010_0101_1011 -7-> s0001_0000_0101_1011

Dom 1 Act 7 Adding Group G(r0001_0010_0101_1011, pn: 1, pnc: f, [00/00/00/11_00/00/10/00_00/11/00/11_11/00/11/11])
Need satisfied

Number needs: 35, priority(count): 250(11) 400(11) 401(3) 900(2) 902(4) 903(2) 904(2) 
Priority 250
Step: 15 All domain states: SC[s0_0111, s0001_0000_0101_1011] Status: Positive, in RC[rx_x1x1, rXXXX_XX00_0XXX_XXXX], 3 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 2
       Grps: G(r0001_001x_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 2
       Grps: G(r0001_0011_xX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 4, number squares: 1
       Grps: G(r0001_0010_0001_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/01_00/00/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 5, number squares: 0)
  ACT(ID: 6, number squares: 0)
  ACT(ID: 7, number squares: 1
       Grps: G(r0001_0010_0101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_00/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0000_0101_1011 Available changes: ../../../.._../../10/Xx_Xx/Xx/../.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0111 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s0_0111 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s0_0111 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_0111 not in a group) At Target
 4 N(Dom 1 Act 1 Pri 250 Sample State s0001_0000_0101_1011 not in a group) At Target
 5 N(Dom 1 Act 2 Pri 250 Sample State s0001_0000_0101_1011 not in a group) At Target
 6 N(Dom 1 Act 3 Pri 250 Sample State s0001_0000_0101_1011 not in a group) At Target
 7 N(Dom 1 Act 4 Pri 250 Sample State s0001_0000_0101_1011 not in a group) At Target
 8 N(Dom 1 Act 5 Pri 250 Sample State s0001_0000_0101_1011 not in a group) At Target
 9 N(Dom 1 Act 6 Pri 250 Sample State s0001_0000_0101_1011 not in a group) At Target
10 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_0101_1011 not in a group) At Target

Need chosen:  6 N(Dom 1 Act 3 Pri 250 Sample State s0001_0000_0101_1011 not in a group) At Target

Dom 1 s0001_0000_0101_1011 -3-> s0001_0001_1101_1011 [00/00/00/11_00/00/00/01_01/11/00/11_11/00/11/11]

Dom 1 Adding square s0001_0000_0101_1011 -3-> s0001_0001_1101_1011

Dom 1 Act 3 Adding Group G(r0001_00XX_Xx01_1011, pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) from [s0001_0011_1001_1011, s0001_0000_0101_1011]
Need satisfied

Number needs: 33, priority(count): 250(10) 400(11) 401(3) 900(2) 902(5) 904(2) 
Priority 250
Step: 16 All domain states: SC[s0_0111, s0001_0001_1101_1011] Status: Positive, in RC[rx_0xx1, rXXXX_XXX1_1XXX_XXXX], 2 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 2
       Grps: G(r0001_001x_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 1
       Grps: G(r0001_0010_0001_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/01_00/00/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 5, number squares: 0)
  ACT(ID: 6, number squares: 0)
  ACT(ID: 7, number squares: 1
       Grps: G(r0001_0010_0101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_00/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0001_1101_1011 Available changes: ../../../.._../../10/Xx_Xx/Xx/../.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0111 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s0_0111 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s0_0111 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_0111 not in a group) At Target
 4 N(Dom 1 Act 1 Pri 250 Sample State s0001_0001_1101_1011 not in a group) At Target
 5 N(Dom 1 Act 2 Pri 250 Sample State s0001_0001_1101_1011 not in a group) At Target
 6 N(Dom 1 Act 4 Pri 250 Sample State s0001_0001_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 5 Pri 250 Sample State s0001_0001_1101_1011 not in a group) At Target
 8 N(Dom 1 Act 6 Pri 250 Sample State s0001_0001_1101_1011 not in a group) At Target
 9 N(Dom 1 Act 7 Pri 250 Sample State s0001_0001_1101_1011 not in a group) At Target

Need chosen:  6 N(Dom 1 Act 4 Pri 250 Sample State s0001_0001_1101_1011 not in a group) At Target

Dom 1 s0001_0001_1101_1011 -4-> s0001_0000_1101_1011 [00/00/00/11_00/00/00/10_11/11/00/11_11/00/11/11]

Dom 1 Adding square s0001_0001_1101_1011 -4-> s0001_0000_1101_1011

Dom 1 Act 4 Adding Group G(r0001_00Xx_xx01_1011, pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/XX/00/11_11/00/11/11]) from [s0001_0010_0001_1011, s0001_0001_1101_1011]
Need satisfied

Number needs: 35, priority(count): 250(9) 400(12) 401(3) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 17 All domain states: SC[s0_0111, s0001_0000_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 2
       Grps: G(r0001_001x_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 2
       Grps: G(r0001_00Xx_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 0)
  ACT(ID: 6, number squares: 0)
  ACT(ID: 7, number squares: 1
       Grps: G(r0001_0010_0101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_00/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0000_1101_1011 Available changes: ../../../.._../../10/Xx_Xx/Xx/../.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0111 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s0_0111 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s0_0111 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_0111 not in a group) At Target
 4 N(Dom 1 Act 1 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 5 N(Dom 1 Act 2 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 6 N(Dom 1 Act 5 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 6 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 8 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

Need chosen:  6 N(Dom 1 Act 5 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

Dom 1 s0001_0000_1101_1011 -5-> s0001_0010_1101_1011 [00/00/00/11_00/00/01/00_11/11/00/11_11/00/11/11]

Dom 1 Adding square s0001_0000_1101_1011 -5-> s0001_0010_1101_1011

Dom 1 Act 5 Adding Group G(r0001_0000_1101_1011, pn: 1, pnc: f, [00/00/00/11_00/00/01/00_11/11/00/11_11/00/11/11])
Need satisfied

Number needs: 35, priority(count): 250(8) 400(13) 401(3) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 18 All domain states: SC[s0_0111, s0001_0010_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 2
       Grps: G(r0001_001x_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 2
       Grps: G(r0001_00Xx_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 1
       Grps: G(r0001_0000_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/01/00_11/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 0)
  ACT(ID: 7, number squares: 1
       Grps: G(r0001_0010_0101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_00/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0010_1101_1011 Available changes: ../../../.._../../Xx/Xx_Xx/Xx/../.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0111 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s0_0111 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s0_0111 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_0111 not in a group) At Target
 4 N(Dom 1 Act 1 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 5 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 6 N(Dom 1 Act 6 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 250 Sample State s0_0111 not in a group) At Target

All domain states: SC[s0_0111, s0001_0010_1101_1011]

Dom 0 s0_0111 -1-> s0_0110 [00_00/11/11/10]

Dom 0 Adding square s0_0111 -1-> s0_0110

Dom 0 Act 1 Adding Group G(r0_0111, pn: 1, pnc: f, [00_00/11/11/10])
Need satisfied

Number needs: 38, priority(count): 250(10) 400(14) 401(3) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 19 All domain states: SC[s0_0110, s0001_0010_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 1
       Grps: G(r0_0111,  pn: 1, pnc: f, [00_00/11/11/10]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 3
       Grps: G(r1_1101,  pn: 1, pnc: f, [11_11/11/01/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/10/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 0)
  ACT(ID: 5, number squares: 2
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_10/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_0111,  pn: 1, pnc: f, [10_00/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 2
       Grps: G(rX_X111,  pn: 1, pnc: f, [XX_XX/11/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 0 Current State: s0_0110 Available changes: 10_10/Xx/Xx/10

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0110 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_0110 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_0110 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s0_0110 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s0_0110 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s0_0110 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 8 N(Dom 1 Act 6 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 9 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

Need chosen:  3 N(Dom 0 Act 4 Pri 250 Sample State s0_0110 not in a group) At Target

Dom 0 s0_0110 -4-> s0_1110 [00_01/11/11/00]

Dom 0 Adding square s0_0110 -4-> s0_1110

Dom 0 Act 4 Adding Group G(r0_0110, pn: 1, pnc: f, [00_01/11/11/00])
Need satisfied

Number needs: 39, priority(count): 250(10) 400(15) 401(3) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 20 All domain states: SC[s0_1110, s0001_0010_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 1
       Grps: G(r0_0111,  pn: 1, pnc: f, [00_00/11/11/10]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 3
       Grps: G(r1_1101,  pn: 1, pnc: f, [11_11/11/01/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 1
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_11/11/10/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 1
       Grps: G(r0_0110,  pn: 1, pnc: f, [00_01/11/11/00]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 5, number squares: 2
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_10/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_0111,  pn: 1, pnc: f, [10_00/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 2
       Grps: G(rX_X111,  pn: 1, pnc: f, [XX_XX/11/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 0 Current State: s0_1110 Available changes: 10_Xx/Xx/Xx/10

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_1110 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_1110 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_1110 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s0_1110 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s0_1110 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s0_1110 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 8 N(Dom 1 Act 6 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 9 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

Need chosen:  8 N(Dom 1 Act 6 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

All domain states: SC[s0_1110, s0001_0010_1101_1011]

Dom 1 s0001_0010_1101_1011 -6-> s0001_0000_1101_1011 [00/00/00/11_00/00/10/00_11/11/00/11_11/00/11/11]

Dom 1 Adding square s0001_0010_1101_1011 -6-> s0001_0000_1101_1011

Dom 1 Act 6 Adding Group G(r0001_0010_1101_1011, pn: 1, pnc: f, [00/00/00/11_00/00/10/00_11/11/00/11_11/00/11/11])
Need satisfied

Number needs: 40, priority(count): 250(10) 400(16) 401(3) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 21 All domain states: SC[s0_1110, s0001_0000_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 0)
  ACT(ID: 2, number squares: 2
       Grps: G(r0001_001x_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 2
       Grps: G(r0001_00Xx_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 1
       Grps: G(r0001_0000_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/01/00_11/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 1
       Grps: G(r0001_0010_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_11/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 7, number squares: 1
       Grps: G(r0001_0010_0101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_00/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0000_1101_1011 Available changes: ../../../.._../../Xx/Xx_Xx/Xx/../.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_1110 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_1110 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_1110 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s0_1110 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s0_1110 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s0_1110 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 2 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 8 N(Dom 1 Act 6 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 9 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

Need chosen:  2 N(Dom 0 Act 3 Pri 250 Sample State s0_1110 not in a group) At Target

All domain states: SC[s0_1110, s0001_0000_1101_1011]

Dom 0 s0_1110 -3-> s0_1100 [00_11/11/10/00]

Dom 0 Adding square s0_1110 -3-> s0_1100

Dom 0 Act 3 Adding Group G(rx_111x, pn: 1, pnc: f, [XX_11/11/10/XX]) from [s0_1110, s1_1111]
Need satisfied

Number needs: 41, priority(count): 250(10) 400(17) 401(3) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 22 All domain states: SC[s0_1100, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 1
       Grps: G(r0_0111,  pn: 1, pnc: f, [00_00/11/11/10]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 3
       Grps: G(r1_1101,  pn: 1, pnc: f, [11_11/11/01/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 2
       Grps: G(rx_111x,  pn: 1, pnc: f, [XX_11/11/10/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 4, number squares: 1
       Grps: G(r0_0110,  pn: 1, pnc: f, [00_01/11/11/00]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 5, number squares: 2
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_10/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_0111,  pn: 1, pnc: f, [10_00/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 2
       Grps: G(rX_X111,  pn: 1, pnc: f, [XX_XX/11/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 0 Current State: s0_1100 Available changes: 10_Xx/Xx/Xx/10

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_1100 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_1100 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_1100 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s0_1100 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s0_1100 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s0_1100 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 2 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 8 N(Dom 1 Act 6 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 9 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

Need chosen:  3 N(Dom 0 Act 4 Pri 250 Sample State s0_1100 not in a group) At Target

Dom 0 s0_1100 -4-> s1_1100 [01_11/11/00/00]

Dom 0 Adding square s0_1100 -4-> s1_1100

Dom 0 Act 4 Adding Group G(r0_1100, pn: 1, pnc: f, [01_11/11/00/00])
Need satisfied

Number needs: 42, priority(count): 250(10) 400(17) 401(4) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 23 All domain states: SC[s1_1100, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 1
       Grps: G(r0_0111,  pn: 1, pnc: f, [00_00/11/11/10]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 3
       Grps: G(r1_1101,  pn: 1, pnc: f, [11_11/11/01/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 2
       Grps: G(rx_111x,  pn: 1, pnc: f, [XX_11/11/10/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 4, number squares: 2
       Grps: G(r0_0110,  pn: 1, pnc: f, [00_01/11/11/00]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_1100,  pn: 1, pnc: f, [01_11/11/00/00]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 5, number squares: 2
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_10/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_0111,  pn: 1, pnc: f, [10_00/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 2
       Grps: G(rX_X111,  pn: 1, pnc: f, [XX_XX/11/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 0 Current State: s1_1100 Available changes: Xx_Xx/Xx/Xx/10

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1100 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_1100 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s1_1100 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s1_1100 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s1_1100 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s1_1100 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 2 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 8 N(Dom 1 Act 6 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 9 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

Need chosen:  3 N(Dom 0 Act 4 Pri 250 Sample State s1_1100 not in a group) At Target

Dom 0 s1_1100 -4-> s0_1100 [10_11/11/00/00]

Dom 0 Adding square s1_1100 -4-> s0_1100

Dom 0 Act 4 Adding Group G(rx_1100, pn: 1, pnc: f, [Xx_11/11/00/00]) from [s0_1100, s1_1100]
Need satisfied

Number needs: 42, priority(count): 250(9) 400(17) 401(5) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 24 All domain states: SC[s0_1100, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 1
       Grps: G(r0_0111,  pn: 1, pnc: f, [00_00/11/11/10]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 3
       Grps: G(r1_1101,  pn: 1, pnc: f, [11_11/11/01/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 2
       Grps: G(rx_111x,  pn: 1, pnc: f, [XX_11/11/10/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 4, number squares: 3
       Grps: G(r0_0110,  pn: 1, pnc: f, [00_01/11/11/00]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_1100,  pn: 1, pnc: f, [Xx_11/11/00/00]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 2
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_10/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_0111,  pn: 1, pnc: f, [10_00/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 2
       Grps: G(rX_X111,  pn: 1, pnc: f, [XX_XX/11/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 0 Current State: s0_1100 Available changes: Xx_Xx/Xx/Xx/10

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_1100 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_1100 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_1100 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_1100 not in a group) At Target
 4 N(Dom 0 Act 6 Pri 250 Sample State s0_1100 not in a group) At Target
 5 N(Dom 1 Act 1 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 6 N(Dom 1 Act 2 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 6 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 8 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

Need chosen:  5 N(Dom 1 Act 1 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

All domain states: SC[s0_1100, s0001_0000_1101_1011]

Dom 1 s0001_0000_1101_1011 -1-> s0001_0001_1111_1011 [00/00/00/11_00/00/00/01_11/11/01/11_11/00/11/11]

Dom 1 Adding square s0001_0000_1101_1011 -1-> s0001_0001_1111_1011

Dom 1 Act 1 Adding Group G(r0001_0000_1101_1011, pn: 1, pnc: f, [00/00/00/11_00/00/00/01_11/11/01/11_11/00/11/11])
Need satisfied

Number needs: 46, priority(count): 250(12) 400(18) 401(5) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 25 All domain states: SC[s0_1100, s0001_0001_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 1
       Grps: G(r0001_0000_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/01_11/11/01/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 2
       Grps: G(r0001_001x_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 2
       Grps: G(r0001_00Xx_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 1
       Grps: G(r0001_0000_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/01/00_11/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 1
       Grps: G(r0001_0010_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_11/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 7, number squares: 1
       Grps: G(r0001_0010_0101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_00/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0001_1111_1011 Available changes: ../../../.._../../Xx/Xx_Xx/Xx/01/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_1100 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_1100 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_1100 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_1100 not in a group) At Target
 4 N(Dom 0 Act 6 Pri 250 Sample State s0_1100 not in a group) At Target
 5 N(Dom 1 Act 1 Pri 250 Sample State s0001_0001_1111_1011 not in a group) At Target
 6 N(Dom 1 Act 2 Pri 250 Sample State s0001_0001_1111_1011 not in a group) At Target
 7 N(Dom 1 Act 3 Pri 250 Sample State s0001_0001_1111_1011 not in a group) At Target
 8 N(Dom 1 Act 4 Pri 250 Sample State s0001_0001_1111_1011 not in a group) At Target
 9 N(Dom 1 Act 5 Pri 250 Sample State s0001_0001_1111_1011 not in a group) At Target
10 N(Dom 1 Act 6 Pri 250 Sample State s0001_0001_1111_1011 not in a group) At Target
11 N(Dom 1 Act 7 Pri 250 Sample State s0001_0001_1111_1011 not in a group) At Target

Need chosen:  5 N(Dom 1 Act 1 Pri 250 Sample State s0001_0001_1111_1011 not in a group) At Target

Dom 1 s0001_0001_1111_1011 -1-> s0001_0000_1101_1011 [00/00/00/11_00/00/00/10_11/11/10/11_11/00/11/11]

Dom 1 Adding square s0001_0001_1111_1011 -1-> s0001_0000_1101_1011

Dom 1 Act 1 Adding Group G(r0001_000x_11x1_1011, pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) from [s0001_0000_1101_1011, s0001_0001_1111_1011]
Need satisfied

Number needs: 43, priority(count): 250(8) 400(19) 401(5) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 26 All domain states: SC[s0_1100, s0001_0000_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(r0001_000x_11x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 2
       Grps: G(r0001_001x_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 2
       Grps: G(r0001_00Xx_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 1
       Grps: G(r0001_0000_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/01/00_11/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 1
       Grps: G(r0001_0010_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_11/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 7, number squares: 1
       Grps: G(r0001_0010_0101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_00/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0000_1101_1011 Available changes: ../../../.._../../Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_1100 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_1100 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_1100 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_1100 not in a group) At Target
 4 N(Dom 0 Act 6 Pri 250 Sample State s0_1100 not in a group) At Target
 5 N(Dom 1 Act 2 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 6 N(Dom 1 Act 6 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

Need chosen:  1 N(Dom 0 Act 2 Pri 250 Sample State s0_1100 not in a group) At Target

All domain states: SC[s0_1100, s0001_0000_1101_1011]

Dom 0 s0_1100 -2-> s0_1110 [00_11/11/01/00]

Dom 0 Adding square s0_1100 -2-> s0_1110

Dom 0 Act 2 Adding Group G(rX_110X, pn: 1, pnc: f, [XX_11/11/01/XX]) from [s1_1101, s0_1100]
Need satisfied

Number needs: 44, priority(count): 250(8) 400(20) 401(5) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 27 All domain states: SC[s0_1110, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 1
       Grps: G(r0_0111,  pn: 1, pnc: f, [00_00/11/11/10]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 2
       Grps: G(rx_111x,  pn: 1, pnc: f, [XX_11/11/10/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 4, number squares: 3
       Grps: G(r0_0110,  pn: 1, pnc: f, [00_01/11/11/00]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_1100,  pn: 1, pnc: f, [Xx_11/11/00/00]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 2
       Grps: G(r1_1111,  pn: 1, pnc: f, [11_10/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_0111,  pn: 1, pnc: f, [10_00/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 2
       Grps: G(rX_X111,  pn: 1, pnc: f, [XX_XX/11/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 0 Current State: s0_1110 Available changes: Xx_Xx/Xx/Xx/10

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_1110 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_1110 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s0_1110 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_1110 not in a group) At Target
 4 N(Dom 0 Act 6 Pri 250 Sample State s0_1110 not in a group) At Target
 5 N(Dom 1 Act 2 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 6 N(Dom 1 Act 6 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

Need chosen:  6 N(Dom 1 Act 6 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

All domain states: SC[s0_1110, s0001_0000_1101_1011]

Dom 1 s0001_0000_1101_1011 -6-> s0001_0010_1101_1011 [00/00/00/11_00/00/01/00_11/11/00/11_11/00/11/11]

Dom 1 Adding square s0001_0000_1101_1011 -6-> s0001_0010_1101_1011

Dom 1 Act 6 Adding Group G(r0001_00x0_1101_1011, pn: 1, pnc: f, [00/00/00/11_00/00/Xx/00_11/11/00/11_11/00/11/11]) from [s0001_0000_1101_1011, s0001_0010_1101_1011]
Need satisfied

Number needs: 45, priority(count): 250(8) 400(21) 401(5) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 28 All domain states: SC[s0_1110, s0001_0010_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(r0001_000x_11x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 2
       Grps: G(r0001_001x_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 2
       Grps: G(r0001_00Xx_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 1
       Grps: G(r0001_0000_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/01/00_11/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 2
       Grps: G(r0001_00x0_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/00_11/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 7, number squares: 1
       Grps: G(r0001_0010_0101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_00/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0010_1101_1011 Available changes: ../../../.._../../Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_1110 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_1110 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s0_1110 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_1110 not in a group) At Target
 4 N(Dom 0 Act 6 Pri 250 Sample State s0_1110 not in a group) At Target
 5 N(Dom 1 Act 1 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 6 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

Need chosen:  3 N(Dom 0 Act 5 Pri 250 Sample State s0_1110 not in a group) At Target

All domain states: SC[s0_1110, s0001_0010_1101_1011]

Dom 0 s0_1110 -5-> s0_0110 [00_10/11/11/00]

Dom 0 Adding square s0_1110 -5-> s0_0110

Dom 0 Act 5 Adding Group G(rX_111X, pn: 1, pnc: f, [XX_10/11/11/XX]) from [s1_1111, s0_1110]
Need satisfied

Number needs: 46, priority(count): 250(8) 400(21) 401(6) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 29 All domain states: SC[s0_0110, s0001_0010_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 1
       Grps: G(r0_0111,  pn: 1, pnc: f, [00_00/11/11/10]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 2
       Grps: G(rx_111x,  pn: 1, pnc: f, [XX_11/11/10/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 4, number squares: 3
       Grps: G(r0_0110,  pn: 1, pnc: f, [00_01/11/11/00]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_1100,  pn: 1, pnc: f, [Xx_11/11/00/00]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 3
       Grps: G(r1_0111,  pn: 1, pnc: f, [10_00/11/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_111X,  pn: 1, pnc: f, [XX_10/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 6, number squares: 2
       Grps: G(rX_X111,  pn: 1, pnc: f, [XX_XX/11/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 0 Current State: s0_0110 Available changes: Xx_Xx/Xx/Xx/10

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0110 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_0110 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_0110 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_0110 not in a group) At Target
 4 N(Dom 0 Act 6 Pri 250 Sample State s0_0110 not in a group) At Target
 5 N(Dom 1 Act 1 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 6 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

Need chosen:  7 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

All domain states: SC[s0_0110, s0001_0010_1101_1011]

Dom 1 s0001_0010_1101_1011 -7-> s0001_0000_1101_1011 [00/00/00/11_00/00/10/00_11/11/00/11_11/00/11/11]

Dom 1 Adding square s0001_0010_1101_1011 -7-> s0001_0000_1101_1011

Dom 1 Act 7 Adding Group G(r0001_0010_x101_1011, pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) from [s0001_0010_0101_1011, s0001_0010_1101_1011]
Need satisfied

Number needs: 46, priority(count): 250(7) 400(22) 401(6) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 30 All domain states: SC[s0_0110, s0001_0000_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(r0001_000x_11x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 2
       Grps: G(r0001_001x_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 2
       Grps: G(r0001_00Xx_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 1
       Grps: G(r0001_0000_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/01/00_11/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 2
       Grps: G(r0001_00x0_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/00_11/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 7, number squares: 2
       Grps: G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0000_1101_1011 Available changes: ../../../.._../../Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0110 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_0110 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_0110 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_0110 not in a group) At Target
 4 N(Dom 0 Act 6 Pri 250 Sample State s0_0110 not in a group) At Target
 5 N(Dom 1 Act 2 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 6 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

Need chosen:  3 N(Dom 0 Act 5 Pri 250 Sample State s0_0110 not in a group) At Target

All domain states: SC[s0_0110, s0001_0000_1101_1011]

Dom 0 s0_0110 -5-> s1_0110 [01_00/11/11/00]

Dom 0 Adding square s0_0110 -5-> s1_0110

Dom 0 Act 5 Adding Group G(rx_011x, pn: 1, pnc: f, [Xx_00/11/11/XX]) from [s0_0110, s1_0111]
Need satisfied

Number needs: 47, priority(count): 250(7) 400(23) 401(6) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 31 All domain states: SC[s1_0110, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 1
       Grps: G(r0_0111,  pn: 1, pnc: f, [00_00/11/11/10]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 2
       Grps: G(rx_111x,  pn: 1, pnc: f, [XX_11/11/10/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 4, number squares: 3
       Grps: G(r0_0110,  pn: 1, pnc: f, [00_01/11/11/00]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_1100,  pn: 1, pnc: f, [Xx_11/11/00/00]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 4
       Grps: G(rX_111X,  pn: 1, pnc: f, [XX_10/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rx_011x,  pn: 1, pnc: f, [Xx_00/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 6, number squares: 2
       Grps: G(rX_X111,  pn: 1, pnc: f, [XX_XX/11/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 0 Current State: s1_0110 Available changes: Xx_Xx/Xx/Xx/10

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_0110 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_0110 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s1_0110 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s1_0110 not in a group) At Target
 4 N(Dom 0 Act 6 Pri 250 Sample State s1_0110 not in a group) At Target
 5 N(Dom 1 Act 2 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 6 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

Need chosen:  2 N(Dom 0 Act 3 Pri 250 Sample State s1_0110 not in a group) At Target

Dom 0 s1_0110 -3-> s1_0100 [11_00/11/10/00]

Dom 0 Adding square s1_0110 -3-> s1_0100

Dom 0 Act 3 Adding Group G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) from [s1_0110, s0_1110, s1_1111]
Need satisfied

Number needs: 48, priority(count): 250(8) 400(23) 401(6) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 32 All domain states: SC[s1_0100, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 1
       Grps: G(r0_0111,  pn: 1, pnc: f, [00_00/11/11/10]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 3
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 3
       Grps: G(r0_0110,  pn: 1, pnc: f, [00_01/11/11/00]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_1100,  pn: 1, pnc: f, [Xx_11/11/00/00]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 4
       Grps: G(rX_111X,  pn: 1, pnc: f, [XX_10/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rx_011x,  pn: 1, pnc: f, [Xx_00/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 6, number squares: 2
       Grps: G(rX_X111,  pn: 1, pnc: f, [XX_XX/11/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 0 Current State: s1_0100 Available changes: Xx_Xx/Xx/Xx/10

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_0100 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_0100 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s1_0100 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s1_0100 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s1_0100 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s1_0100 not in a group) At Target
 6 N(Dom 1 Act 2 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 7 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

Need chosen:  3 N(Dom 0 Act 4 Pri 250 Sample State s1_0100 not in a group) At Target

Dom 0 s1_0100 -4-> s1_1100 [11_01/11/00/00]

Dom 0 Adding square s1_0100 -4-> s1_1100

Dom 0 Act 4 Adding Group G(rX_01x0, pn: 1, pnc: f, [XX_01/11/XX/00]) from [s1_0100, s0_0110]
Need satisfied

Number needs: 47, priority(count): 250(6) 400(24) 401(6) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 33 All domain states: SC[s1_1100, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 1
       Grps: G(r0_0111,  pn: 1, pnc: f, [00_00/11/11/10]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 3
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(rx_1100,  pn: 1, pnc: f, [Xx_11/11/00/00]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_01x0,  pn: 1, pnc: f, [XX_01/11/XX/00]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 4
       Grps: G(rX_111X,  pn: 1, pnc: f, [XX_10/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rx_011x,  pn: 1, pnc: f, [Xx_00/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 6, number squares: 2
       Grps: G(rX_X111,  pn: 1, pnc: f, [XX_XX/11/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 0 Current State: s1_1100 Available changes: Xx_Xx/Xx/Xx/10

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1100 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s1_1100 not in a group) At Target
 2 N(Dom 0 Act 5 Pri 250 Sample State s1_1100 not in a group) At Target
 3 N(Dom 0 Act 6 Pri 250 Sample State s1_1100 not in a group) At Target
 4 N(Dom 1 Act 2 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 5 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

Need chosen:  3 N(Dom 0 Act 6 Pri 250 Sample State s1_1100 not in a group) At Target

Dom 0 s1_1100 -6-> s1_1100 [11_11/11/00/00]

Dom 0 Adding square s1_1100 -6-> s1_1100

Dom 0 Act 6 Adding Group G(rx_x1XX, pn: 1, pnc: f, [XX_XX/11/XX/XX]) from [s0_0111, s1_1100]
Need satisfied

Number needs: 46, priority(count): 250(5) 400(24) 401(6) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 34 All domain states: SC[s1_1100, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 1
       Grps: G(r0_0111,  pn: 1, pnc: f, [00_00/11/11/10]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 3
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(rx_1100,  pn: 1, pnc: f, [Xx_11/11/00/00]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_01x0,  pn: 1, pnc: f, [XX_01/11/XX/00]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 4
       Grps: G(rX_111X,  pn: 1, pnc: f, [XX_10/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rx_011x,  pn: 1, pnc: f, [Xx_00/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 6, number squares: 3
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 0 Current State: s1_1100 Available changes: Xx_Xx/Xx/Xx/10

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1100 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s1_1100 not in a group) At Target
 2 N(Dom 0 Act 5 Pri 250 Sample State s1_1100 not in a group) At Target
 3 N(Dom 1 Act 2 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target
 4 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

Need chosen:  3 N(Dom 1 Act 2 Pri 250 Sample State s0001_0000_1101_1011 not in a group) At Target

All domain states: SC[s1_1100, s0001_0000_1101_1011]

Dom 1 s0001_0000_1101_1011 -2-> s0001_0001_1001_1011 [00/00/00/11_00/00/00/01_11/10/00/11_11/00/11/11]

Dom 1 Adding square s0001_0000_1101_1011 -2-> s0001_0001_1001_1011

Dom 1 Act 2 Adding Group G(r0001_00XX_xx01_1011, pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/Xx/00/11_11/00/11/11]) from [s0001_0011_0001_1011, s0001_0000_1101_1011]
Need satisfied

Number needs: 48, priority(count): 250(7) 400(24) 401(6) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 35 All domain states: SC[s1_1100, s0001_0001_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(r0001_000x_11x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_00XX_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 2
       Grps: G(r0001_00Xx_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 1
       Grps: G(r0001_0000_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/01/00_11/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 2
       Grps: G(r0001_00x0_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/00_11/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 7, number squares: 2
       Grps: G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0001_1001_1011 Available changes: ../../../.._../../Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1100 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s1_1100 not in a group) At Target
 2 N(Dom 0 Act 5 Pri 250 Sample State s1_1100 not in a group) At Target
 3 N(Dom 1 Act 1 Pri 250 Sample State s0001_0001_1001_1011 not in a group) At Target
 4 N(Dom 1 Act 5 Pri 250 Sample State s0001_0001_1001_1011 not in a group) At Target
 5 N(Dom 1 Act 6 Pri 250 Sample State s0001_0001_1001_1011 not in a group) At Target
 6 N(Dom 1 Act 7 Pri 250 Sample State s0001_0001_1001_1011 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 250 Sample State s1_1100 not in a group) At Target

All domain states: SC[s1_1100, s0001_0001_1001_1011]

Dom 0 s1_1100 -1-> s1_1101 [11_11/11/00/01]

Dom 0 Adding square s1_1100 -1-> s1_1101

Dom 0 Act 1 Adding Group G(rx_x1XX, pn: 1, pnc: f, [XX_XX/11/XX/Xx]) from [s0_0111, s1_1100]
Need satisfied

Number needs: 49, priority(count): 250(7) 400(25) 401(6) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 36 All domain states: SC[s1_1101, s0001_0001_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 3
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(rx_1100,  pn: 1, pnc: f, [Xx_11/11/00/00]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_01x0,  pn: 1, pnc: f, [XX_01/11/XX/00]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 4
       Grps: G(rX_111X,  pn: 1, pnc: f, [XX_10/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rx_011x,  pn: 1, pnc: f, [Xx_00/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 6, number squares: 3
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 0 Current State: s1_1101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 250 Sample State s1_1101 not in a group) At Target
 1 N(Dom 0 Act 4 Pri 250 Sample State s1_1101 not in a group) At Target
 2 N(Dom 0 Act 5 Pri 250 Sample State s1_1101 not in a group) At Target
 3 N(Dom 1 Act 1 Pri 250 Sample State s0001_0001_1001_1011 not in a group) At Target
 4 N(Dom 1 Act 5 Pri 250 Sample State s0001_0001_1001_1011 not in a group) At Target
 5 N(Dom 1 Act 6 Pri 250 Sample State s0001_0001_1001_1011 not in a group) At Target
 6 N(Dom 1 Act 7 Pri 250 Sample State s0001_0001_1001_1011 not in a group) At Target

Need chosen:  5 N(Dom 1 Act 6 Pri 250 Sample State s0001_0001_1001_1011 not in a group) At Target

All domain states: SC[s1_1101, s0001_0001_1001_1011]

Dom 1 s0001_0001_1001_1011 -6-> s0001_0011_1001_1011 [00/00/00/11_00/00/01/11_11/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0001_1001_1011 -6-> s0001_0011_1001_1011

Dom 1 Act 6 Adding Group G(r0001_00xX_1x01_1011, pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) from [s0001_0001_1001_1011, s0001_0010_1101_1011]
Need satisfied

Number needs: 38, priority(count): 250(6) 300(1) 400(25) 401(6) 
Priority 250
Step: 37 All domain states: SC[s1_1101, s0001_0011_1001_1011] Status: Negative, in RC[rx_X10X, rXXXX_XX1x_x0XX_XXXX], -4 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(r0001_000x_11x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_00XX_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 2
       Grps: G(r0001_00Xx_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 1
       Grps: G(r0001_0000_1101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/01/00_11/11/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_00xX_1x01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 2
       Grps: G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0011_1001_1011 Available changes: ../../../.._../../Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 250 Sample State s1_1101 not in a group) At Target
 1 N(Dom 0 Act 4 Pri 250 Sample State s1_1101 not in a group) At Target
 2 N(Dom 0 Act 5 Pri 250 Sample State s1_1101 not in a group) At Target
 3 N(Dom 1 Act 1 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target
 4 N(Dom 1 Act 5 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target
 5 N(Dom 1 Act 7 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 3 Pri 250 Sample State s1_1101 not in a group) At Target

All domain states: SC[s1_1101, s0001_0011_1001_1011]

Dom 0 s1_1101 -3-> s1_1001 [11_11/10/00/11]

Dom 0 Adding square s1_1101 -3-> s1_1001

Dom 0 Act 3 Adding Group G(r1_1101, pn: 1, pnc: f, [11_11/10/00/11])
Need satisfied

Number needs: 52, priority(count): 250(9) 400(25) 401(7) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 38 All domain states: SC[s1_1001, s0001_0011_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 4
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(r1_1101,  pn: 1, pnc: f, [11_11/10/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 4
       Grps: G(rx_1100,  pn: 1, pnc: f, [Xx_11/11/00/00]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_01x0,  pn: 1, pnc: f, [XX_01/11/XX/00]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 4
       Grps: G(rX_111X,  pn: 1, pnc: f, [XX_10/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rx_011x,  pn: 1, pnc: f, [Xx_00/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 6, number squares: 3
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 0 Current State: s1_1001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1001 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_1001 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s1_1001 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s1_1001 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s1_1001 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s1_1001 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target
 7 N(Dom 1 Act 5 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target
 8 N(Dom 1 Act 7 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target

Need chosen:  3 N(Dom 0 Act 4 Pri 250 Sample State s1_1001 not in a group) At Target

Dom 0 s1_1001 -4-> s0_1001 [10_11/00/00/11]

Dom 0 Adding square s1_1001 -4-> s0_1001

Dom 0 Act 4 Adding Group G(rX_1x0X, pn: 1, pnc: f, [Xx_11/XX/00/XX]) from [s1_1001, s0_1100]
Need satisfied

Dom 0 Act 4 deleted unneeded squares: [s1_1100]

Number needs: 51, priority(count): 250(8) 400(25) 401(7) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 39 All domain states: SC[s0_1001, s0001_0011_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 4
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(r1_1101,  pn: 1, pnc: f, [11_11/10/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 4
       Grps: G(rX_01x0,  pn: 1, pnc: f, [XX_01/11/XX/00]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 4
       Grps: G(rX_111X,  pn: 1, pnc: f, [XX_10/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rx_011x,  pn: 1, pnc: f, [Xx_00/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 6, number squares: 3
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 0 Current State: s0_1001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_1001 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_1001 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_1001 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_1001 not in a group) At Target
 4 N(Dom 0 Act 6 Pri 250 Sample State s0_1001 not in a group) At Target
 5 N(Dom 1 Act 1 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target
 6 N(Dom 1 Act 5 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target
 7 N(Dom 1 Act 7 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target

Need chosen:  6 N(Dom 1 Act 5 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target

All domain states: SC[s0_1001, s0001_0011_1001_1011]

Dom 1 s0001_0011_1001_1011 -5-> s0001_0001_1001_1011 [00/00/00/11_00/00/10/11_11/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0011_1001_1011 -5-> s0001_0001_1001_1011

Dom 1 Act 5 Adding Group G(r0001_00XX_1x01_1011, pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) from [s0001_0011_1001_1011, s0001_0000_1101_1011]
Need satisfied

Number needs: 51, priority(count): 250(7) 400(26) 401(7) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 40 All domain states: SC[s0_1001, s0001_0001_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(r0001_000x_11x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_00XX_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 2
       Grps: G(r0001_00Xx_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 2
       Grps: G(r0001_00XX_1x01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_00xX_1x01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 2
       Grps: G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0001_1001_1011 Available changes: ../../../.._../../Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_1001 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_1001 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_1001 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s0_1001 not in a group) At Target
 4 N(Dom 0 Act 6 Pri 250 Sample State s0_1001 not in a group) At Target
 5 N(Dom 1 Act 1 Pri 250 Sample State s0001_0001_1001_1011 not in a group) At Target
 6 N(Dom 1 Act 7 Pri 250 Sample State s0001_0001_1001_1011 not in a group) At Target

Need chosen:  3 N(Dom 0 Act 5 Pri 250 Sample State s0_1001 not in a group) At Target

All domain states: SC[s0_1001, s0001_0001_1001_1011]

Dom 0 s0_1001 -5-> s0_0001 [00_10/00/00/11]

Dom 0 Adding square s0_1001 -5-> s0_0001

Dom 0 Act 5 Adding Group G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) from [s0_1001, s0_1110, s1_1111]
Need satisfied

Number needs: 51, priority(count): 250(8) 400(26) 401(7) 900(2) 902(5) 903(1) 904(2) 
Priority 250
Step: 41 All domain states: SC[s0_0001, s0001_0001_1001_1011] Status: Positive, in RC[rx_0xx1, rXXXX_XXX1_1XXX_XXXX], 2 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 4
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(r1_1101,  pn: 1, pnc: f, [11_11/10/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 4
       Grps: G(rX_01x0,  pn: 1, pnc: f, [XX_01/11/XX/00]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 5
       Grps: G(rx_011x,  pn: 1, pnc: f, [Xx_00/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 3
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 0 Current State: s0_0001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0001 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_0001 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_0001 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s0_0001 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s0_0001 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s0_0001 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0001_1001_1011 not in a group) At Target
 7 N(Dom 1 Act 7 Pri 250 Sample State s0001_0001_1001_1011 not in a group) At Target

Need chosen:  7 N(Dom 1 Act 7 Pri 250 Sample State s0001_0001_1001_1011 not in a group) At Target

All domain states: SC[s0_0001, s0001_0001_1001_1011]

Dom 1 s0001_0001_1001_1011 -7-> s0001_0101_1001_1011 [00/00/00/11_00/01/00/11_11/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0001_1001_1011 -7-> s0001_0101_1001_1011

Dom 1 Act 7 Adding Group G(r0001_0001_1001_1011, pn: 1, pnc: f, [00/00/00/11_00/01/00/11_11/00/00/11_11/00/11/11])
Need satisfied

Number needs: 57, priority(count): 250(13) 400(26) 401(8) 900(2) 902(5) 903(1) 904(2) 
Priority 250
Step: 42 All domain states: SC[s0_0001, s0001_0101_1001_1011] Status: Positive, in RC[rx_0xx1, rXXXX_XXX1_1XXX_XXXX], 2 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(r0001_000x_11x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_00XX_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 2
       Grps: G(r0001_00Xx_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 2
       Grps: G(r0001_00XX_1x01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_00xX_1x01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 3
       Grps: G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0001_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/01/00/11_11/00/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0101_1001_1011 Available changes: ../../../.._../01/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0001 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_0001 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_0001 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s0_0001 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s0_0001 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s0_0001 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0101_1001_1011 not in a group) At Target
 7 N(Dom 1 Act 2 Pri 250 Sample State s0001_0101_1001_1011 not in a group) At Target
 8 N(Dom 1 Act 3 Pri 250 Sample State s0001_0101_1001_1011 not in a group) At Target
 9 N(Dom 1 Act 4 Pri 250 Sample State s0001_0101_1001_1011 not in a group) At Target
10 N(Dom 1 Act 5 Pri 250 Sample State s0001_0101_1001_1011 not in a group) At Target
11 N(Dom 1 Act 6 Pri 250 Sample State s0001_0101_1001_1011 not in a group) At Target
12 N(Dom 1 Act 7 Pri 250 Sample State s0001_0101_1001_1011 not in a group) At Target

Need chosen:  9 N(Dom 1 Act 4 Pri 250 Sample State s0001_0101_1001_1011 not in a group) At Target

Dom 1 s0001_0101_1001_1011 -4-> s0001_0100_1001_1011 [00/00/00/11_00/11/00/10_11/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0101_1001_1011 -4-> s0001_0100_1001_1011

Dom 1 Act 4 Adding Group G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) from [s0001_0010_0001_1011, s0001_0001_1101_1011, s0001_0101_1001_1011]
Need satisfied

Number needs: 57, priority(count): 250(12) 400(26) 401(8) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 43 All domain states: SC[s0_0001, s0001_0100_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(r0001_000x_11x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_00XX_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 2
       Grps: G(r0001_00XX_1x01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_00xX_1x01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 3
       Grps: G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0001_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/01/00/11_11/00/00/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0100_1001_1011 Available changes: ../../../.._../01/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0001 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_0001 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_0001 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s0_0001 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s0_0001 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s0_0001 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target
 7 N(Dom 1 Act 2 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target
 8 N(Dom 1 Act 3 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target
 9 N(Dom 1 Act 5 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target
10 N(Dom 1 Act 6 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target
11 N(Dom 1 Act 7 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target

Need chosen: 11 N(Dom 1 Act 7 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target

Dom 1 s0001_0100_1001_1011 -7-> s0001_0000_1001_1011 [00/00/00/11_00/10/00/00_11/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0100_1001_1011 -7-> s0001_0000_1001_1011

Dom 1 Act 7 Adding Group G(r0001_0X0x_1001_1011, pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) from [s0001_0100_1001_1011, s0001_0001_1001_1011]

Dom 1 Act 7 Adding Group G(r0001_0xX0_xX01_1011, pn: 1, pnc: f, [00/00/00/11_00/X0/X0/00_XX/XX/00/11_11/00/11/11]) from [s0001_0010_0101_1011, s0001_0100_1001_1011]
Need satisfied

Number needs: 54, priority(count): 200(1) 250(7) 400(26) 401(9) 900(2) 902(5) 903(2) 904(2) 
Priority 200
Step: 44 All domain states: SC[s0_0001, s0001_0000_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(r0001_000x_11x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_00XX_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 2
       Grps: G(r0001_00XX_1x01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_00xX_1x01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 4
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(r0001_0xX0_xX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/X0/X0/00_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 2))

Dom: 1 Current State: s0001_0000_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 200 Sample Region r0001_0000_1001_1011 intersection of r0001_0X0x_1001_1011 [00/00/00/11_00/01/00/00_11/00/00/11_11/00/11/11] and r0001_0xX0_xX01_1011 [00/00/00/11_00/00/00/00_11/00/00/11_11/00/11/11]) At Target

Need chosen:  0 N(Dom 1 Act 7 Pri 200 Sample Region r0001_0000_1001_1011 intersection of r0001_0X0x_1001_1011 [00/00/00/11_00/01/00/00_11/00/00/11_11/00/11/11] and r0001_0xX0_xX01_1011 [00/00/00/11_00/00/00/00_11/00/00/11_11/00/11/11]) At Target

Dom 1 s0001_0000_1001_1011 -7-> s0001_0100_1001_1011 [00/00/00/11_00/01/00/00_11/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0000_1001_1011 -7-> s0001_0100_1001_1011

Dom 1 Act 7 square s0001_0000_1001_1011 [00/00/00/11_00/01/00/00_11/00/00/11_11/00/11/11] invalidates
             group r0001_0xX0_xX01_1011 [00/00/00/11_00/X0/X0/00_XX/XX/00/11_11/00/11/11]

Dom 1 Act 7 Adding Group G(r0001_0010_x101_1011, pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) from [s0001_0010_0101_1011, s0001_0010_1101_1011]
Need satisfied

Dom 1 Act 7 deleted unneeded squares: [s0001_0000_1001_1011]

Number needs: 57, priority(count): 250(11) 400(26) 401(9) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 45 All domain states: SC[s0_0001, s0001_0100_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(r0001_000x_11x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_00XX_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 2
       Grps: G(r0001_00XX_1x01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_00xX_1x01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 4
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0100_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_0001 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s0_0001 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s0_0001 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s0_0001 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s0_0001 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s0_0001 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target
 7 N(Dom 1 Act 2 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target
 8 N(Dom 1 Act 3 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target
 9 N(Dom 1 Act 5 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target
10 N(Dom 1 Act 6 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 250 Sample State s0_0001 not in a group) At Target

All domain states: SC[s0_0001, s0001_0100_1001_1011]

Dom 0 s0_0001 -1-> s0_0101 [00_00/01/00/11]

Dom 0 Adding square s0_0001 -1-> s0_0101

Dom 0 Act 1 Adding Group G(rx_xx0X, pn: 1, pnc: f, [XX_XX/X1/00/X1]) from [s0_0001, s1_1100]
Need satisfied

Number needs: 58, priority(count): 200(1) 250(9) 400(26) 401(11) 900(2) 902(5) 903(2) 904(2) 
Priority 200
Step: 46 All domain states: SC[s0_0101, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(rx_xx0X,  pn: 1, pnc: f, [XX_XX/X1/00/X1]) num Sqrs: 2 Sqrs in: 2 in1: 1))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 4
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(r1_1101,  pn: 1, pnc: f, [11_11/10/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 4
       Grps: G(rX_01x0,  pn: 1, pnc: f, [XX_01/11/XX/00]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 5
       Grps: G(rx_011x,  pn: 1, pnc: f, [Xx_00/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 3
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 0 Current State: s0_0101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 200 Sample Region rX_X101 intersection of rx_x1XX [XX_XX/11/00/10] and rx_xx0X [XX_XX/11/00/11]) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 200 Sample Region rX_X101 intersection of rx_x1XX [XX_XX/11/00/10] and rx_xx0X [XX_XX/11/00/11]) At Target

Dom 0 s0_0101 -1-> s0_0100 [00_00/11/00/10]

Dom 0 Adding square s0_0101 -1-> s0_0100

Dom 0 Act 1 square s0_0101 [00_00/11/00/10] invalidates
             group rx_xx0X [XX_XX/X1/00/X1]

Dom 0 Act 1 Adding Group G(r0_0001, pn: 1, pnc: f, [00_00/01/00/11])
Need satisfied

Number needs: 55, priority(count): 250(8) 400(26) 401(10) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 47 All domain states: SC[s0_0100, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 4
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(r1_1101,  pn: 1, pnc: f, [11_11/10/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 4
       Grps: G(rX_01x0,  pn: 1, pnc: f, [XX_01/11/XX/00]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 5
       Grps: G(rx_011x,  pn: 1, pnc: f, [Xx_00/11/11/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 3
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 0 Current State: s0_0100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 250 Sample State s0_0100 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s0_0100 not in a group) At Target
 2 N(Dom 0 Act 5 Pri 250 Sample State s0_0100 not in a group) At Target
 3 N(Dom 1 Act 1 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target
 4 N(Dom 1 Act 2 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target
 5 N(Dom 1 Act 3 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target
 6 N(Dom 1 Act 5 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target
 7 N(Dom 1 Act 6 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target

Need chosen:  6 N(Dom 1 Act 5 Pri 250 Sample State s0001_0100_1001_1011 not in a group) At Target

All domain states: SC[s0_0100, s0001_0100_1001_1011]

Dom 1 s0001_0100_1001_1011 -5-> s0001_0110_1001_1011 [00/00/00/11_00/11/01/00_11/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0100_1001_1011 -5-> s0001_0110_1001_1011

Dom 1 Act 5 Adding Group G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) from [s0001_0100_1001_1011, s0001_0011_1001_1011, s0001_0000_1101_1011]
Need satisfied

Number needs: 45, priority(count): 250(8) 300(1) 400(26) 401(10) 
Priority 250
Step: 48 All domain states: SC[s0_0100, s0001_0110_1001_1011] Status: Conflicted, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 in RC[rx_X10X, rXXXX_XX1x_x0XX_XXXX], -4 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(r0001_000x_11x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_00XX_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_00XX_Xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_00xX_1x01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 4
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0110_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 250 Sample State s0_0100 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s0_0100 not in a group) At Target
 2 N(Dom 0 Act 5 Pri 250 Sample State s0_0100 not in a group) At Target
 3 N(Dom 1 Act 1 Pri 250 Sample State s0001_0110_1001_1011 not in a group) At Target
 4 N(Dom 1 Act 2 Pri 250 Sample State s0001_0110_1001_1011 not in a group) At Target
 5 N(Dom 1 Act 3 Pri 250 Sample State s0001_0110_1001_1011 not in a group) At Target
 6 N(Dom 1 Act 6 Pri 250 Sample State s0001_0110_1001_1011 not in a group) At Target
 7 N(Dom 1 Act 7 Pri 250 Sample State s0001_0110_1001_1011 not in a group) At Target

Need chosen:  2 N(Dom 0 Act 5 Pri 250 Sample State s0_0100 not in a group) At Target

All domain states: SC[s0_0100, s0001_0110_1001_1011]

Dom 0 s0_0100 -5-> s1_0100 [01_00/11/00/00]

Dom 0 Adding square s0_0100 -5-> s1_0100

Dom 0 Act 5 Adding Group G(rX_01XX, pn: 1, pnc: f, [Xx_00/11/XX/XX]) from [s1_0111, s0_0100]
Need satisfied

Number needs: 44, priority(count): 250(7) 300(1) 400(26) 401(10) 
Priority 250
Step: 49 All domain states: SC[s1_0100, s0001_0110_1001_1011] Status: Conflicted, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 in RC[rx_X10X, rXXXX_XX1x_x0XX_XXXX], -4 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 4
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(r1_1101,  pn: 1, pnc: f, [11_11/10/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 4, number squares: 4
       Grps: G(rX_01x0,  pn: 1, pnc: f, [XX_01/11/XX/00]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 6
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 3
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 0 Current State: s1_0100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 250 Sample State s1_0100 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s1_0100 not in a group) At Target
 2 N(Dom 1 Act 1 Pri 250 Sample State s0001_0110_1001_1011 not in a group) At Target
 3 N(Dom 1 Act 2 Pri 250 Sample State s0001_0110_1001_1011 not in a group) At Target
 4 N(Dom 1 Act 3 Pri 250 Sample State s0001_0110_1001_1011 not in a group) At Target
 5 N(Dom 1 Act 6 Pri 250 Sample State s0001_0110_1001_1011 not in a group) At Target
 6 N(Dom 1 Act 7 Pri 250 Sample State s0001_0110_1001_1011 not in a group) At Target

Need chosen:  4 N(Dom 1 Act 3 Pri 250 Sample State s0001_0110_1001_1011 not in a group) At Target

All domain states: SC[s1_0100, s0001_0110_1001_1011]

Dom 1 s0001_0110_1001_1011 -3-> s0001_0111_0001_1011 [00/00/00/11_00/11/11/01_10/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0110_1001_1011 -3-> s0001_0111_0001_1011

Dom 1 Act 3 Adding Group G(r0001_0xXX_Xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/00/11_11/00/11/11]) from [s0001_0011_1001_1011, s0001_0110_1001_1011, s0001_0000_0101_1011]
Need satisfied

Number needs: 44, priority(count): 250(7) 300(1) 400(26) 401(10) 
Priority 250
Step: 50 All domain states: SC[s1_0100, s0001_0111_0001_1011] Status: Negative, in RC[rx_XX00, rXXXX_XXx1_0xXX_XXXX], -1 in RC[rx_X10X, rXXXX_XX1x_x0XX_XXXX], -4 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(r0001_000x_11x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_00XX_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_00xX_1x01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 4
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0111_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 250 Sample State s1_0100 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s1_0100 not in a group) At Target
 2 N(Dom 1 Act 1 Pri 250 Sample State s0001_0111_0001_1011 not in a group) At Target
 3 N(Dom 1 Act 2 Pri 250 Sample State s0001_0111_0001_1011 not in a group) At Target
 4 N(Dom 1 Act 5 Pri 250 Sample State s0001_0111_0001_1011 not in a group) At Target
 5 N(Dom 1 Act 6 Pri 250 Sample State s0001_0111_0001_1011 not in a group) At Target
 6 N(Dom 1 Act 7 Pri 250 Sample State s0001_0111_0001_1011 not in a group) At Target

Need chosen:  1 N(Dom 0 Act 3 Pri 250 Sample State s1_0100 not in a group) At Target

All domain states: SC[s1_0100, s0001_0111_0001_1011]

Dom 0 s1_0100 -3-> s1_0000 [11_00/10/00/00]

Dom 0 Adding square s1_0100 -3-> s1_0000

Dom 0 Act 3 Adding Group G(r1_x10x, pn: 1, pnc: f, [11_XX/10/00/XX]) from [s1_0100, s1_1101]
Need satisfied

Number needs: 49, priority(count): 250(11) 300(1) 400(26) 401(11) 
Priority 250
Step: 51 All domain states: SC[s1_0000, s0001_0111_0001_1011] Status: Negative, in RC[rx_XX00, rXXXX_XXx1_0xXX_XXXX], -1 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 5
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(r1_x10x,  pn: 1, pnc: f, [11_XX/10/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 4, number squares: 4
       Grps: G(rX_01x0,  pn: 1, pnc: f, [XX_01/11/XX/00]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 6
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 3
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 0 Current State: s1_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_0000 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_0000 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s1_0000 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s1_0000 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s1_0000 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s1_0000 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0111_0001_1011 not in a group) At Target
 7 N(Dom 1 Act 2 Pri 250 Sample State s0001_0111_0001_1011 not in a group) At Target
 8 N(Dom 1 Act 5 Pri 250 Sample State s0001_0111_0001_1011 not in a group) At Target
 9 N(Dom 1 Act 6 Pri 250 Sample State s0001_0111_0001_1011 not in a group) At Target
10 N(Dom 1 Act 7 Pri 250 Sample State s0001_0111_0001_1011 not in a group) At Target

Need chosen:  9 N(Dom 1 Act 6 Pri 250 Sample State s0001_0111_0001_1011 not in a group) At Target

All domain states: SC[s1_0000, s0001_0111_0001_1011]

Dom 1 s0001_0111_0001_1011 -6-> s0001_0101_0001_1011 [00/00/00/11_00/11/10/11_00/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0111_0001_1011 -6-> s0001_0101_0001_1011

Dom 1 Act 6 Adding Group G(r0001_0xxx_XX01_1011, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/00/11_11/00/11/11]) from [s0001_0000_1101_1011, s0001_0111_0001_1011]
Need satisfied

Number needs: 48, priority(count): 250(10) 300(1) 400(26) 401(11) 
Priority 250
Step: 52 All domain states: SC[s1_0000, s0001_0101_0001_1011] Status: Negative, in RC[rx_XX00, rXXXX_XXx1_0xXX_XXXX], -1 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(r0001_000x_11x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_00XX_xx01_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/XX/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxx_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 4
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0101_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_0000 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_0000 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s1_0000 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s1_0000 not in a group) At Target
 4 N(Dom 0 Act 5 Pri 250 Sample State s1_0000 not in a group) At Target
 5 N(Dom 0 Act 6 Pri 250 Sample State s1_0000 not in a group) At Target
 6 N(Dom 1 Act 1 Pri 250 Sample State s0001_0101_0001_1011 not in a group) At Target
 7 N(Dom 1 Act 2 Pri 250 Sample State s0001_0101_0001_1011 not in a group) At Target
 8 N(Dom 1 Act 5 Pri 250 Sample State s0001_0101_0001_1011 not in a group) At Target
 9 N(Dom 1 Act 7 Pri 250 Sample State s0001_0101_0001_1011 not in a group) At Target

Need chosen:  2 N(Dom 0 Act 3 Pri 250 Sample State s1_0000 not in a group) At Target

All domain states: SC[s1_0000, s0001_0101_0001_1011]

Dom 0 s1_0000 -3-> s1_0100 [11_00/01/00/00]

Dom 0 Adding square s1_0000 -3-> s1_0100

Dom 0 Act 3 Adding Group G(r1_XX0X, pn: 1, pnc: f, [11_XX/Xx/00/XX]) from [s1_1101, s1_0000]
Need satisfied

Number needs: 43, priority(count): 250(5) 300(1) 400(26) 401(11) 
Priority 250
Step: 53 All domain states: SC[s1_0100, s0001_0101_0001_1011] Status: Negative, in RC[rx_XX00, rXXXX_XXx1_0xXX_XXXX], -1 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 4
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_110X,  pn: 1, pnc: f, [XX_11/11/01/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 3, number squares: 6
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(rX_01x0,  pn: 1, pnc: f, [XX_01/11/XX/00]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 6
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 3
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 0 Current State: s1_0100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 250 Sample State s1_0100 not in a group) At Target
 1 N(Dom 1 Act 1 Pri 250 Sample State s0001_0101_0001_1011 not in a group) At Target
 2 N(Dom 1 Act 2 Pri 250 Sample State s0001_0101_0001_1011 not in a group) At Target
 3 N(Dom 1 Act 5 Pri 250 Sample State s0001_0101_0001_1011 not in a group) At Target
 4 N(Dom 1 Act 7 Pri 250 Sample State s0001_0101_0001_1011 not in a group) At Target

Need chosen:  2 N(Dom 1 Act 2 Pri 250 Sample State s0001_0101_0001_1011 not in a group) At Target

All domain states: SC[s1_0100, s0001_0101_0001_1011]

Dom 1 s0001_0101_0001_1011 -2-> s0001_0100_0101_1011 [00/00/00/11_00/11/00/10_00/01/00/11_11/00/11/11]

Dom 1 Adding square s0001_0101_0001_1011 -2-> s0001_0100_0101_1011

Dom 1 Act 2 Adding Group G(r0001_0xXx_XX01_1011, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/00/11_11/00/11/11]) from [s0001_0010_1101_1011, s0001_0101_0001_1011]
Need satisfied

Number needs: 52, priority(count): 250(4) 400(26) 401(11) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 54 All domain states: SC[s1_0100, s0001_0100_0101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 2
       Grps: G(r0001_000x_11x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/00/Xx_11/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxx_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 4
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0100_0101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 250 Sample State s1_0100 not in a group) At Target
 1 N(Dom 1 Act 1 Pri 250 Sample State s0001_0100_0101_1011 not in a group) At Target
 2 N(Dom 1 Act 5 Pri 250 Sample State s0001_0100_0101_1011 not in a group) At Target
 3 N(Dom 1 Act 7 Pri 250 Sample State s0001_0100_0101_1011 not in a group) At Target

Need chosen:  1 N(Dom 1 Act 1 Pri 250 Sample State s0001_0100_0101_1011 not in a group) At Target

Dom 1 s0001_0100_0101_1011 -1-> s0001_0101_0111_1011 [00/00/00/11_00/11/00/01_00/11/01/11_11/00/11/11]

Dom 1 Adding square s0001_0100_0101_1011 -1-> s0001_0101_0111_1011

Dom 1 Act 1 Adding Group G(r0001_0X0x_x1x1_1011, pn: 1, pnc: f, [00/00/00/11_00/XX/00/Xx_XX/11/Xx/11_11/00/11/11]) from [s0001_0100_0101_1011, s0001_0001_1111_1011]
Need satisfied

Number needs: 45, priority(count): 250(7) 300(1) 400(26) 401(11) 
Priority 250
Step: 55 All domain states: SC[s1_0100, s0001_0101_0111_1011] Status: Negative, in RC[rx_XX00, rXXXX_XXx1_0xXX_XXXX], -1 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0X0x_x1x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/00/Xx_XX/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxx_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 4
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0101_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 250 Sample State s1_0100 not in a group) At Target
 1 N(Dom 1 Act 2 Pri 250 Sample State s0001_0101_0111_1011 not in a group) At Target
 2 N(Dom 1 Act 3 Pri 250 Sample State s0001_0101_0111_1011 not in a group) At Target
 3 N(Dom 1 Act 4 Pri 250 Sample State s0001_0101_0111_1011 not in a group) At Target
 4 N(Dom 1 Act 5 Pri 250 Sample State s0001_0101_0111_1011 not in a group) At Target
 5 N(Dom 1 Act 6 Pri 250 Sample State s0001_0101_0111_1011 not in a group) At Target
 6 N(Dom 1 Act 7 Pri 250 Sample State s0001_0101_0111_1011 not in a group) At Target

Need chosen:  1 N(Dom 1 Act 2 Pri 250 Sample State s0001_0101_0111_1011 not in a group) At Target

Dom 1 s0001_0101_0111_1011 -2-> s0001_0100_0011_1011 [00/00/00/11_00/11/00/10_00/10/11/11_11/00/11/11]

Dom 1 Adding square s0001_0101_0111_1011 -2-> s0001_0100_0011_1011

Dom 1 Act 2 Adding Group G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) from [s0001_0010_1101_1011, s0001_0101_0111_1011, s0001_0011_0001_1011]
Need satisfied

Dom 1 Act 2 deleted unneeded squares: [s0001_0000_1101_1011, s0001_0101_0001_1011]

Number needs: 55, priority(count): 250(7) 400(26) 401(11) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 56 All domain states: SC[s1_0100, s0001_0100_0011_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0X0x_x1x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/00/Xx_XX/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxx_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 4
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0100_0011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 250 Sample State s1_0100 not in a group) At Target
 1 N(Dom 1 Act 1 Pri 250 Sample State s0001_0100_0011_1011 not in a group) At Target
 2 N(Dom 1 Act 3 Pri 250 Sample State s0001_0100_0011_1011 not in a group) At Target
 3 N(Dom 1 Act 4 Pri 250 Sample State s0001_0100_0011_1011 not in a group) At Target
 4 N(Dom 1 Act 5 Pri 250 Sample State s0001_0100_0011_1011 not in a group) At Target
 5 N(Dom 1 Act 6 Pri 250 Sample State s0001_0100_0011_1011 not in a group) At Target
 6 N(Dom 1 Act 7 Pri 250 Sample State s0001_0100_0011_1011 not in a group) At Target

Need chosen:  2 N(Dom 1 Act 3 Pri 250 Sample State s0001_0100_0011_1011 not in a group) At Target

Dom 1 s0001_0100_0011_1011 -3-> s0001_0101_1011_1011 [00/00/00/11_00/11/00/01_01/00/11/11_11/00/11/11]

Dom 1 Adding square s0001_0100_0011_1011 -3-> s0001_0101_1011_1011

Dom 1 Act 3 Adding Group G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) from [s0001_0011_1001_1011, s0001_0011_0101_1011, s0001_0100_0011_1011]
Need satisfied

Dom 1 Act 3 deleted unneeded squares: [s0001_0110_1001_1011, s0001_0000_0101_1011]

Number needs: 54, priority(count): 250(6) 400(26) 401(11) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 57 All domain states: SC[s1_0100, s0001_0101_1011_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0X0x_x1x1_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/00/Xx_XX/11/Xx/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxx_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 4
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0101_1011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 250 Sample State s1_0100 not in a group) At Target
 1 N(Dom 1 Act 1 Pri 250 Sample State s0001_0101_1011_1011 not in a group) At Target
 2 N(Dom 1 Act 4 Pri 250 Sample State s0001_0101_1011_1011 not in a group) At Target
 3 N(Dom 1 Act 5 Pri 250 Sample State s0001_0101_1011_1011 not in a group) At Target
 4 N(Dom 1 Act 6 Pri 250 Sample State s0001_0101_1011_1011 not in a group) At Target
 5 N(Dom 1 Act 7 Pri 250 Sample State s0001_0101_1011_1011 not in a group) At Target

Need chosen:  1 N(Dom 1 Act 1 Pri 250 Sample State s0001_0101_1011_1011 not in a group) At Target

Dom 1 s0001_0101_1011_1011 -1-> s0001_0100_1001_1011 [00/00/00/11_00/11/00/10_11/00/10/11_11/00/11/11]

Dom 1 Adding square s0001_0101_1011_1011 -1-> s0001_0100_1001_1011

Dom 1 Act 1 Adding Group G(r0001_0X0X_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/00/Xx_XX/XX/Xx/11_11/00/11/11]) from [s0001_0101_1011_1011, s0001_0100_0101_1011, s0001_0000_1101_1011]
Need satisfied

Number needs: 49, priority(count): 250(1) 400(26) 401(11) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 58 All domain states: SC[s1_0100, s0001_0100_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0X0X_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/00/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxx_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 4
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0100_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 250 Sample State s1_0100 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 2 Pri 250 Sample State s1_0100 not in a group) At Target

All domain states: SC[s1_0100, s0001_0100_1001_1011]

Dom 0 s1_0100 -2-> s1_0110 [11_00/11/01/00]

Dom 0 Adding square s1_0100 -2-> s1_0110

Dom 0 Act 2 Adding Group G(rX_x10x+, pn: 1, pnc: f, [XX_XX/11/01/XX]) from [s1_0100, s1_1101, s0_1100]
Need satisfied

Number needs: 49, priority(count): 250(1) 400(26) 401(11) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 59 All domain states: SC[s1_0110, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 5
       Grps: G(r0_0x11,  pn: 1, pnc: f, [00_00/Xx/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_x10x+, pn: 1, pnc: f, [XX_XX/11/01/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 6
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(rX_01x0,  pn: 1, pnc: f, [XX_01/11/XX/00]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 6
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 3
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 0 Current State: s1_0110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 250 Sample State s1_0110 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 2 Pri 250 Sample State s1_0110 not in a group) At Target

Dom 0 s1_0110 -2-> s1_0010 [11_00/10/11/00]

Dom 0 Adding square s1_0110 -2-> s1_0010

Dom 0 Act 2 Adding Group G(rx_0x1X, pn: 1, pnc: f, [XX_00/Xx/11/XX]) from [s0_0011, s1_0110]
Need satisfied

Number needs: 53, priority(count): 250(5) 400(26) 401(11) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 60 All domain states: SC[s1_0010, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 6
       Grps: G(rX_x10x+, pn: 1, pnc: f, [XX_XX/11/01/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rx_0x1X,  pn: 1, pnc: f, [XX_00/Xx/11/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 6
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(rX_01x0,  pn: 1, pnc: f, [XX_01/11/XX/00]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 6
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 3
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 0 Current State: s1_0010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_0010 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s1_0010 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s1_0010 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s1_0010 not in a group) At Target
 4 N(Dom 0 Act 6 Pri 250 Sample State s1_0010 not in a group) At Target

Need chosen:  4 N(Dom 0 Act 6 Pri 250 Sample State s1_0010 not in a group) At Target

Dom 0 s1_0010 -6-> s1_0010 [11_00/00/11/00]

Dom 0 Adding square s1_0010 -6-> s1_0010

Dom 0 Act 6 Adding Group G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) from [s1_0010, s0_0111, s1_1100]
Need satisfied

Number needs: 52, priority(count): 250(4) 400(26) 401(11) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 61 All domain states: SC[s1_0010, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 6
       Grps: G(rX_x10x+, pn: 1, pnc: f, [XX_XX/11/01/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rx_0x1X,  pn: 1, pnc: f, [XX_00/Xx/11/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 6
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(rX_01x0,  pn: 1, pnc: f, [XX_01/11/XX/00]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 5, number squares: 6
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s1_0010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_0010 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s1_0010 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s1_0010 not in a group) At Target
 3 N(Dom 0 Act 5 Pri 250 Sample State s1_0010 not in a group) At Target

Need chosen:  2 N(Dom 0 Act 4 Pri 250 Sample State s1_0010 not in a group) At Target

Dom 0 s1_0010 -4-> s1_1010 [11_01/00/11/00]

Dom 0 Adding square s1_0010 -4-> s1_1010

Dom 0 Act 4 Adding Group G(rX_0Xx0+, pn: 1, pnc: f, [XX_01/XX/XX/00]) from [s1_0100, s0_0110, s1_0010]
Need satisfied

Number needs: 52, priority(count): 250(4) 400(26) 401(11) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 62 All domain states: SC[s1_1010, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 6
       Grps: G(rX_x10x+, pn: 1, pnc: f, [XX_XX/11/01/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rx_0x1X,  pn: 1, pnc: f, [XX_00/Xx/11/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 6
       Grps: G(rX_x11x+, pn: 1, pnc: f, [XX_XX/11/10/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 5
       Grps: G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_0Xx0+, pn: 1, pnc: f, [XX_01/XX/XX/00]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 6
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s1_1010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1010 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_1010 not in a group) At Target
 2 N(Dom 0 Act 3 Pri 250 Sample State s1_1010 not in a group) At Target
 3 N(Dom 0 Act 4 Pri 250 Sample State s1_1010 not in a group) At Target

Need chosen:  2 N(Dom 0 Act 3 Pri 250 Sample State s1_1010 not in a group) At Target

Dom 0 s1_1010 -3-> s1_1000 [11_11/00/10/00]

Dom 0 Adding square s1_1010 -3-> s1_1000

Dom 0 Act 3 Adding Group G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) from [s1_1010, s1_1111, s0_1110, s1_0110]
Need satisfied

Number needs: 50, priority(count): 250(2) 400(26) 401(11) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 63 All domain states: SC[s1_1000, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 6
       Grps: G(rX_x10x+, pn: 1, pnc: f, [XX_XX/11/01/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rx_0x1X,  pn: 1, pnc: f, [XX_00/Xx/11/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 5
       Grps: G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_0Xx0+, pn: 1, pnc: f, [XX_01/XX/XX/00]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 6
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s1_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1000 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_1000 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 250 Sample State s1_1000 not in a group) At Target

Dom 0 s1_1000 -1-> s1_1001 [11_11/00/00/01]

Dom 0 Adding square s1_1000 -1-> s1_1001

Dom 0 Act 1 Adding Group G(r1_1X00, pn: 1, pnc: f, [11_11/XX/00/01]) from [s1_1100, s1_1000]
Need satisfied

Dom 0 Act 1 deleted unneeded squares: [s0_0101]

Number needs: 52, priority(count): 250(2) 400(26) 401(11) 402(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 64 All domain states: SC[s1_1001, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_1X00,  pn: 1, pnc: f, [11_11/XX/00/01]) num Sqrs: 2 Sqrs in: 2 in1: 1))
  ACT(ID: 2, number squares: 6
       Grps: G(rX_x10x+, pn: 1, pnc: f, [XX_XX/11/01/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rx_0x1X,  pn: 1, pnc: f, [XX_00/Xx/11/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 5
       Grps: G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_0Xx0+, pn: 1, pnc: f, [XX_01/XX/XX/00]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 6
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s1_1001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1001 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_1001 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 250 Sample State s1_1001 not in a group) At Target

Dom 0 s1_1001 -1-> s1_1000 [11_11/00/00/10]

Dom 0 Adding square s1_1001 -1-> s1_1000

Dom 0 Act 1 Adding Group G(r1_1x0X, pn: 1, pnc: f, [11_11/XX/00/Xx]) from [s1_1001, s1_1100]
Need satisfied

Number needs: 51, priority(count): 250(1) 400(26) 401(11) 402(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 65 All domain states: SC[s1_1000, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 5
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_1x0X,  pn: 1, pnc: f, [11_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 2))
  ACT(ID: 2, number squares: 6
       Grps: G(rX_x10x+, pn: 1, pnc: f, [XX_XX/11/01/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rx_0x1X,  pn: 1, pnc: f, [XX_00/Xx/11/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 5
       Grps: G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_0Xx0+, pn: 1, pnc: f, [XX_01/XX/XX/00]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 6
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s1_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 250 Sample State s1_1000 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 2 Pri 250 Sample State s1_1000 not in a group) At Target

Dom 0 s1_1000 -2-> s1_1010 [11_11/00/01/00]

Dom 0 Adding square s1_1000 -2-> s1_1010

Dom 0 Act 2 Adding Group G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) from [s1_0100, s1_1101, s1_1000, s0_1100]
Need satisfied

Number needs: 53, priority(count): 250(3) 400(26) 401(11) 402(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 66 All domain states: SC[s1_1010, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 5
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_1x0X,  pn: 1, pnc: f, [11_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 2))
  ACT(ID: 2, number squares: 7
       Grps: G(rx_0x1X,  pn: 1, pnc: f, [XX_00/Xx/11/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 5
       Grps: G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_0Xx0+, pn: 1, pnc: f, [XX_01/XX/XX/00]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 6
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s1_1010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1010 not in a group) At Target
 1 N(Dom 0 Act 2 Pri 250 Sample State s1_1010 not in a group) At Target
 2 N(Dom 0 Act 4 Pri 250 Sample State s1_1010 not in a group) At Target

Need chosen:  1 N(Dom 0 Act 2 Pri 250 Sample State s1_1010 not in a group) At Target

Dom 0 s1_1010 -2-> s1_1110 [11_11/01/11/00]

Dom 0 Adding square s1_1010 -2-> s1_1110

Dom 0 Act 2 Adding Group G(rX_Xx1x, pn: 1, pnc: f, [XX_XX/Xx/11/XX]) from [s1_1010, s0_0111]
Need satisfied

Number needs: 51, priority(count): 250(1) 400(26) 401(11) 402(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 67 All domain states: SC[s1_1110, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 5
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_1x0X,  pn: 1, pnc: f, [11_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 2))
  ACT(ID: 2, number squares: 8
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 5
       Grps: G(rX_1x0X,  pn: 1, pnc: f, [Xx_11/XX/00/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(rX_0Xx0+, pn: 1, pnc: f, [XX_01/XX/XX/00]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 6
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s1_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 250 Sample State s1_1110 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 4 Pri 250 Sample State s1_1110 not in a group) At Target

Dom 0 s1_1110 -4-> s0_1110 [10_11/11/11/00]

Dom 0 Adding square s1_1110 -4-> s0_1110

Dom 0 Act 4 Adding Group G(rx_x110, pn: 1, pnc: f, [X0_X1/11/11/00]) from [s0_0110, s1_1110]

Dom 0 Act 4 Adding Group G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) from [s1_1001, s0_1100, s1_1110]
Need satisfied

Number needs: 54, priority(count): 200(2) 400(26) 401(11) 402(4) 900(2) 902(5) 903(2) 904(2) 
Priority 200
Step: 68 All domain states: SC[s0_1110, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 5
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_1x0X,  pn: 1, pnc: f, [11_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 2))
  ACT(ID: 2, number squares: 8
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 6
       Grps: G(rx_x110,  pn: 1, pnc: f, [X0_X1/11/11/00]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_0Xx0+, pn: 1, pnc: f, [XX_01/XX/XX/00]) num Sqrs: 3 Sqrs in: 3 in1: 2),
             G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 2))
  ACT(ID: 5, number squares: 6
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s0_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 200 Sample Region r0_1110 intersection of rx_x110 [00_11/11/11/00] and rX_1xxX+ [01_11/11/11/00]) At Target

Need chosen:  0 N(Dom 0 Act 4 Pri 200 Sample Region r0_1110 intersection of rx_x110 [00_11/11/11/00] and rX_1xxX+ [01_11/11/11/00]) At Target

Dom 0 s0_1110 -4-> s1_1110 [01_11/11/11/00]

Dom 0 Adding square s0_1110 -4-> s1_1110

Dom 0 Act 4 square s0_1110 [01_11/11/11/00] invalidates
             group rx_x110 [X0_X1/11/11/00]
Need satisfied

Number needs: 50, priority(count): 400(26) 401(11) 402(2) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 69 All domain states: SC[s1_1110, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 5
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_1x0X,  pn: 1, pnc: f, [11_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 2))
  ACT(ID: 2, number squares: 8
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 7
       Grps: G(rX_0Xx0+, pn: 1, pnc: f, [XX_01/XX/XX/00]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 6
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s1_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 5 Pri 400 Get additional sample of state s1_1110 to confirm group rx_1xxX+) At Target
 1 N(Dom 1 Act 5 Pri 400 Get additional sample of state s0001_0100_1001_1011 to confirm group r0001_0Xxx_1x01_1011+) At Target
 2 N(Dom 1 Act 7 Pri 400 Get additional sample of state s0001_0100_1001_1011 to confirm group r0001_0X0x_1001_1011) At Target

Need chosen:  2 N(Dom 1 Act 7 Pri 400 Get additional sample of state s0001_0100_1001_1011 to confirm group r0001_0X0x_1001_1011) At Target

All domain states: SC[s1_1110, s0001_0100_1001_1011]

Dom 1 s0001_0100_1001_1011 -7-> s0001_0000_1001_1011 [00/00/00/11_00/10/00/00_11/00/00/11_11/00/11/11]

  Square s0001_0100_1001_1011 adding result 2 s0001_0000_1001_1011, pn 1, pnc false
Need satisfied

Number needs: 50, priority(count): 400(26) 401(11) 402(2) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 70 All domain states: SC[s1_1110, s0001_0000_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0X0X_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/00/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxx_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 4
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0000_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 5 Pri 400 Get additional sample of state s1_1110 to confirm group rx_1xxX+) At Target

Need chosen:  0 N(Dom 0 Act 5 Pri 400 Get additional sample of state s1_1110 to confirm group rx_1xxX+) At Target

All domain states: SC[s1_1110, s0001_0000_1001_1011]

Dom 0 s1_1110 -5-> s1_0110 [11_10/11/11/00]

Dom 0 Adding square s1_1110 -5-> s1_0110
Need satisfied

Number needs: 50, priority(count): 400(26) 401(11) 402(2) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 71 All domain states: SC[s1_0110, s0001_0000_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 5
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_1x0X,  pn: 1, pnc: f, [11_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 2))
  ACT(ID: 2, number squares: 8
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 7
       Grps: G(rX_0Xx0+, pn: 1, pnc: f, [XX_01/XX/XX/00]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s1_0110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 400 Get additional sample of state s1_0100 to confirm group rX_xX0x+) PCS[PC[P[0:3]]]/1/1/+0
 1 N(Dom 0 Act 4 Pri 400 Get additional sample of state s1_0100 to confirm group rX_0Xx0+) PCS[PC[P[0:3]]]/1/1/+0
 2 N(Dom 0 Act 5 Pri 400 Get additional sample of state s1_1110 to confirm group rx_1xxX+) PCS[PC[P[0:4]]]/1/1/+0
 3 N(Dom 0 Act 6 Pri 400 Get additional sample of state s1_0010 to confirm group rX_xxXx+) PCS[PC[P[0:2]]]/1/1/+0
 4 N(Dom 1 Act 5 Pri 400 Get additional sample of state s0001_0100_1001_1011 to confirm group r0001_0Xxx_1x01_1011+) PCS[PC[P[1:7]]]/1/1/+0
 5 N(Dom 1 Act 6 Pri 400 Get additional sample of state s0001_0000_1101_1011 to confirm group r0001_0xxx_XX01_1011) PCS[PC[P[1:2,4]]]/1/3/+0
 6 N(Dom 1 Act 7 Pri 400 Get additional sample of state s0001_0100_1001_1011 to confirm group r0001_0X0x_1001_1011) PCS[PC[P[1:7]]]/1/1/+0
 7 N(Dom 1 Act 7 Pri 400 Get additional sample of state s0001_0001_1001_1011 to confirm group r0001_0X0x_1001_1011) PCS[PC[P[1:4]]]/1/1/+0

Need chosen:  3 N(Dom 0 Act 6 Pri 400 Get additional sample of state s1_0010 to confirm group rX_xxXx+) PCS[PC[P[0:2]]]

Dom 0 s1_0110 -2-> s1_0010 [11_00/10/11/00]

  Square s1_0110 adding result 2 s1_0010, pn 1, pnc false
1 step run.

Dom 0 s1_0010 -6-> s1_0010 [11_00/00/11/00]

  Square s1_0010 adding result 2 s1_0010, pn 1, pnc false
Need satisfied

Number needs: 52, priority(count): 250(2) 400(26) 401(11) 402(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 72 All domain states: SC[s1_0010, s0001_0000_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 5
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_1x0X,  pn: 1, pnc: f, [11_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 2))
  ACT(ID: 2, number squares: 8
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 7
       Grps: G(rX_0Xx0+, pn: 1, pnc: f, [XX_01/XX/XX/00]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_01XX,  pn: 1, pnc: f, [Xx_00/11/XX/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s1_0010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_0010 not in a group) At Target
 1 N(Dom 0 Act 5 Pri 250 Sample State s1_0010 not in a group) At Target

Need chosen:  1 N(Dom 0 Act 5 Pri 250 Sample State s1_0010 not in a group) At Target

Dom 0 s1_0010 -5-> s0_0010 [10_00/00/11/00]

Dom 0 Adding square s1_0010 -5-> s0_0010

Dom 0 Act 5 Adding Group G(rx_X0xX, pn: 1, pnc: f, [X0_X0/00/XX/XX]) from [s0_1001, s1_0010]

Dom 0 Act 5 Adding Group G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) from [s1_0111, s0_0100, s1_0010]
Need satisfied

Number needs: 55, priority(count): 200(1) 201(1) 250(1) 400(26) 401(11) 402(4) 900(2) 902(5) 903(2) 904(2) 
Priority 200
Step: 73 All domain states: SC[s0_0010, s0001_0000_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 5
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_1x0X,  pn: 1, pnc: f, [11_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 2))
  ACT(ID: 2, number squares: 8
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 7
       Grps: G(rX_0Xx0+, pn: 1, pnc: f, [XX_01/XX/XX/00]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 3),
             G(rx_X0xX,  pn: 1, pnc: f, [X0_X0/00/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s0_0010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 5 Pri 200 Sample Region r1_10XX intersection of rx_1xxX+ [11_10/00/XX/XX] and rx_X0xX [10_10/00/XX/XX]) PCS[PC[P[0:5,4]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 5 Pri 200 Sample Region r1_10XX intersection of rx_1xxX+ [11_10/00/XX/XX] and rx_X0xX [10_10/00/XX/XX]) PCS[PC[P[0:5,4]]]

Dom 0 s0_0010 -5-> s1_0010 [01_00/00/11/00]

Dom 0 Adding square s0_0010 -5-> s1_0010

Dom 0 Act 5 square s0_0010 [01_00/00/11/00] invalidates
             group rx_X0xX [X0_X0/00/XX/XX]

Dom 0 s1_0010 -4-> s1_1010 [11_01/00/11/00]

  Square s1_0010 adding result 2 s1_1010, pn 1, pnc false
2 steps run.

Dom 0 s1_1010 -5-> s1_0010 [11_10/00/11/00]

Dom 0 Adding square s1_1010 -5-> s1_0010
Need satisfied

Dom 0 Act 5 deleted unneeded squares: [s0_0110, s0_0010, s1_1010]

Number needs: 51, priority(count): 250(1) 400(26) 401(11) 402(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 74 All domain states: SC[s1_0010, s0001_0000_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 5
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_1x0X,  pn: 1, pnc: f, [11_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 3 in1: 2))
  ACT(ID: 2, number squares: 8
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 7
       Grps: G(rX_0Xx0+, pn: 1, pnc: f, [XX_01/XX/XX/00]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s1_0010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_0010 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 250 Sample State s1_0010 not in a group) At Target

Dom 0 s1_0010 -1-> s1_0011 [11_00/00/11/01]

Dom 0 Adding square s1_0010 -1-> s1_0011

Dom 0 Act 1 Adding Group G(rX_0x1x, pn: 1, pnc: f, [XX_00/XX/11/Xx]) from [s1_0010, s0_0111]

Dom 0 Act 1 Adding Group G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx]) from [s1_0010, s1_1001, s1_1100]
Need satisfied

Number needs: 53, priority(count): 250(1) 400(26) 401(11) 402(2) 403(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 75 All domain states: SC[s1_0011, s0001_0000_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 6
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx]) num Sqrs: 3 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 8
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 7
       Grps: G(rX_0Xx0+, pn: 1, pnc: f, [XX_01/XX/XX/00]) num Sqrs: 3 Sqrs in: 3 in1: 3),
             G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s1_0011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 250 Sample State s1_0011 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 4 Pri 250 Sample State s1_0011 not in a group) At Target

Dom 0 s1_0011 -4-> s1_1011 [11_01/00/11/11]

Dom 0 Adding square s1_0011 -4-> s1_1011

Dom 0 Act 4 Adding Group G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) from [s1_0100, s0_0110, s1_0011]
Need satisfied

Number needs: 52, priority(count): 400(26) 401(11) 402(2) 403(2) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 76 All domain states: SC[s1_1011, s0001_0000_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 6
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx]) num Sqrs: 3 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 8
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s1_1011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 400 Get additional sample of state s1_1001 to confirm group rX_1xxX+) PCS[PC[P[0:3]]]/1/1/+0
 1 N(Dom 1 Act 5 Pri 400 Get additional sample of state s0001_0100_1001_1011 to confirm group r0001_0Xxx_1x01_1011+) PCS[PC[P[1:7]]]/1/1/+0
 2 N(Dom 1 Act 6 Pri 400 Get additional sample of state s0001_0000_1101_1011 to confirm group r0001_0xxx_XX01_1011) PCS[PC[P[1:2,4]]]/1/3/+0
 3 N(Dom 1 Act 7 Pri 400 Get additional sample of state s0001_0100_1001_1011 to confirm group r0001_0X0x_1001_1011) PCS[PC[P[1:7]]]/1/1/+0
 4 N(Dom 1 Act 7 Pri 400 Get additional sample of state s0001_0001_1001_1011 to confirm group r0001_0X0x_1001_1011) PCS[PC[P[1:4]]]/1/1/+0

Need chosen:  2 N(Dom 1 Act 6 Pri 400 Get additional sample of state s0001_0000_1101_1011 to confirm group r0001_0xxx_XX01_1011) PCS[PC[P[1:2,4]]]

All domain states: SC[s1_1011, s0001_0000_1001_1011]

Dom 1 s0001_0000_1001_1011 -2-> s0001_0001_1101_1011 [00/00/00/11_00/00/00/01_11/01/00/11_11/00/11/11]

Dom 1 s0001_0001_1101_1011 -4-> s0001_0000_1101_1011 [00/00/00/11_00/00/00/10_11/11/00/11_11/00/11/11]

  Square s0001_0001_1101_1011 adding result 2 s0001_0000_1101_1011, pn 1, pnc false
2 steps run.

Dom 1 s0001_0000_1101_1011 -6-> s0001_0010_1101_1011 [00/00/00/11_00/00/01/00_11/11/00/11_11/00/11/11]

  Square s0001_0000_1101_1011 adding result 2 s0001_0010_1101_1011, pn 1, pnc false
Need satisfied

Number needs: 53, priority(count): 250(1) 400(26) 401(11) 402(2) 403(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 77 All domain states: SC[s1_1011, s0001_0010_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0X0X_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/00/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxx_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 4
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0010_1101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 1 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

Need chosen:  0 N(Dom 1 Act 1 Pri 250 Sample State s0001_0010_1101_1011 not in a group) At Target

Dom 1 s0001_0010_1101_1011 -1-> s0001_0011_1111_1011 [00/00/00/11_00/00/11/01_11/11/01/11_11/00/11/11]

Dom 1 Adding square s0001_0010_1101_1011 -1-> s0001_0011_1111_1011

Dom 1 Act 1 Adding Group G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) from [s0001_0101_1011_1011, s0001_0010_1101_1011, s0001_0100_0101_1011]
Need satisfied

Dom 1 Act 1 deleted unneeded squares: [s0001_0000_1101_1011, s0001_0001_1111_1011]

Number needs: 56, priority(count): 250(4) 400(26) 401(11) 402(2) 403(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 78 All domain states: SC[s1_1011, s0001_0011_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxx_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 4
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0011_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 4 Pri 250 Sample State s0001_0011_1111_1011 not in a group) At Target
 1 N(Dom 1 Act 5 Pri 250 Sample State s0001_0011_1111_1011 not in a group) At Target
 2 N(Dom 1 Act 6 Pri 250 Sample State s0001_0011_1111_1011 not in a group) At Target
 3 N(Dom 1 Act 7 Pri 250 Sample State s0001_0011_1111_1011 not in a group) At Target

Need chosen:  3 N(Dom 1 Act 7 Pri 250 Sample State s0001_0011_1111_1011 not in a group) At Target

Dom 1 s0001_0011_1111_1011 -7-> s0001_0010_1111_1011 [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]

Dom 1 Adding square s0001_0011_1111_1011 -7-> s0001_0010_1111_1011

Dom 1 Act 7 Adding Group G(r0001_0011_1111_1011, pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11])
Need satisfied

Number needs: 57, priority(count): 250(4) 400(26) 401(11) 402(3) 403(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 79 All domain states: SC[s1_1011, s0001_0010_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxx_XX01_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 5
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0010_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 4 Pri 250 Sample State s0001_0010_1111_1011 not in a group) At Target
 1 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_1111_1011 not in a group) At Target
 2 N(Dom 1 Act 6 Pri 250 Sample State s0001_0010_1111_1011 not in a group) At Target
 3 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_1111_1011 not in a group) At Target

Need chosen:  2 N(Dom 1 Act 6 Pri 250 Sample State s0001_0010_1111_1011 not in a group) At Target

Dom 1 s0001_0010_1111_1011 -6-> s0001_0000_1111_1011 [00/00/00/11_00/00/10/00_11/11/11/11_11/00/11/11]

Dom 1 Adding square s0001_0010_1111_1011 -6-> s0001_0000_1111_1011

Dom 1 Act 6 Adding Group G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) from [s0001_0001_1001_1011, s0001_0111_0001_1011, s0001_0010_1111_1011]
Need satisfied

Dom 1 Act 6 deleted unneeded squares: [s0001_0010_1101_1011, s0001_0000_1101_1011]

Number needs: 56, priority(count): 250(3) 400(26) 401(11) 402(3) 403(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 80 All domain states: SC[s1_1011, s0001_0000_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 3
       Grps: G(r0001_0xXx_xx01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 5
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0000_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 4 Pri 250 Sample State s0001_0000_1111_1011 not in a group) At Target
 1 N(Dom 1 Act 5 Pri 250 Sample State s0001_0000_1111_1011 not in a group) At Target
 2 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_1111_1011 not in a group) At Target

Need chosen:  0 N(Dom 1 Act 4 Pri 250 Sample State s0001_0000_1111_1011 not in a group) At Target

Dom 1 s0001_0000_1111_1011 -4-> s0001_0001_1111_1011 [00/00/00/11_00/00/00/01_11/11/11/11_11/00/11/11]

Dom 1 Adding square s0001_0000_1111_1011 -4-> s0001_0001_1111_1011

Dom 1 Act 4 Adding Group G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) from [s0001_0010_0001_1011, s0001_0101_1001_1011, s0001_0000_1111_1011]
Need satisfied

Number needs: 55, priority(count): 250(2) 400(26) 401(11) 402(3) 403(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 81 All domain states: SC[s1_1011, s0001_0001_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0Xxx_1x01_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 5
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0001_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 5 Pri 250 Sample State s0001_0001_1111_1011 not in a group) At Target
 1 N(Dom 1 Act 7 Pri 250 Sample State s0001_0001_1111_1011 not in a group) At Target

Need chosen:  0 N(Dom 1 Act 5 Pri 250 Sample State s0001_0001_1111_1011 not in a group) At Target

Dom 1 s0001_0001_1111_1011 -5-> s0001_0011_1111_1011 [00/00/00/11_00/00/01/11_11/11/11/11_11/00/11/11]

Dom 1 Adding square s0001_0001_1111_1011 -5-> s0001_0011_1111_1011

Dom 1 Act 5 Adding Group G(r0001_0xxX_1XX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/XX/11_11/00/11/11]) from [s0001_0001_1111_1011, s0001_0011_1001_1011, s0001_0100_1001_1011]
Need satisfied

Number needs: 53, priority(count): 400(26) 401(11) 402(3) 403(2) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 82 All domain states: SC[s1_1011, s0001_0011_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_1XX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 5
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0011_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 400 Get additional sample of state s1_1001 to confirm group rX_1xxX+) PCS[PC[P[0:3]]]/1/1/+0
 1 N(Dom 1 Act 5 Pri 400 Get additional sample of state s0001_0001_1111_1011 to confirm group r0001_0xxX_1XX1_1011+) PCS[PC[P[1:6]]]/1/1/+0

Need chosen:  1 N(Dom 1 Act 5 Pri 400 Get additional sample of state s0001_0001_1111_1011 to confirm group r0001_0xxX_1XX1_1011+) PCS[PC[P[1:6]]]

Dom 1 s0001_0011_1111_1011 -6-> s0001_0001_1111_1011 [00/00/00/11_00/00/10/11_11/11/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0001_1111_1011 -5-> s0001_0011_1111_1011 [00/00/00/11_00/00/01/11_11/11/11/11_11/00/11/11]

  Square s0001_0001_1111_1011 adding result 2 s0001_0011_1111_1011, pn 1, pnc false
Need satisfied

Number needs: 53, priority(count): 400(26) 401(11) 402(3) 403(2) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 83 All domain states: SC[s1_1011, s0001_0011_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_1XX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 5
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0011_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 400 Get additional sample of state s1_1001 to confirm group rX_1xxX+) PCS[PC[P[0:3]]]/1/1/+0
 1 N(Dom 1 Act 5 Pri 400 Get additional sample of state s0001_0001_1111_1011 to confirm group r0001_0xxX_1XX1_1011+) PCS[PC[P[1:6]]]/1/1/+0

Need chosen:  1 N(Dom 1 Act 5 Pri 400 Get additional sample of state s0001_0001_1111_1011 to confirm group r0001_0xxX_1XX1_1011+) PCS[PC[P[1:6]]]

Dom 1 s0001_0011_1111_1011 -6-> s0001_0001_1111_1011 [00/00/00/11_00/00/10/11_11/11/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0001_1111_1011 -5-> s0001_0011_1111_1011 [00/00/00/11_00/00/01/11_11/11/11/11_11/00/11/11]

  Square s0001_0001_1111_1011 adding result 3 s0001_0011_1111_1011, pn 1, pnc changed from false to true
Need satisfied

Number needs: 52, priority(count): 400(25) 401(11) 402(3) 403(2) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 84 All domain states: SC[s1_1011, s0001_0011_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_1XX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 5
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0011_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 400 Get additional sample of state s1_1001 to confirm group rX_1xxX+) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 4 Pri 400 Get additional sample of state s1_1001 to confirm group rX_1xxX+) PCS[PC[P[0:3]]]

All domain states: SC[s1_1011, s0001_0011_1111_1011]

Dom 0 s1_1011 -3-> s1_1001 [11_11/00/10/11]
1 step run.

Dom 0 s1_1001 -4-> s0_1001 [10_11/00/00/11]

  Square s1_1001 adding result 2 s0_1001, pn 1, pnc false
Need satisfied

Number needs: 54, priority(count): 250(2) 400(25) 401(11) 402(3) 403(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 85 All domain states: SC[s0_1001, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 6
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx]) num Sqrs: 3 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 8
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s0_1001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_1001 not in a group) At Target
 1 N(Dom 0 Act 3 Pri 250 Sample State s0_1001 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 250 Sample State s0_1001 not in a group) At Target

Dom 0 s0_1001 -1-> s0_1000 [00_11/00/00/10]

Dom 0 Adding square s0_1001 -1-> s0_1000

Dom 0 Act 1 Adding Group G(rx_1x0X, pn: 1, pnc: f, [XX_11/XX/00/Xx]) from [s0_1001, s1_1100]
Need satisfied

Number needs: 55, priority(count): 250(1) 400(25) 401(11) 402(3) 403(2) 404(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 86 All domain states: SC[s0_1000, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 7
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx]) num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 4 in1: 1))
  ACT(ID: 2, number squares: 8
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 7
       Grps: G(r1_XX0X,  pn: 1, pnc: f, [11_XX/Xx/00/XX]) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s0_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 250 Sample State s0_1000 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 3 Pri 250 Sample State s0_1000 not in a group) At Target

Dom 0 s0_1000 -3-> s0_1100 [00_11/01/00/00]

Dom 0 Adding square s0_1000 -3-> s0_1100

Dom 0 Act 3 Adding Group G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) from [s0_1000, s1_0000, s1_1101]

Dom 0 Act 3 Adding Group G(r0_1xx0, pn: 1, pnc: f, [00_11/X1/X0/00]) from [s0_1000, s0_1110]
Need satisfied

Number needs: 58, priority(count): 200(1) 201(1) 400(25) 401(11) 402(5) 403(2) 404(2) 900(2) 902(5) 903(2) 904(2) 
Priority 200
Step: 87 All domain states: SC[s0_1100, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 7
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx]) num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 4 in1: 1))
  ACT(ID: 2, number squares: 8
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 4 in1: 3),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 4 in1: 3),
             G(r0_1xx0,  pn: 1, pnc: f, [00_11/X1/X0/00]) num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s0_1100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 200 Sample Region r0_1010 intersection of rX_Xx1x+ [00_11/00/10/00] and r0_1xx0 [00_11/01/10/00]) PCS[PC[P[0:2,2]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 200 Sample Region r0_1010 intersection of rX_Xx1x+ [00_11/00/10/00] and r0_1xx0 [00_11/01/10/00]) PCS[PC[P[0:2,2]]]

Dom 0 s0_1100 -2-> s0_1110 [00_11/11/01/00]

  Square s0_1100 adding result 2 s0_1110, pn 1, pnc false

Dom 0 s0_1110 -2-> s0_1010 [00_11/10/11/00]
2 steps run.

Dom 0 s0_1010 -3-> s0_1000 [00_11/00/10/00]

Dom 0 Adding square s0_1010 -3-> s0_1000

Dom 0 Act 3 square s0_1010 [00_11/00/10/00] invalidates
             group r0_1xx0 [00_11/X1/X0/00]
Need satisfied

Number needs: 54, priority(count): 400(25) 401(11) 402(3) 403(2) 404(2) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 88 All domain states: SC[s0_1000, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 7
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx]) num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 4 in1: 1))
  ACT(ID: 2, number squares: 8
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 9
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s0_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 400 Get additional sample of state s0_1001 to confirm group rX_xX0x+) PCS[PC[P[0:1]]]/1/1/+0
 1 N(Dom 0 Act 5 Pri 400 Get additional sample of state s0_1001 to confirm group rx_1xxX+) PCS[PC[P[0:1]]]/1/1/+0

Need chosen:  1 N(Dom 0 Act 5 Pri 400 Get additional sample of state s0_1001 to confirm group rx_1xxX+) PCS[PC[P[0:1]]]

Dom 0 s0_1000 -1-> s0_1001 [00_11/00/00/01]
1 step run.

Dom 0 s0_1001 -5-> s0_0001 [00_10/00/00/11]

  Square s0_1001 adding result 2 s0_0001, pn 1, pnc false
Need satisfied

Number needs: 52, priority(count): 400(25) 401(11) 402(3) 403(2) 404(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 89 All domain states: SC[s0_0001, s0001_0011_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 in RC[rx_0xx1, rXXXX_XXX1_1XXX_XXXX], 2 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 7
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx]) num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 4 in1: 1))
  ACT(ID: 2, number squares: 8
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 9
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s0_0001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 400 Get additional sample of state s0_1001 to confirm group rX_xX0x+) PCS[PC[P[0:4]]]/1/1/+0
 1 N(Dom 0 Act 5 Pri 400 Get additional sample of state s0_1001 to confirm group rx_1xxX+) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 400 Get additional sample of state s0_1001 to confirm group rX_xX0x+) PCS[PC[P[0:4]]]

Dom 0 s0_0001 -4-> s0_1001 [00_01/00/00/11]
1 step run.

Dom 0 s0_1001 -2-> s0_1011 [00_11/00/01/11]

Dom 0 Adding square s0_1001 -2-> s0_1011
Need satisfied

Number needs: 55, priority(count): 250(1) 400(25) 401(11) 402(3) 403(2) 404(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 90 All domain states: SC[s0_1011, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 7
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx]) num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 4 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 9
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s0_1011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_1011 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 250 Sample State s0_1011 not in a group) At Target

Dom 0 s0_1011 -1-> s0_1001 [00_11/00/10/11]

Dom 0 Adding square s0_1011 -1-> s0_1001

Dom 0 Act 1 Adding Group G(r0_1011, pn: 1, pnc: f, [00_11/00/10/11])
Need satisfied

Number needs: 55, priority(count): 400(25) 401(11) 402(3) 403(2) 404(2) 405(1) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 91 All domain states: SC[s0_1001, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx]) num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 1, pnc: f, [00_11/00/10/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 9
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s0_1001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 400 Get additional sample of state s0_1001 to confirm group rX_xX0x+) At Target
 1 N(Dom 0 Act 5 Pri 400 Get additional sample of state s0_1001 to confirm group rx_1xxX+) At Target

Need chosen:  0 N(Dom 0 Act 2 Pri 400 Get additional sample of state s0_1001 to confirm group rX_xX0x+) At Target

Dom 0 s0_1001 -2-> s0_1011 [00_11/00/01/11]

  Square s0_1001 adding result 2 s0_1011, pn 1, pnc false
Need satisfied

Number needs: 55, priority(count): 400(25) 401(11) 402(3) 403(2) 404(2) 405(1) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 92 All domain states: SC[s0_1011, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx]) num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 1, pnc: f, [00_11/00/10/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 9
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s0_1011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 400 Get additional sample of state s0_1001 to confirm group rX_xX0x+) PCS[PC[P[0:3]]]/1/1/+0
 1 N(Dom 0 Act 5 Pri 400 Get additional sample of state s0_1001 to confirm group rx_1xxX+) PCS[PC[P[0:1]]]/1/1/+0

Need chosen:  1 N(Dom 0 Act 5 Pri 400 Get additional sample of state s0_1001 to confirm group rx_1xxX+) PCS[PC[P[0:1]]]

Dom 0 s0_1011 -1-> s0_1111 [00_11/01/11/11]

  Square s0_1011 adding result 2 s0_1111, pn changed from 1 to 2, pnc false

Dom 0 Act 1 square s0_1011 pn: 2 invalidates
             group r0_1011 pn: 1

Change [s0_1011 -01> s0_1111] unexpected, expected STP[r0_1011 -01> r0_1001 Alt: None]
Run plan failed, domain::run_plan: Unexpected result, step failed.
Try again with PCS[PC[[P[0, r0_1111-3->r0_1101-3->r0_1001]]]]

Dom 0 s0_1111 -3-> s0_1101 [00_11/11/10/11]

Dom 0 s0_1101 -3-> s0_1001 [00_11/10/00/11]
2 steps run.

Dom 0 s0_1001 -5-> s0_0001 [00_10/00/00/11]

  Square s0_1001 adding result 3 s0_0001, pn 1, pnc changed from false to true
Need satisfied

Number needs: 52, priority(count): 252(1) 400(24) 401(11) 402(3) 403(2) 404(2) 902(5) 903(2) 904(2) 
Priority 252
Step: 93 All domain states: SC[s0_0001, s0001_0011_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 in RC[rx_0xx1, rXXXX_XXX1_1XXX_XXXX], 2 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx]) num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 4 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 9
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s0_0001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 252 Sample State s0_1011 not in a group) PCS[PC[P[0:2,4]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 252 Sample State s0_1011 not in a group) PCS[PC[P[0:2,4]]]

Dom 0 s0_0001 -2-> s0_0011 [00_00/00/01/11]

Dom 0 s0_0011 -4-> s0_1011 [00_01/00/11/11]
2 steps run.

Dom 0 s0_1011 -1-> s0_1001 [00_11/00/10/11]

  Square s0_1011 adding result 3 s0_1001, pn 2, pnc false
Need satisfied

Number needs: 54, priority(count): 251(1) 400(24) 401(11) 402(3) 403(2) 404(2) 900(2) 902(5) 903(2) 904(2) 
Priority 251
Step: 94 All domain states: SC[s0_1001, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx]) num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx]) num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx]) num Sqrs: 2 Sqrs in: 4 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 9
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s0_1001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 251 Sample State s0_1011 not in a group) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 251 Sample State s0_1011 not in a group) PCS[PC[P[0:2]]]

Dom 0 s0_1001 -2-> s0_1011 [00_11/00/01/11]

  Square s0_1001 adding result 3 s0_1011, pn 1, pnc changed from false to true
1 step run.

Dom 0 s0_1011 -1-> s0_1111 [00_11/01/11/11]

  Square s0_1011 adding result 4 s0_1111, pn 2, pnc changed from false to true

Dom 0 Act 1 Adding Group G(r0_1011, pn: 2, pnc: f, [00_11/00/10/11, 00_11/01/11/11])
Need satisfied
Dom 0 Act 1 Group r0_1011 confirmed

Number needs: 57, priority(count): 400(23) 401(11) 402(3) 403(2) 404(2) 605(5) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 95 All domain states: SC[s0_1111, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 9
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 4
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 0 Current State: s0_1111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 400 Get additional sample of state s0_0111 to confirm group rx_x1XX) PCS[PC[P[0:5]]]/1/1/+0
 1 N(Dom 0 Act 3 Pri 400 Get additional sample of state s0_0111 to confirm group rX_Xx1x+) PCS[PC[P[0:5]]]/1/1/+0
 2 N(Dom 0 Act 4 Pri 400 Get additional sample of state s0_1110 to confirm group rX_1xxX+) PCS[PC[P[0:1]]]/1/1/+0
 3 N(Dom 0 Act 6 Pri 400 Get additional sample of state s0_1101 to confirm group rX_xxXx+) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  3 N(Dom 0 Act 6 Pri 400 Get additional sample of state s0_1101 to confirm group rX_xxXx+) PCS[PC[P[0:3]]]

Dom 0 s0_1111 -3-> s0_1101 [00_11/11/10/11]
1 step run.

Dom 0 s0_1101 -6-> s0_1101 [00_11/11/00/11]

Dom 0 Adding square s0_1101 -6-> s0_1101
Need satisfied

Number needs: 57, priority(count): 400(23) 401(11) 402(3) 403(2) 404(2) 605(5) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 96 All domain states: SC[s0_1101, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 9
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 400 Get additional sample of state s0_1101 to confirm group rX_xxXx+) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 400 Get additional sample of state s0_1101 to confirm group rX_xxXx+) At Target

Dom 0 s0_1101 -6-> s0_1101 [00_11/11/00/11]

  Square s0_1101 adding result 2 s0_1101, pn 1, pnc false
Need satisfied

Number needs: 57, priority(count): 400(23) 401(11) 402(3) 403(2) 404(2) 605(5) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 97 All domain states: SC[s0_1101, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 9
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 400 Get additional sample of state s0_1101 to confirm group rX_xxXx+) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 400 Get additional sample of state s0_1101 to confirm group rX_xxXx+) At Target

Dom 0 s0_1101 -6-> s0_1101 [00_11/11/00/11]

  Square s0_1101 adding result 3 s0_1101, pn 1, pnc changed from false to true
Need satisfied

Number needs: 56, priority(count): 400(22) 401(11) 402(3) 403(2) 404(2) 605(5) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 98 All domain states: SC[s0_1101, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 9
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 400 Get additional sample of state s0_0111 to confirm group rx_x1XX) PCS[PC[P[0:2,5]]]/2/2/+0
 1 N(Dom 0 Act 1 Pri 400 Get additional sample of state s1_1100 to confirm group rx_x1XX) PCS[PC[P[0:1,4]]]/2/2/+0
 2 N(Dom 0 Act 3 Pri 400 Get additional sample of state s0_0111 to confirm group rX_Xx1x+) PCS[PC[P[0:5,2]]]/2/2/+0
 3 N(Dom 0 Act 4 Pri 400 Get additional sample of state s1_1001 to confirm group rX_1xxX+) PCS[PC[P[0:4,3]]]/2/2/+0
 4 N(Dom 0 Act 4 Pri 400 Get additional sample of state s0_1110 to confirm group rX_1xxX+) PCS[PC[P[0:2,1]]]/2/2/+0
 5 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0010_1101_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[1:1]]]/2/2/+0
 6 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0011_1001_1011 to confirm group r0001_0xXX_Xxx1_1011+) PCS[PC[P[0:3]], PC[P[1:1,2]]]/3/5/+0
 7 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0101_1111_1011 to confirm group r0001_0xXx_xxx1_1011+) PCS[PC[P[1:1,7,2,7,2,1]]]/2/10/-4

Need chosen:  0 N(Dom 0 Act 1 Pri 400 Get additional sample of state s0_0111 to confirm group rx_x1XX) PCS[PC[P[0:2,5]]]

Dom 0 s0_1101 -2-> s0_1111 [00_11/11/01/11]

Dom 0 s0_1111 -5-> s0_0111 [00_10/11/11/11]
2 steps run.

Dom 0 s0_0111 -1-> s0_0110 [00_00/11/11/10]

  Square s0_0111 adding result 2 s0_0110, pn 1, pnc false
Need satisfied

Number needs: 56, priority(count): 400(22) 401(11) 402(3) 403(2) 404(2) 605(5) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 99 All domain states: SC[s0_0110, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 9
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 400 Get additional sample of state s0_0111 to confirm group rx_x1XX) PCS[PC[P[0:1]]]/1/1/+0
 1 N(Dom 0 Act 3 Pri 400 Get additional sample of state s0_0111 to confirm group rX_Xx1x+) PCS[PC[P[0:1]]]/1/1/+0
 2 N(Dom 0 Act 4 Pri 400 Get additional sample of state s0_1110 to confirm group rX_1xxX+) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  1 N(Dom 0 Act 3 Pri 400 Get additional sample of state s0_0111 to confirm group rX_Xx1x+) PCS[PC[P[0:1]]]

Dom 0 s0_0110 -1-> s0_0111 [00_00/11/11/01]
1 step run.

Dom 0 s0_0111 -3-> s0_0101 [00_00/11/10/11]

Dom 0 Adding square s0_0111 -3-> s0_0101
Need satisfied

Dom 0 Act 3 deleted unneeded squares: [s1_0100, s0_1010]

Number needs: 55, priority(count): 400(22) 401(11) 402(3) 403(2) 404(2) 605(5) 900(1) 902(5) 903(2) 904(2) 
Priority 400
Step: 100 All domain states: SC[s0_0101, s0001_0011_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 in RC[rx_0xx1, rXXXX_XXX1_1XXX_XXXX], 2 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 400 Get additional sample of state s0_0111 to confirm group rx_x1XX) PCS[PC[P[0:2]]]/1/1/+0
 1 N(Dom 0 Act 3 Pri 400 Get additional sample of state s0_0111 to confirm group rX_Xx1x+) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 400 Get additional sample of state s0_0111 to confirm group rx_x1XX) PCS[PC[P[0:2]]]

Dom 0 s0_0101 -2-> s0_0111 [00_00/11/01/11]
1 step run.

Dom 0 s0_0111 -1-> s0_0110 [00_00/11/11/10]

  Square s0_0111 adding result 3 s0_0110, pn 1, pnc changed from false to true
Need satisfied

Number needs: 56, priority(count): 52(2) 400(21) 401(11) 402(2) 403(2) 404(2) 605(5) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 101 All domain states: SC[s0_0110, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r1_XXXX, rX_X1XX, rX_0XXX], defining regions: []
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get sample in r0_0011 to find closer incompatible pair within r0_xX11) PCS[PC[P[0:2,1]]]/2/2/+0
 1 N(Dom 0 Act 1 Pri 52 Get sample in r0_1111 to find closer incompatible pair within r0_xX11) PCS[PC[P[0:4,1]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get sample in r0_0011 to find closer incompatible pair within r0_xX11) PCS[PC[P[0:2,1]]]

Dom 0 s0_0110 -2-> s0_0010 [00_00/10/11/00]

Dom 0 s0_0010 -1-> s0_0011 [00_00/00/11/01]
2 steps run.

Dom 0 s0_0011 -1-> s0_0010 [00_00/00/11/10]

Dom 0 Adding square s0_0011 -1-> s0_0010
Need satisfied

Dom 0 Act 1 deleted unneeded squares: [s1_1000]

Number needs: 55, priority(count): 52(1) 400(21) 401(11) 402(2) 403(2) 404(2) 605(5) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 102 All domain states: SC[s0_0010, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r1_XXXX, rX_X1XX, rX_0XXX], defining regions: []
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0011 to find closer incompatible pair within r0_xX11) PCS[PC[P[0:1]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0011 to find closer incompatible pair within r0_xX11) PCS[PC[P[0:1]]]

Dom 0 s0_0010 -1-> s0_0011 [00_00/00/11/01]
1 step run.

Dom 0 s0_0011 -1-> s0_0010 [00_00/00/11/10]

  Square s0_0011 adding result 2 s0_0010, pn 1, pnc false
Need satisfied

Number needs: 55, priority(count): 52(1) 400(21) 401(11) 402(2) 403(2) 404(2) 605(5) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 103 All domain states: SC[s0_0010, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r1_XXXX, rX_X1XX, rX_0XXX], defining regions: []
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0011 to find closer incompatible pair within r0_xX11) PCS[PC[P[0:1]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0011 to find closer incompatible pair within r0_xX11) PCS[PC[P[0:1]]]

Dom 0 s0_0010 -1-> s0_0011 [00_00/00/11/01]
1 step run.

Dom 0 s0_0011 -1-> s0_0010 [00_00/00/11/10]

  Square s0_0011 adding result 3 s0_0010, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]

Number needs: 53, priority(count): 400(21) 401(11) 402(2) 403(2) 404(2) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 104 All domain states: SC[s0_0010, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_xxXx+, pn: 1, pnc: f, [XX_XX/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 400 Get additional sample of state s1_0010 to confirm group rX_xxXx+) PCS[PC[P[0:5]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 6 Pri 400 Get additional sample of state s1_0010 to confirm group rX_xxXx+) PCS[PC[P[0:5]]]

Dom 0 s0_0010 -5-> s1_0010 [01_00/00/11/00]

  Square s0_0010 adding result 2 s1_0010, pn 1, pnc false
1 step run.

Dom 0 s1_0010 -6-> s1_0010 [11_00/00/11/00]

  Square s1_0010 adding result 3 s1_0010, pn 1, pnc changed from false to true
Dom 0 Act 6 Group rX_xxXx confirmed
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]

Number needs: 57, priority(count): 400(20) 401(11) 402(2) 403(2) 404(2) 600(5) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 105 All domain states: SC[s1_0010, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_xxXx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s0_1101) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 400 Get additional sample of state s1_1010 to confirm group rX_Xx1x+) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 400 Get additional sample of state s1_1010 to confirm group rX_Xx1x+) PCS[PC[P[0:4]]]

Dom 0 s1_0010 -4-> s1_1010 [11_01/00/11/00]

  Square s1_0010 adding result 3 s1_1010, pn 1, pnc changed from false to true
1 step run.

Dom 0 s1_1010 -3-> s1_1000 [11_11/00/10/00]

  Square s1_1010 adding result 2 s1_1000, pn 1, pnc false
Need satisfied
Dom 0 Act 6 Group rX_xxXx set limited on, adj mask m0_0000
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]

Number needs: 52, priority(count): 400(20) 401(11) 402(2) 403(2) 404(2) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 106 All domain states: SC[s1_1000, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 400 Get additional sample of state s1_1100 to confirm group rx_x1XX) PCS[PC[P[0:3]]]/1/1/+0
 1 N(Dom 0 Act 3 Pri 400 Get additional sample of state s1_1010 to confirm group rX_Xx1x+) PCS[PC[P[0:2]]]/1/1/+0
 2 N(Dom 0 Act 4 Pri 400 Get additional sample of state s1_1001 to confirm group rX_1xxX+) PCS[PC[P[0:1]]]/1/1/+0

Need chosen:  2 N(Dom 0 Act 4 Pri 400 Get additional sample of state s1_1001 to confirm group rX_1xxX+) PCS[PC[P[0:1]]]

Dom 0 s1_1000 -1-> s1_1001 [11_11/00/00/01]

  Square s1_1000 adding result 2 s1_1001, pn 1, pnc false
1 step run.

Dom 0 s1_1001 -4-> s0_1001 [10_11/00/00/11]

  Square s1_1001 adding result 3 s0_1001, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]

Number needs: 53, priority(count): 53(1) 400(19) 401(11) 402(2) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 107 All domain states: SC[s0_1001, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX1X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XXX1, rX_XX0X, rX_1XXX], defining regions: []
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 53 Get additional sample of state s1_0011 to find closer incompatible pair within r1_X0xX) PCS[PC[P[0:2,4,5]]]/3/3/+0

Need chosen:  0 N(Dom 0 Act 4 Pri 53 Get additional sample of state s1_0011 to find closer incompatible pair within r1_X0xX) PCS[PC[P[0:2,4,5]]]

Dom 0 s0_1001 -2-> s0_1011 [00_11/00/01/11]

  Square s0_1001 adding result 4 s0_1011, pn 1, pnc true

Dom 0 s0_1011 -4-> s1_1011 [01_11/00/11/11]

Dom 0 s1_1011 -5-> s1_0011 [11_10/00/11/11]
3 steps run.

Dom 0 s1_0011 -4-> s1_1011 [11_01/00/11/11]

  Square s1_0011 adding result 2 s1_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]

Number needs: 53, priority(count): 53(1) 400(19) 401(11) 402(2) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 108 All domain states: SC[s1_1011, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX1X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XXX1, rX_XX0X, rX_1XXX], defining regions: []
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 53 Get additional sample of state s1_0011 to find closer incompatible pair within r1_X0xX) PCS[PC[P[0:5]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 4 Pri 53 Get additional sample of state s1_0011 to find closer incompatible pair within r1_X0xX) PCS[PC[P[0:5]]]

Dom 0 s1_1011 -5-> s1_0011 [11_10/00/11/11]
1 step run.

Dom 0 s1_0011 -4-> s1_1011 [11_01/00/11/11]

  Square s1_0011 adding result 3 s1_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]

Number needs: 54, priority(count): 52(2) 400(19) 401(11) 402(2) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 109 All domain states: SC[s1_1011, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX1X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX0X, rX_1XXX], defining regions: []
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 52 Get sample in r1_1011 to find closer incompatible pair within r1_X0x1) At Target

Need chosen:  0 N(Dom 0 Act 4 Pri 52 Get sample in r1_1011 to find closer incompatible pair within r1_X0x1) At Target

Dom 0 s1_1011 -4-> s0_1011 [10_11/00/11/11]

Dom 0 Adding square s1_1011 -4-> s0_1011
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]

Dom 0 Act 4 deleted unneeded squares: [s1_0010]

Number needs: 53, priority(count): 52(1) 400(19) 401(11) 402(2) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 110 All domain states: SC[s0_1011, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX1X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX0X, rX_1XXX], defining regions: []
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 52 Get additional sample of state s1_1011 to find closer incompatible pair within r1_X0x1) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 4 Pri 52 Get additional sample of state s1_1011 to find closer incompatible pair within r1_X0x1) PCS[PC[P[0:4]]]

Dom 0 s0_1011 -4-> s1_1011 [01_11/00/11/11]
1 step run.

Dom 0 s1_1011 -4-> s0_1011 [10_11/00/11/11]

  Square s1_1011 adding result 2 s0_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]

Number needs: 53, priority(count): 52(1) 400(19) 401(11) 402(2) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 111 All domain states: SC[s0_1011, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX1X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX0X, rX_1XXX], defining regions: []
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 52 Get additional sample of state s1_1011 to find closer incompatible pair within r1_X0x1) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 4 Pri 52 Get additional sample of state s1_1011 to find closer incompatible pair within r1_X0x1) PCS[PC[P[0:4]]]

Dom 0 s0_1011 -4-> s1_1011 [01_11/00/11/11]
1 step run.

Dom 0 s1_1011 -4-> s0_1011 [10_11/00/11/11]

  Square s1_1011 adding result 3 s0_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 52, priority(count): 400(19) 401(11) 402(2) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 112 All domain states: SC[s0_1011, s0001_0011_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 400 Get additional sample of state s1_1010 to confirm group rX_Xx1x+) PCS[PC[P[0:4,1]]]/2/2/+0
 1 N(Dom 0 Act 3 Pri 400 Get additional sample of state s0_0111 to confirm group rX_Xx1x+) PCS[PC[P[0:5,2]]]/2/2/+0
 2 N(Dom 0 Act 4 Pri 400 Get additional sample of state s0_1110 to confirm group rX_1xxX+) PCS[PC[P[0:2,1]]]/2/2/+0
 3 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0010_1101_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[1:1]]]/2/2/+0
 4 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0011_1001_1011 to confirm group r0001_0xXX_Xxx1_1011+) PCS[PC[P[1:2,1]]]/2/4/+0
 5 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0101_1111_1011 to confirm group r0001_0xXx_xxx1_1011+) PCS[PC[P[1:1,7,2,7,1,2]]]/2/10/+0

Need chosen:  3 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0010_1101_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[1:1]]]

All domain states: SC[s0_1011, s0001_0011_1111_1011]

Dom 1 s0001_0011_1111_1011 -1-> s0001_0010_1101_1011 [00/00/00/11_00/00/11/10_11/11/10/11_11/00/11/11]
1 step run.

Dom 1 s0001_0010_1101_1011 -2-> s0001_0011_1001_1011 [00/00/00/11_00/00/11/01_11/10/00/11_11/00/11/11]

  Square s0001_0010_1101_1011 adding result 2 s0001_0011_1001_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 53, priority(count): 250(1) 400(19) 401(11) 402(2) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 113 All domain states: SC[s0_1011, s0001_0011_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_1XX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 5
       Grps: G(r0001_0X0x_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/00/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1))

Dom: 1 Current State: s0001_0011_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target

Need chosen:  0 N(Dom 1 Act 7 Pri 250 Sample State s0001_0011_1001_1011 not in a group) At Target

Dom 1 s0001_0011_1001_1011 -7-> s0001_0111_1001_1011 [00/00/00/11_00/01/11/11_11/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0011_1001_1011 -7-> s0001_0111_1001_1011

Dom 1 Act 7 Adding Group G(r0001_0Xxx_1001_1011, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_11/00/00/11_11/00/11/11]) from [s0001_0100_1001_1011, s0001_0011_1001_1011]
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 52, priority(count): 400(18) 401(11) 402(3) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 114 All domain states: SC[s0_1011, s0001_0111_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_1XX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 6
       Grps: G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xxx_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 1 Current State: s0001_0111_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0011_1001_1011 to confirm group r0001_0xXX_Xxx1_1011+) PCS[PC[P[1:7]]]/1/1/+0
 1 N(Dom 1 Act 5 Pri 400 Get additional sample of state s0001_0110_1001_1011 to confirm group r0001_0xxX_1XX1_1011+) PCS[PC[P[1:4]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0011_1001_1011 to confirm group r0001_0xXX_Xxx1_1011+) PCS[PC[P[1:7]]]

Dom 1 s0001_0111_1001_1011 -7-> s0001_0011_1001_1011 [00/00/00/11_00/10/11/11_11/00/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0011_1001_1011 -3-> s0001_0010_0001_1011 [00/00/00/11_00/00/11/10_10/00/00/11_11/00/11/11]

  Square s0001_0011_1001_1011 adding result 2 s0001_0010_0001_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 54, priority(count): 250(2) 400(18) 401(11) 402(3) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 115 All domain states: SC[s0_1011, s0001_0010_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_1XX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_11/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 6
       Grps: G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xxx_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 1 Current State: s0001_0010_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_0001_1011 not in a group) At Target
 1 N(Dom 1 Act 7 Pri 250 Sample State s0001_0010_0001_1011 not in a group) At Target

Need chosen:  0 N(Dom 1 Act 5 Pri 250 Sample State s0001_0010_0001_1011 not in a group) At Target

Dom 1 s0001_0010_0001_1011 -5-> s0001_0000_0001_1011 [00/00/00/11_00/00/10/00_00/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0010_0001_1011 -5-> s0001_0000_0001_1011

Dom 1 Act 5 Adding Group G(r0001_0xxX_XXX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) from [s0001_0001_1111_1011, s0001_0100_1001_1011, s0001_0010_0001_1011]
Need satisfied

Dom 1 Act 5 deleted unneeded squares: [s0001_0011_1001_1011, s0001_0000_1101_1011]
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 53, priority(count): 250(1) 400(18) 401(11) 402(3) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 116 All domain states: SC[s0_1011, s0001_0000_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0xxX_XXX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 6
       Grps: G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xxx_1001_1011,  pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_11/00/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 1 Current State: s0001_0000_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_0001_1011 not in a group) At Target

Need chosen:  0 N(Dom 1 Act 7 Pri 250 Sample State s0001_0000_0001_1011 not in a group) At Target

Dom 1 s0001_0000_0001_1011 -7-> s0001_0100_0001_1011 [00/00/00/11_00/01/00/00_00/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0000_0001_1011 -7-> s0001_0100_0001_1011

Dom 1 Act 7 Adding Group G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) from [s0001_0100_1001_1011, s0001_0011_1001_1011, s0001_0000_0001_1011]
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 52, priority(count): 400(18) 401(11) 402(3) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 117 All domain states: SC[s0_1011, s0001_0100_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 3
       Grps: G(r0001_0xxX_XXX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 7
       Grps: G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0100_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 5 Pri 400 Get additional sample of state s0001_0110_0001_1011 to confirm group r0001_0xxX_XXX1_1011+) PCS[PC[P[1:6]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 5 Pri 400 Get additional sample of state s0001_0110_0001_1011 to confirm group r0001_0xxX_XXX1_1011+) PCS[PC[P[1:6]]]

Dom 1 s0001_0100_0001_1011 -6-> s0001_0110_0001_1011 [00/00/00/11_00/11/01/00_00/00/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0110_0001_1011 -5-> s0001_0100_0001_1011 [00/00/00/11_00/11/10/00_00/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0110_0001_1011 -5-> s0001_0100_0001_1011
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]

Number needs: 52, priority(count): 400(18) 401(11) 402(3) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 118 All domain states: SC[s0_1011, s0001_0100_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 7
       Grps: G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0100_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 5 Pri 400 Get additional sample of state s0001_0110_0001_1011 to confirm group r0001_0xxX_XXX1_1011+) PCS[PC[P[1:5]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 5 Pri 400 Get additional sample of state s0001_0110_0001_1011 to confirm group r0001_0xxX_XXX1_1011+) PCS[PC[P[1:5]]]

Dom 1 s0001_0100_0001_1011 -5-> s0001_0110_0001_1011 [00/00/00/11_00/11/01/00_00/00/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0110_0001_1011 -5-> s0001_0100_0001_1011 [00/00/00/11_00/11/10/00_00/00/00/11_11/00/11/11]

  Square s0001_0110_0001_1011 adding result 2 s0001_0100_0001_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 52, priority(count): 400(18) 401(11) 402(3) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 119 All domain states: SC[s0_1011, s0001_0100_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 7
       Grps: G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0100_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 5 Pri 400 Get additional sample of state s0001_0110_0001_1011 to confirm group r0001_0xxX_XXX1_1011+) PCS[PC[P[1:5]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 5 Pri 400 Get additional sample of state s0001_0110_0001_1011 to confirm group r0001_0xxX_XXX1_1011+) PCS[PC[P[1:5]]]

Dom 1 s0001_0100_0001_1011 -5-> s0001_0110_0001_1011 [00/00/00/11_00/11/01/00_00/00/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0110_0001_1011 -5-> s0001_0100_0001_1011 [00/00/00/11_00/11/10/00_00/00/00/11_11/00/11/11]

  Square s0001_0110_0001_1011 adding result 3 s0001_0100_0001_1011, pn 1, pnc changed from false to true
Dom 1 Act 5 Group r0001_0xxX_XXX1_1011 confirmed
Need satisfied
Dom 1 Act 5 Group r0001_0xxX_XXX1_1011 set limited on, adj mask m0000_0000_0000_0000
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 51, priority(count): 400(17) 401(11) 402(3) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 120 All domain states: SC[s0_1011, s0001_0100_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 3
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 7
       Grps: G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0100_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 400 Get additional sample of state s1_1010 to confirm group rX_Xx1x+) PCS[PC[P[0:4,1]]]/2/2/+0
 1 N(Dom 0 Act 3 Pri 400 Get additional sample of state s0_0111 to confirm group rX_Xx1x+) PCS[PC[P[0:2,5]]]/2/2/+0
 2 N(Dom 0 Act 4 Pri 400 Get additional sample of state s0_1110 to confirm group rX_1xxX+) PCS[PC[P[0:2,1]]]/2/2/+0
 3 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0101_0011_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[1:1]]]/2/2/+0
 4 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0100_0111_1011 to confirm group r0001_0xXX_Xxx1_1011+) PCS[PC[P[1:1,2]]]/2/4/+0
 5 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0010_0001_1011 to confirm group r0001_0xXx_xxx1_1011+) PCS[PC[P[1:5,7]]]/2/2/+0

Need chosen:  2 N(Dom 0 Act 4 Pri 400 Get additional sample of state s0_1110 to confirm group rX_1xxX+) PCS[PC[P[0:2,1]]]

All domain states: SC[s0_1011, s0001_0100_0001_1011]

Dom 0 s0_1011 -2-> s0_1111 [00_11/01/11/11]

Dom 0 s0_1111 -1-> s0_1110 [00_11/11/11/10]
2 steps run.

Dom 0 s0_1110 -4-> s1_1110 [01_11/11/11/00]

  Square s0_1110 adding result 2 s1_1110, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 50, priority(count): 400(17) 401(11) 402(3) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(1) 
Priority 400
Step: 121 All domain states: SC[s1_1110, s0001_0100_0001_1011] Status: Positive, in RC[rx_1110, rXXXX_XXX0_0XXX_XXXX], 1 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 5 Pri 400 Get additional sample of state s1_1110 to confirm group rx_1xxX+) At Target

Need chosen:  0 N(Dom 0 Act 5 Pri 400 Get additional sample of state s1_1110 to confirm group rx_1xxX+) At Target

Dom 0 s1_1110 -5-> s1_0110 [11_10/11/11/00]

  Square s1_1110 adding result 2 s1_0110, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]

Number needs: 51, priority(count): 400(17) 401(11) 402(3) 403(2) 404(2) 500(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 122 All domain states: SC[s1_0110, s0001_0100_0001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX+, pn: 1, pnc: f, [XX_10/XX/XX/XX]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 400 Get additional sample of state s1_0100 to confirm group rX_xX0x+) PCS[PC[P[0:3]]]/1/1/+0
 1 N(Dom 0 Act 5 Pri 400 Get additional sample of state s1_1110 to confirm group rx_1xxX+) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  1 N(Dom 0 Act 5 Pri 400 Get additional sample of state s1_1110 to confirm group rx_1xxX+) PCS[PC[P[0:4]]]

Dom 0 s1_0110 -4-> s1_1110 [11_01/11/11/00]
1 step run.

Dom 0 s1_1110 -5-> s1_0110 [11_10/11/11/00]

  Square s1_1110 adding result 3 s1_0110, pn 1, pnc changed from false to true
Dom 0 Act 5 Group rx_1xxX confirmed
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 51, priority(count): 400(16) 401(11) 402(3) 403(2) 404(2) 500(2) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 123 All domain states: SC[s1_0110, s0001_0100_0001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s0_1110) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 400 Get additional sample of state s1_0100 to confirm group rX_xX0x+) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 400 Get additional sample of state s1_0100 to confirm group rX_xX0x+) PCS[PC[P[0:3]]]

Dom 0 s1_0110 -3-> s1_0100 [11_00/11/10/00]

  Square s1_0110 adding result 2 s1_0100, pn 1, pnc false
1 step run.

Dom 0 s1_0100 -2-> s1_0110 [11_00/11/01/00]

  Square s1_0100 adding result 2 s1_0110, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 51, priority(count): 400(16) 401(11) 402(3) 403(2) 404(2) 500(2) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 124 All domain states: SC[s1_0110, s0001_0100_0001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x+, pn: 1, pnc: f, [XX_XX/XX/01/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX]) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 400 Get additional sample of state s1_0100 to confirm group rX_xX0x+) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 400 Get additional sample of state s1_0100 to confirm group rX_xX0x+) PCS[PC[P[0:3]]]

Dom 0 s1_0110 -3-> s1_0100 [11_00/11/10/00]

  Square s1_0110 adding result 3 s1_0100, pn 1, pnc changed from false to true
1 step run.

Dom 0 s1_0100 -2-> s1_0110 [11_00/11/01/00]

  Square s1_0100 adding result 3 s1_0110, pn 1, pnc changed from false to true
Dom 0 Act 2 Group rX_xX0x confirmed
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
defining vert: rX_0XXX (s1_0011 - [s1_1011])
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 51, priority(count): 400(15) 401(11) 402(3) 403(2) 404(2) 500(2) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 125 All domain states: SC[s1_0110, s0001_0100_0001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 400 Get additional sample of state s1_1100 to confirm group rx_x1XX) PCS[PC[P[0:4,3]]]/2/2/+0
 1 N(Dom 0 Act 3 Pri 400 Get additional sample of state s1_1010 to confirm group rX_Xx1x+) PCS[PC[P[0:2,4]]]/2/2/+0
 2 N(Dom 0 Act 3 Pri 400 Get additional sample of state s0_0111 to confirm group rX_Xx1x+) PCS[PC[P[0:1,5]]]/2/2/+0
 3 N(Dom 0 Act 4 Pri 400 Get additional sample of state s0_1110 to confirm group rX_1xxX+) PCS[PC[P[0:5,4]]]/2/2/+0
 4 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0101_0011_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[1:1]]]/2/2/+0
 5 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0100_0111_1011 to confirm group r0001_0xXX_Xxx1_1011+) PCS[PC[P[1:2,1]]]/2/4/+0
 6 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0010_0001_1011 to confirm group r0001_0xXx_xxx1_1011+) PCS[PC[P[1:6,7]]]/2/2/+0

Need chosen:  4 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0101_0011_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[1:1]]]

All domain states: SC[s1_0110, s0001_0100_0001_1011]

Dom 1 s0001_0100_0001_1011 -1-> s0001_0101_0011_1011 [00/00/00/11_00/11/00/01_00/00/01/11_11/00/11/11]
1 step run.

Dom 1 s0001_0101_0011_1011 -2-> s0001_0100_0111_1011 [00/00/00/11_00/11/00/10_00/01/11/11_11/00/11/11]

Dom 1 Adding square s0001_0101_0011_1011 -2-> s0001_0100_0111_1011
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]

Number needs: 52, priority(count): 250(1) 400(15) 401(11) 402(3) 403(2) 404(2) 500(2) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 126 All domain states: SC[s1_0110, s0001_0100_0111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 7
       Grps: G(r0001_0011_1111_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]) num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0100_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 250 Sample State s0001_0100_0111_1011 not in a group) At Target

Need chosen:  0 N(Dom 1 Act 7 Pri 250 Sample State s0001_0100_0111_1011 not in a group) At Target

Dom 1 s0001_0100_0111_1011 -7-> s0001_0101_0111_1011 [00/00/00/11_00/11/00/01_00/11/11/11_11/00/11/11]

Dom 1 Adding square s0001_0100_0111_1011 -7-> s0001_0101_0111_1011

Dom 1 Act 7 Adding Group G(r0001_0xXX_X111_1011, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) from [s0001_0011_1111_1011, s0001_0100_0111_1011]
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 52, priority(count): 400(16) 401(11) 402(3) 403(2) 404(2) 500(2) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 127 All domain states: SC[s1_0110, s0001_0101_0111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 3
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0101_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0101_0011_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[1:2,4]]]/1/3/+0
 1 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0100_0111_1011 to confirm group r0001_0xXX_Xxx1_1011+) PCS[PC[P[1:7]]]/1/1/+0
 2 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0101_1111_1011 to confirm group r0001_0xXx_xxx1_1011+) PCS[PC[P[1:3,7]]]/1/3/+0

Need chosen:  1 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0100_0111_1011 to confirm group r0001_0xXX_Xxx1_1011+) PCS[PC[P[1:7]]]

Dom 1 s0001_0101_0111_1011 -7-> s0001_0100_0111_1011 [00/00/00/11_00/11/00/10_00/11/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0100_0111_1011 -3-> s0001_0101_1111_1011 [00/00/00/11_00/11/00/01_01/11/11/11_11/00/11/11]

Dom 1 Adding square s0001_0100_0111_1011 -3-> s0001_0101_1111_1011
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
defining vert: rX_1XXX (s1_1011 - [s1_0011])
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 52, priority(count): 400(16) 401(11) 402(3) 403(2) 404(2) 500(2) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 128 All domain states: SC[s1_0110, s0001_0101_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0101_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0101_1111_1011 to confirm group r0001_0xXx_xxx1_1011+) At Target

Need chosen:  0 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0101_1111_1011 to confirm group r0001_0xXx_xxx1_1011+) At Target

Dom 1 s0001_0101_1111_1011 -4-> s0001_0100_1111_1011 [00/00/00/11_00/11/00/10_11/11/11/11_11/00/11/11]

Dom 1 Adding square s0001_0101_1111_1011 -4-> s0001_0100_1111_1011
Need satisfied

Dom 1 Act 4 deleted unneeded squares: [s0001_0001_1101_1011]
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 52, priority(count): 400(16) 401(11) 402(3) 403(2) 404(2) 500(2) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 129 All domain states: SC[s1_0110, s0001_0100_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0100_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0100_0111_1011 to confirm group r0001_0xXX_Xxx1_1011+) PCS[PC[P[1:3,7]]]/1/3/+0
 1 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0101_1111_1011 to confirm group r0001_0xXx_xxx1_1011+) PCS[PC[P[1:7]]]/1/1/+0

Need chosen:  1 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0101_1111_1011 to confirm group r0001_0xXx_xxx1_1011+) PCS[PC[P[1:7]]]

Dom 1 s0001_0100_1111_1011 -7-> s0001_0101_1111_1011 [00/00/00/11_00/11/00/01_11/11/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0101_1111_1011 -4-> s0001_0100_1111_1011 [00/00/00/11_00/11/00/10_11/11/11/11_11/00/11/11]

  Square s0001_0101_1111_1011 adding result 2 s0001_0100_1111_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 52, priority(count): 400(16) 401(11) 402(3) 403(2) 404(2) 500(2) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 130 All domain states: SC[s1_0110, s0001_0100_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0100_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0100_0111_1011 to confirm group r0001_0xXX_Xxx1_1011+) PCS[PC[P[1:3,4]]]/1/3/+0
 1 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0101_1111_1011 to confirm group r0001_0xXx_xxx1_1011+) PCS[PC[P[1:4]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0100_0111_1011 to confirm group r0001_0xXX_Xxx1_1011+) PCS[PC[P[1:3,4]]]

Dom 1 s0001_0100_1111_1011 -3-> s0001_0101_0111_1011 [00/00/00/11_00/11/00/01_10/11/11/11_11/00/11/11]

Dom 1 s0001_0101_0111_1011 -4-> s0001_0100_0111_1011 [00/00/00/11_00/11/00/10_00/11/11/11_11/00/11/11]
2 steps run.

Dom 1 s0001_0100_0111_1011 -3-> s0001_0101_1111_1011 [00/00/00/11_00/11/00/01_01/11/11/11_11/00/11/11]

  Square s0001_0100_0111_1011 adding result 2 s0001_0101_1111_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 52, priority(count): 400(16) 401(11) 402(3) 403(2) 404(2) 500(2) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 131 All domain states: SC[s1_0110, s0001_0101_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0101_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0101_1111_1011 to confirm group r0001_0xXx_xxx1_1011+) At Target

Need chosen:  0 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0101_1111_1011 to confirm group r0001_0xXx_xxx1_1011+) At Target

Dom 1 s0001_0101_1111_1011 -4-> s0001_0100_1111_1011 [00/00/00/11_00/11/00/10_11/11/11/11_11/00/11/11]

  Square s0001_0101_1111_1011 adding result 3 s0001_0100_1111_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 51, priority(count): 400(15) 401(11) 402(3) 403(2) 404(2) 500(2) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 132 All domain states: SC[s1_0110, s0001_0100_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0100_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0100_0111_1011 to confirm group r0001_0xXX_Xxx1_1011+) PCS[PC[P[1:3,4]]]/1/3/+0

Need chosen:  0 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0100_0111_1011 to confirm group r0001_0xXX_Xxx1_1011+) PCS[PC[P[1:3,4]]]

Dom 1 s0001_0100_1111_1011 -3-> s0001_0101_0111_1011 [00/00/00/11_00/11/00/01_10/11/11/11_11/00/11/11]

Dom 1 s0001_0101_0111_1011 -4-> s0001_0100_0111_1011 [00/00/00/11_00/11/00/10_00/11/11/11_11/00/11/11]
2 steps run.

Dom 1 s0001_0100_0111_1011 -3-> s0001_0101_1111_1011 [00/00/00/11_00/11/00/01_01/11/11/11_11/00/11/11]

  Square s0001_0100_0111_1011 adding result 3 s0001_0101_1111_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 50, priority(count): 400(14) 401(11) 402(3) 403(2) 404(2) 500(2) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 133 All domain states: SC[s1_0110, s0001_0101_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0101_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 1 Pri 400 Get additional sample of state s0001_0101_1011_1011 to confirm group r0001_0XxX_XxX1_1011+) PCS[PC[P[1:2,4]]]/1/3/+0

Need chosen:  0 N(Dom 1 Act 1 Pri 400 Get additional sample of state s0001_0101_1011_1011 to confirm group r0001_0XxX_XxX1_1011+) PCS[PC[P[1:2,4]]]

Dom 1 s0001_0101_1111_1011 -2-> s0001_0100_1011_1011 [00/00/00/11_00/11/00/10_11/10/11/11_11/00/11/11]

Dom 1 s0001_0100_1011_1011 -4-> s0001_0101_1011_1011 [00/00/00/11_00/11/00/01_11/00/11/11_11/00/11/11]
2 steps run.

Dom 1 s0001_0101_1011_1011 -1-> s0001_0100_1001_1011 [00/00/00/11_00/11/00/10_11/00/10/11_11/00/11/11]

  Square s0001_0101_1011_1011 adding result 2 s0001_0100_1001_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 50, priority(count): 400(14) 401(11) 402(3) 403(2) 404(2) 500(2) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 134 All domain states: SC[s1_0110, s0001_0100_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0100_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 400 Get additional sample of state s0001_0100_1001_1011 to confirm group r0001_0Xxx_X001_1011+) At Target

Need chosen:  0 N(Dom 1 Act 7 Pri 400 Get additional sample of state s0001_0100_1001_1011 to confirm group r0001_0Xxx_X001_1011+) At Target

Dom 1 s0001_0100_1001_1011 -7-> s0001_0000_1001_1011 [00/00/00/11_00/10/00/00_11/00/00/11_11/00/11/11]

  Square s0001_0100_1001_1011 adding result 3 s0001_0000_1001_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]

Number needs: 49, priority(count): 400(13) 401(11) 402(3) 403(2) 404(2) 500(2) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 135 All domain states: SC[s1_0110, s0001_0000_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0000_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 6 Pri 400 Get additional sample of state s0001_0001_1001_1011 to confirm group r0001_0xxX_Xxx1_1011+) PCS[PC[P[1:4]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 6 Pri 400 Get additional sample of state s0001_0001_1001_1011 to confirm group r0001_0xxX_Xxx1_1011+) PCS[PC[P[1:4]]]

Dom 1 s0001_0000_1001_1011 -4-> s0001_0001_1001_1011 [00/00/00/11_00/00/00/01_11/00/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0001_1001_1011 -6-> s0001_0011_1001_1011 [00/00/00/11_00/00/01/11_11/00/00/11_11/00/11/11]

  Square s0001_0001_1001_1011 adding result 2 s0001_0011_1001_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 49, priority(count): 400(13) 401(11) 402(3) 403(2) 404(2) 500(2) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 136 All domain states: SC[s1_0110, s0001_0011_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0011_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0011_1001_1011 to confirm group r0001_0xXX_Xxx1_1011+) At Target

Need chosen:  0 N(Dom 1 Act 3 Pri 400 Get additional sample of state s0001_0011_1001_1011 to confirm group r0001_0xXX_Xxx1_1011+) At Target

Dom 1 s0001_0011_1001_1011 -3-> s0001_0010_0001_1011 [00/00/00/11_00/00/11/10_10/00/00/11_11/00/11/11]

  Square s0001_0011_1001_1011 adding result 3 s0001_0010_0001_1011, pn 1, pnc changed from false to true
Dom 1 Act 3 Group r0001_0xXX_Xxx1_1011 confirmed
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 49, priority(count): 400(12) 401(11) 402(3) 403(2) 404(2) 500(3) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 137 All domain states: SC[s1_0110, s0001_0010_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0010_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0010_0001_1011 to confirm group r0001_0xXx_xxx1_1011+) At Target

Need chosen:  0 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0010_0001_1011 to confirm group r0001_0xXx_xxx1_1011+) At Target

Dom 1 s0001_0010_0001_1011 -4-> s0001_0011_0001_1011 [00/00/00/11_00/00/11/01_00/00/00/11_11/00/11/11]

  Square s0001_0010_0001_1011 adding result 2 s0001_0011_0001_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 49, priority(count): 400(12) 401(11) 402(3) 403(2) 404(2) 500(3) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 138 All domain states: SC[s1_0110, s0001_0011_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0011_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 400 Get additional sample of state s0001_0011_0001_1011 to confirm group r0001_0Xxx_X001_1011+) At Target

Need chosen:  0 N(Dom 1 Act 7 Pri 400 Get additional sample of state s0001_0011_0001_1011 to confirm group r0001_0Xxx_X001_1011+) At Target

Dom 1 s0001_0011_0001_1011 -7-> s0001_0111_0001_1011 [00/00/00/11_00/01/11/11_00/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0011_0001_1011 -7-> s0001_0111_0001_1011
Need satisfied

Dom 1 Act 7 deleted unneeded squares: [s0001_0001_1001_1011]
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
defining vert: rX_0XXX (s1_0011 - [s1_1011])
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 49, priority(count): 400(12) 401(11) 402(3) 403(2) 404(2) 500(3) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 139 All domain states: SC[s1_0110, s0001_0111_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0111_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 400 Get additional sample of state s0001_0011_0001_1011 to confirm group r0001_0Xxx_X001_1011+) PCS[PC[P[1:7]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 400 Get additional sample of state s0001_0011_0001_1011 to confirm group r0001_0Xxx_X001_1011+) PCS[PC[P[1:7]]]

Dom 1 s0001_0111_0001_1011 -7-> s0001_0011_0001_1011 [00/00/00/11_00/10/11/11_00/00/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0011_0001_1011 -7-> s0001_0111_0001_1011 [00/00/00/11_00/01/11/11_00/00/00/11_11/00/11/11]

  Square s0001_0011_0001_1011 adding result 2 s0001_0111_0001_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 49, priority(count): 400(12) 401(11) 402(3) 403(2) 404(2) 500(3) 600(1) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 140 All domain states: SC[s1_0110, s0001_0111_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011+, pn: 1, pnc: f, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11]) num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0111_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 400 Get additional sample of state s0001_0011_0001_1011 to confirm group r0001_0Xxx_X001_1011+) PCS[PC[P[1:7]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 400 Get additional sample of state s0001_0011_0001_1011 to confirm group r0001_0Xxx_X001_1011+) PCS[PC[P[1:7]]]

Dom 1 s0001_0111_0001_1011 -7-> s0001_0011_0001_1011 [00/00/00/11_00/10/11/11_00/00/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0011_0001_1011 -7-> s0001_0111_0001_1011 [00/00/00/11_00/01/11/11_00/00/00/11_11/00/11/11]

  Square s0001_0011_0001_1011 adding result 3 s0001_0111_0001_1011, pn 1, pnc changed from false to true
Dom 1 Act 7 Group r0001_0Xxx_X001_1011 confirmed
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]

Number needs: 50, priority(count): 400(11) 401(11) 402(3) 403(2) 404(2) 500(3) 600(3) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 141 All domain states: SC[s1_0110, s0001_0111_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 8
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0011_0001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0010_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/00/10/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2))

Dom: 1 Current State: s0001_0111_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 400 Get additional sample of state s1_1100 to confirm group rx_x1XX) PCS[PC[P[1:2]], PC[P[0:3,4]]]/4/4/+0
 1 N(Dom 0 Act 3 Pri 400 Get additional sample of state s1_1010 to confirm group rX_Xx1x+) PCS[PC[P[0:4,2]]]/2/2/+0
 2 N(Dom 0 Act 3 Pri 400 Get additional sample of state s0_0111 to confirm group rX_Xx1x+) PCS[PC[P[0:1,5]]]/2/2/+0
 3 N(Dom 0 Act 4 Pri 400 Get additional sample of state s0_1110 to confirm group rX_1xxX+) PCS[PC[P[0:4,4]]]/2/2/+0
 4 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0101_0011_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[1:1,4,5]]]/2/4/+0
 5 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0010_0001_1011 to confirm group r0001_0xXx_xxx1_1011+) PCS[PC[P[1:7,4]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 400 Get additional sample of state s1_1100 to confirm group rx_x1XX) PCS[PC[P[1:2]], PC[P[0:3,4]]]

All domain states: SC[s1_0110, s0001_0111_0001_1011]

Dom 1 s0001_0111_0001_1011 -2-> s0001_0110_0101_1011 [00/00/00/11_00/11/11/10_00/01/00/11_11/00/11/11]
---- 
Dom 0 s1_0110 -3-> s1_0100 [11_00/11/10/00]

  Square s1_0110 adding result 4 s1_0100, pn 1, pnc true

Dom 0 s1_0100 -4-> s1_1100 [11_01/11/00/00]

  Square s1_0100 adding result 2 s1_1100, pn 1, pnc false
3 steps run.

Dom 0 s1_1100 -1-> s1_1101 [11_11/11/00/01]

  Square s1_1100 adding result 2 s1_1101, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 51, priority(count): 250(1) 400(11) 401(11) 402(3) 403(2) 404(2) 500(3) 600(3) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 142 All domain states: SC[s1_1101, s0001_0110_0101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: f, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 250 Sample State s0001_0110_0101_1011 not in a group) At Target

Need chosen:  0 N(Dom 1 Act 7 Pri 250 Sample State s0001_0110_0101_1011 not in a group) At Target

All domain states: SC[s1_1101, s0001_0110_0101_1011]

Dom 1 s0001_0110_0101_1011 -7-> s0001_0100_0101_1011 [00/00/00/11_00/11/10/00_00/11/00/11_11/00/11/11]

Dom 1 Adding square s0001_0110_0101_1011 -7-> s0001_0100_0101_1011

Dom 1 Act 7 Adding Group G(r0001_0X10_x101_1011, pn: 1, pnc: f, [00/00/00/11_00/XX/10/00_XX/11/00/11_11/00/11/11]) from [s0001_0110_0101_1011, s0001_0010_1101_1011]
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 50, priority(count): 250(1) 400(11) 401(11) 402(3) 403(2) 404(2) 500(3) 600(3) 605(4) 900(2) 902(4) 903(2) 904(2) 
Priority 250
Step: 143 All domain states: SC[s1_1101, s0001_0100_0101_1011] Status: Positive, in RC[rx_x1x1, rXXXX_XX00_0XXX_XXXX], 3 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 9
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0011_0001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0X10_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/10/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 3 in1: 3))

Dom: 1 Current State: s0001_0100_0101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 250 Sample State s0001_0100_0101_1011 not in a group) At Target

Need chosen:  0 N(Dom 1 Act 7 Pri 250 Sample State s0001_0100_0101_1011 not in a group) At Target

Dom 1 s0001_0100_0101_1011 -7-> s0001_0110_0101_1011 [00/00/00/11_00/11/01/00_00/11/00/11_11/00/11/11]

Dom 1 Adding square s0001_0100_0101_1011 -7-> s0001_0110_0101_1011

Dom 1 Act 7 Adding Group G(r0001_0Xx0_x101_1011, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11]) from [s0001_0100_0101_1011, s0001_0010_1101_1011]
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
anchor s0001_0011_0001_1011 in group r0001_0Xxx_X001_1011 removed, rate 0 below 1
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
defining vert: rX_0XXX (s1_0011 - [s1_1011])
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 50, priority(count): 400(11) 401(11) 402(3) 403(2) 404(2) 500(3) 600(3) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 144 All domain states: SC[s1_1101, s0001_0110_0101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 3
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 7, number squares: 10
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0110_0101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 400 Get additional sample of state s1_1100 to confirm group rx_x1XX) PCS[PC[P[0:1]]]/1/1/+0
 1 N(Dom 1 Act 6 Pri 400 Get additional sample of state s0001_0110_0111_1011 to confirm group r0001_0xxX_Xxx1_1011+) PCS[PC[P[1:1,4]]]/1/3/+0

Need chosen:  1 N(Dom 1 Act 6 Pri 400 Get additional sample of state s0001_0110_0111_1011 to confirm group r0001_0xxX_Xxx1_1011+) PCS[PC[P[1:1,4]]]

Dom 1 s0001_0110_0101_1011 -1-> s0001_0111_0111_1011 [00/00/00/11_00/11/11/01_00/11/01/11_11/00/11/11]

Dom 1 s0001_0111_0111_1011 -4-> s0001_0110_0111_1011 [00/00/00/11_00/11/11/10_00/11/11/11_11/00/11/11]
2 steps run.

Dom 1 s0001_0110_0111_1011 -6-> s0001_0100_0111_1011 [00/00/00/11_00/11/10/00_00/11/11/11_11/00/11/11]

Dom 1 Adding square s0001_0110_0111_1011 -6-> s0001_0100_0111_1011
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 49, priority(count): 400(11) 401(11) 402(3) 403(2) 404(2) 500(3) 600(3) 605(4) 900(2) 902(4) 903(2) 904(2) 
Priority 400
Step: 145 All domain states: SC[s1_1101, s0001_0100_0111_1011] Status: Positive, in RC[rx_x1x1, rXXXX_XX00_0XXX_XXXX], 3 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0100_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 400 Get additional sample of state s1_1100 to confirm group rx_x1XX) PCS[PC[P[0:1]]]/1/1/+0
 1 N(Dom 1 Act 6 Pri 400 Get additional sample of state s0001_0110_0111_1011 to confirm group r0001_0xxX_Xxx1_1011+) PCS[PC[P[1:5]]]/1/1/+0

Need chosen:  1 N(Dom 1 Act 6 Pri 400 Get additional sample of state s0001_0110_0111_1011 to confirm group r0001_0xxX_Xxx1_1011+) PCS[PC[P[1:5]]]

Dom 1 s0001_0100_0111_1011 -5-> s0001_0110_0111_1011 [00/00/00/11_00/11/01/00_00/11/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0110_0111_1011 -6-> s0001_0100_0111_1011 [00/00/00/11_00/11/10/00_00/11/11/11_11/00/11/11]

  Square s0001_0110_0111_1011 adding result 2 s0001_0100_0111_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1011 - [s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
Options:
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
  gggg [(s0_1011 - [s0_0011]), (s0_0011 - [s0_1011])]

Number needs: 49, priority(count): 400(11) 401(11) 402(3) 403(2) 404(2) 500(3) 600(3) 605(4) 900(2) 902(4) 903(2) 904(2) 
Priority 400
Step: 146 All domain states: SC[s1_1101, s0001_0100_0111_1011] Status: Positive, in RC[rx_x1x1, rXXXX_XX00_0XXX_XXXX], 3 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0100_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 400 Get additional sample of state s1_1100 to confirm group rx_x1XX) PCS[PC[P[0:1]]]/1/1/+0
 1 N(Dom 1 Act 6 Pri 400 Get additional sample of state s0001_0110_0111_1011 to confirm group r0001_0xxX_Xxx1_1011+) PCS[PC[P[1:5]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 400 Get additional sample of state s1_1100 to confirm group rx_x1XX) PCS[PC[P[0:1]]]

All domain states: SC[s1_1101, s0001_0100_0111_1011]

Dom 0 s1_1101 -1-> s1_1100 [11_11/11/00/10]
1 step run.

Dom 0 s1_1100 -1-> s1_1101 [11_11/11/00/01]

  Square s1_1100 adding result 3 s1_1101, pn 1, pnc changed from false to true
Dom 0 Act 1 Group rx_x1XX confirmed
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0XXX (s0_0011 - [s0_1011])

Number needs: 49, priority(count): 54(2) 400(10) 401(11) 402(3) 403(2) 404(1) 500(3) 600(3) 605(4) 900(2) 902(4) 903(2) 904(2) 
Priority 54
Step: 147 All domain states: SC[s1_1101, s0001_0100_0111_1011] Status: Positive, in RC[rx_x1x1, rXXXX_XX00_0XXX_XXXX], 3 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XX1, rX_1X1X, rX_10XX, r0_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 54 Get additional sample of state s1_1001 to find closer incompatible pair within rX_1Xxx) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 54 Get additional sample of state s1_1001 to find closer incompatible pair within rX_1Xxx) PCS[PC[P[0:3]]]

Dom 0 s1_1101 -3-> s1_1001 [11_11/10/00/11]

  Square s1_1101 adding result 2 s1_1001, pn 1, pnc false
1 step run.

Dom 0 s1_1001 -1-> s1_1000 [11_11/00/00/10]

  Square s1_1001 adding result 2 s1_1000, pn 1, pnc false
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0XXX (s0_0011 - [s0_1011])

Number needs: 50, priority(count): 54(2) 400(10) 401(11) 402(3) 403(2) 404(1) 500(3) 600(3) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 54
Step: 148 All domain states: SC[s1_1000, s0001_0100_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XX1, rX_1X1X, rX_10XX, r0_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 3 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 54 Get additional sample of state s1_1001 to find closer incompatible pair within rX_1Xxx) PCS[PC[P[0:1]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 54 Get additional sample of state s1_1001 to find closer incompatible pair within rX_1Xxx) PCS[PC[P[0:1]]]

Dom 0 s1_1000 -1-> s1_1001 [11_11/00/00/01]

  Square s1_1000 adding result 3 s1_1001, pn 1, pnc changed from false to true
1 step run.

Dom 0 s1_1001 -1-> s1_1000 [11_11/00/00/10]

  Square s1_1001 adding result 3 s1_1000, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0XXX (s0_0011 - [s0_1011])

Number needs: 49, priority(count): 52(1) 400(10) 401(11) 402(3) 403(2) 404(1) 500(3) 600(3) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 149 All domain states: SC[s1_1000, s0001_0100_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 9, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1X1X, r0_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_1001 to find closer incompatible pair within rX_10x1) PCS[PC[P[0:4,1]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_1001 to find closer incompatible pair within rX_10x1) PCS[PC[P[0:4,1]]]

Dom 0 s1_1000 -4-> s0_1000 [10_11/00/00/00]

Dom 0 s0_1000 -1-> s0_1001 [00_11/00/00/01]
2 steps run.

Dom 0 s0_1001 -1-> s0_1000 [00_11/00/00/10]

  Square s0_1001 adding result 2 s0_1000, pn 1, pnc false
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0XXX (s0_0011 - [s0_1011])

Number needs: 49, priority(count): 52(1) 400(10) 401(11) 402(3) 403(2) 404(1) 500(3) 600(3) 605(4) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 150 All domain states: SC[s0_1000, s0001_0100_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 9, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1X1X, r0_1XXX, r1_XXXX, rX_0XXX], defining regions: [rX_0XXX]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: f, [XX_11/XX/00/Xx])                                         num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_1001 to find closer incompatible pair within rX_10x1) PCS[PC[P[0:1]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_1001 to find closer incompatible pair within rX_10x1) PCS[PC[P[0:1]]]

Dom 0 s0_1000 -1-> s0_1001 [00_11/00/00/01]
1 step run.

Dom 0 s0_1001 -1-> s0_1000 [00_11/00/00/10]

  Square s0_1001 adding result 3 s0_1000, pn 1, pnc changed from false to true
Dom 0 Act 1 Group rx_1x0X confirmed
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_1001, s0_0011]), (s0_0011 - [s0_1011]), (s0_1001 - [s0_1011])]

Number needs: 47, priority(count): 400(10) 401(11) 402(3) 403(2) 500(3) 600(3) 604(1) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 151 All domain states: SC[s0_1000, s0001_0100_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 9, calculated structure regions: [rX_XXX0, rX_X1XX, rX_1X1X, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_1X1X, rX_0XXX, rX_XX0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0_0001,  pn: 1, pnc: f, [00_00/01/00/11])                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limiting using s0_1001) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 1 Act 6 Pri 400 Get additional sample of state s0001_0110_0111_1011 to confirm group r0001_0xxX_Xxx1_1011+) PCS[PC[P[1:5]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 6 Pri 400 Get additional sample of state s0001_0110_0111_1011 to confirm group r0001_0xxX_Xxx1_1011+) PCS[PC[P[1:5]]]

All domain states: SC[s0_1000, s0001_0100_0111_1011]

Dom 1 s0001_0100_0111_1011 -5-> s0001_0110_0111_1011 [00/00/00/11_00/11/01/00_00/11/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0110_0111_1011 -6-> s0001_0100_0111_1011 [00/00/00/11_00/11/10/00_00/11/11/11_11/00/11/11]

  Square s0001_0110_0111_1011 adding result 3 s0001_0100_0111_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_1001, s0_0011]), (s0_0011 - [s0_1011]), (s0_1001 - [s0_1011])]

Number needs: 46, priority(count): 400(9) 401(11) 402(3) 403(2) 500(3) 600(3) 604(1) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 152 All domain states: SC[s0_1000, s0001_0100_0111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0100_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 400 Get additional sample of state s1_1010 to confirm group rX_Xx1x+) PCS[PC[P[0:4,2]]]/2/2/+0
 1 N(Dom 0 Act 4 Pri 400 Get additional sample of state s0_1110 to confirm group rX_1xxX+) PCS[PC[P[0:2,2]]]/2/2/+0
 2 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0101_0011_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[0:1]], PC[P[1:2]]]/3/3/+0

Need chosen:  2 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0101_0011_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[0:1]], PC[P[1:2]]]

Dom 0 s0_1000 -1-> s0_1001 [00_11/00/00/01]
---- 
Dom 1 s0001_0100_0111_1011 -2-> s0001_0101_0011_1011 [00/00/00/11_00/11/00/01_00/10/11/11_11/00/11/11]
2 steps run.

Dom 1 s0001_0101_0011_1011 -2-> s0001_0100_0111_1011 [00/00/00/11_00/11/00/10_00/01/11/11_11/00/11/11]

  Square s0001_0101_0011_1011 adding result 2 s0001_0100_0111_1011, pn 1, pnc false
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_1001, s0_0011]), (s0_0011 - [s0_1011]), (s0_1001 - [s0_1011])]

Number needs: 46, priority(count): 400(9) 401(11) 402(3) 403(2) 500(3) 600(3) 604(1) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 153 All domain states: SC[s0_1001, s0001_0100_0111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0100_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0101_0011_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[1:2]]]/2/2/+0

Need chosen:  0 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0101_0011_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[1:2]]]

Dom 1 s0001_0100_0111_1011 -2-> s0001_0101_0011_1011 [00/00/00/11_00/11/00/01_00/10/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0101_0011_1011 -2-> s0001_0100_0111_1011 [00/00/00/11_00/11/00/10_00/01/11/11_11/00/11/11]

  Square s0001_0101_0011_1011 adding result 3 s0001_0100_0111_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_1001, s0_0011]), (s0_0011 - [s0_1011]), (s0_1001 - [s0_1011])]

Number needs: 45, priority(count): 400(8) 401(11) 402(3) 403(2) 500(3) 600(3) 604(1) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 154 All domain states: SC[s0_1001, s0001_0100_0111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 3
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0100_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 400 Get additional sample of state s1_1010 to confirm group rX_Xx1x+) PCS[PC[P[0:4,2,1]]]/3/3/+0
 1 N(Dom 0 Act 3 Pri 400 Get additional sample of state s0_0111 to confirm group rX_Xx1x+) PCS[PC[P[0:3,5,2]]]/3/3/+0
 2 N(Dom 0 Act 4 Pri 400 Get additional sample of state s0_1110 to confirm group rX_1xxX+) PCS[PC[P[0:3,1,2]]]/3/3/+0
 3 N(Dom 1 Act 1 Pri 400 Get additional sample of state s0001_0101_1011_1011 to confirm group r0001_0XxX_XxX1_1011+) PCS[PC[P[1:3,2,4]]]/3/5/+0
 4 N(Dom 1 Act 1 Pri 400 Get additional sample of state s0001_0010_0101_1011 to confirm group r0001_0XxX_XxX1_1011+) PCS[PC[P[1:2,1,5,4,7,2]]]/3/9/+0

Need chosen:  4 N(Dom 1 Act 1 Pri 400 Get additional sample of state s0001_0010_0101_1011 to confirm group r0001_0XxX_XxX1_1011+) PCS[PC[P[1:2,1,5,4,7,2]]]

Dom 1 s0001_0100_0111_1011 -2-> s0001_0101_0011_1011 [00/00/00/11_00/11/00/01_00/10/11/11_11/00/11/11]

Dom 1 s0001_0101_0011_1011 -1-> s0001_0100_0001_1011 [00/00/00/11_00/11/00/10_00/00/10/11_11/00/11/11]

Dom 1 s0001_0100_0001_1011 -5-> s0001_0110_0001_1011 [00/00/00/11_00/11/01/00_00/00/00/11_11/00/11/11]

Dom 1 s0001_0110_0001_1011 -4-> s0001_0111_0001_1011 [00/00/00/11_00/11/11/01_00/00/00/11_11/00/11/11]

Dom 1 s0001_0111_0001_1011 -7-> s0001_0011_0001_1011 [00/00/00/11_00/10/11/11_00/00/00/11_11/00/11/11]

Dom 1 s0001_0011_0001_1011 -2-> s0001_0010_0101_1011 [00/00/00/11_00/00/11/10_00/01/00/11_11/00/11/11]

  Square s0001_0011_0001_1011 adding result 2 s0001_0010_0101_1011, pn 1, pnc false
6 steps run.

Dom 1 s0001_0010_0101_1011 -1-> s0001_0011_0111_1011 [00/00/00/11_00/00/11/01_00/11/01/11_11/00/11/11]

Dom 1 Adding square s0001_0010_0101_1011 -1-> s0001_0011_0111_1011
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_1001, s0_0011]), (s0_0011 - [s0_1011]), (s0_1001 - [s0_1011])]

Number needs: 45, priority(count): 400(8) 401(11) 402(3) 403(2) 500(3) 600(3) 604(1) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 155 All domain states: SC[s0_1001, s0001_0011_0111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0011_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 1 Pri 400 Get additional sample of state s0001_0010_0101_1011 to confirm group r0001_0XxX_XxX1_1011+) PCS[PC[P[1:1]]]/2/2/+0

Need chosen:  0 N(Dom 1 Act 1 Pri 400 Get additional sample of state s0001_0010_0101_1011 to confirm group r0001_0XxX_XxX1_1011+) PCS[PC[P[1:1]]]

Dom 1 s0001_0011_0111_1011 -1-> s0001_0010_0101_1011 [00/00/00/11_00/00/11/10_00/11/10/11_11/00/11/11]
1 step run.

Dom 1 s0001_0010_0101_1011 -1-> s0001_0011_0111_1011 [00/00/00/11_00/00/11/01_00/11/01/11_11/00/11/11]

  Square s0001_0010_0101_1011 adding result 2 s0001_0011_0111_1011, pn 1, pnc false
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_1001, s0_0011]), (s0_0011 - [s0_1011]), (s0_1001 - [s0_1011])]

Number needs: 45, priority(count): 400(8) 401(11) 402(3) 403(2) 500(3) 600(3) 604(1) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 156 All domain states: SC[s0_1001, s0001_0011_0111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0011_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 1 Pri 400 Get additional sample of state s0001_0010_0101_1011 to confirm group r0001_0XxX_XxX1_1011+) PCS[PC[P[1:1]]]/2/2/+0

Need chosen:  0 N(Dom 1 Act 1 Pri 400 Get additional sample of state s0001_0010_0101_1011 to confirm group r0001_0XxX_XxX1_1011+) PCS[PC[P[1:1]]]

Dom 1 s0001_0011_0111_1011 -1-> s0001_0010_0101_1011 [00/00/00/11_00/00/11/10_00/11/10/11_11/00/11/11]
1 step run.

Dom 1 s0001_0010_0101_1011 -1-> s0001_0011_0111_1011 [00/00/00/11_00/00/11/01_00/11/01/11_11/00/11/11]

  Square s0001_0010_0101_1011 adding result 3 s0001_0011_0111_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_1001, s0_0011]), (s0_0011 - [s0_1011]), (s0_1001 - [s0_1011])]

Number needs: 44, priority(count): 400(7) 401(11) 402(3) 403(2) 500(3) 600(3) 604(1) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 157 All domain states: SC[s0_1001, s0001_0011_0111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0011_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 400 Get additional sample of state s1_1010 to confirm group rX_Xx1x+) PCS[PC[P[0:2,4]], PC[P[0:1]]]/3/3/+0
 1 N(Dom 0 Act 3 Pri 400 Get additional sample of state s0_0111 to confirm group rX_Xx1x+) PCS[PC[P[0:5,1,2]]]/3/3/+0
 2 N(Dom 0 Act 4 Pri 400 Get additional sample of state s0_1110 to confirm group rX_1xxX+) PCS[PC[P[0:2,2]], PC[P[0:1]]]/3/3/+0
 3 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0010_1101_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[1:3,1,4]]]/3/5/+0
 4 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0010_0001_1011 to confirm group r0001_0xXx_xxx1_1011+) PCS[PC[P[1:1,2,4]]]/3/5/+0

Need chosen:  1 N(Dom 0 Act 3 Pri 400 Get additional sample of state s0_0111 to confirm group rX_Xx1x+) PCS[PC[P[0:5,1,2]]]

All domain states: SC[s0_1001, s0001_0011_0111_1011]

Dom 0 s0_1001 -5-> s0_0001 [00_10/00/00/11]

  Square s0_1001 adding result 4 s0_0001, pn 1, pnc true

Dom 0 s0_0001 -1-> s0_0000 [00_00/00/00/10]

  Square s0_0001 adding result 2 s0_0000, pn changed from 1 to 2, pnc false

Dom 0 Act 1 square s0_0001 pn: 2 invalidates
             group r0_0001 pn: 1

Change [s0_0001 -01> s0_0000] unexpected, expected STP[r0_0001 -01> r0_0101 Alt: None]
Run plan failed, domain::run_plan: Unexpected result, step failed.
Try again with PCS[PC[[P[0, r0_0000-2->r0_0010]], -1], PC[[P[0, r0_0010-1->r0_0011-2->r0_0111]], -1]]

Dom 0 s0_0000 -2-> s0_0010 [00_00/00/01/00]
---- 
Dom 0 s0_0010 -1-> s0_0011 [00_00/00/11/01]

Dom 0 s0_0011 -2-> s0_0111 [00_00/01/11/11]

  Square s0_0011 adding result 2 s0_0111, pn 1, pnc false
3 steps run.

Dom 0 s0_0111 -3-> s0_0101 [00_00/11/10/11]

  Square s0_0111 adding result 2 s0_0101, pn 1, pnc false
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0XXX (s0_0011 - [s0_1011])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
Options:
  gggg [(s0_1011 - [s0_1001, s0_0011]), (s0_0011 - [s0_1011]), (s0_1001 - [s0_1011])]

Number needs: 44, priority(count): 251(1) 400(7) 401(11) 402(4) 500(3) 600(3) 603(1) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 251
Step: 158 All domain states: SC[s0_0101, s0001_0011_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 9, calculated structure regions: [rX_XXX0, rX_X1XX, rX_1X1X, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_1X1X, rX_0XXX, rX_XX0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx])                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limiting using s0_1001) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011) num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 251 Sample State s0_0001 not in a group) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 251 Sample State s0_0001 not in a group) PCS[PC[P[0:3]]]

Dom 0 s0_0101 -3-> s0_0001 [00_00/10/00/11]
1 step run.

Dom 0 s0_0001 -1-> s0_0011 [00_00/00/01/11]

  Square s0_0001 adding result 3 s0_0011, pn changed from 2 to U, pnc changed from false to true

Dom 0 Act 1 Adding Group G(r0_0001, pn: U, pnc: f, [Unpredictable])
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
Dom 0 Act 1 Group r0_0001 confirmed
Dom 0 Act 1 Group rx_1x0X set limited on, adj mask m0_1010
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 46, priority(count): 400(7) 401(11) 402(4) 500(4) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 159 All domain states: SC[s0_0011, s0001_0011_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 400 Get additional sample of state s0_0111 to confirm group rX_Xx1x+) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 400 Get additional sample of state s0_0111 to confirm group rX_Xx1x+) PCS[PC[P[0:2]]]

Dom 0 s0_0011 -2-> s0_0111 [00_00/01/11/11]

  Square s0_0011 adding result 3 s0_0111, pn 1, pnc changed from false to true
1 step run.

Dom 0 s0_0111 -3-> s0_0101 [00_00/11/10/11]

  Square s0_0111 adding result 3 s0_0101, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 47, priority(count): 52(2) 400(6) 401(11) 402(4) 500(4) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 160 All domain states: SC[s0_0101, s0001_0011_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 9, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_XX1X, rX_0XXX], defining regions: []
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 52 Get sample in r0_0001 to find closer incompatible pair within r0_x0X1) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 52 Get sample in r0_0001 to find closer incompatible pair within r0_x0X1) PCS[PC[P[0:3]]]

Dom 0 s0_0101 -3-> s0_0001 [00_00/10/00/11]
1 step run.

Dom 0 s0_0001 -2-> s0_0011 [00_00/00/01/11]

Dom 0 Adding square s0_0001 -2-> s0_0011
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Dom 0 Act 2 deleted unneeded squares: [s1_1000, s0_0011, s0_1100]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 46, priority(count): 52(1) 400(6) 401(11) 402(4) 500(4) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 161 All domain states: SC[s0_0011, s0001_0011_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_1XXX, r1_XXXX, rX_XX1X, rX_0XXX], defining regions: []
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 52 Get additional sample of state s0_0001 to find closer incompatible pair within r0_x0X1) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 52 Get additional sample of state s0_0001 to find closer incompatible pair within r0_x0X1) PCS[PC[P[0:3]]]

Dom 0 s0_0011 -3-> s0_0001 [00_00/00/10/11]
1 step run.

Dom 0 s0_0001 -2-> s0_0011 [00_00/00/01/11]

  Square s0_0001 adding result 2 s0_0011, pn 1, pnc false
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 45, priority(count): 400(6) 401(11) 402(4) 500(4) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 162 All domain states: SC[s0_0011, s0001_0011_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX+, pn: 1, pnc: f, [Xx_11/XX/XX/XX]) num Sqrs: 3 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 400 Get additional sample of state s1_1010 to confirm group rX_Xx1x+) PCS[PC[P[0:1,4,4]]]/3/3/+0
 1 N(Dom 0 Act 4 Pri 400 Get additional sample of state s0_1110 to confirm group rX_1xxX+) PCS[PC[P[0:4,2,1]]]/3/3/+0
 2 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0010_1101_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[1:3,1,4]]]/3/5/+0
 3 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0010_0001_1011 to confirm group r0001_0xXx_xxx1_1011+) PCS[PC[P[1:2,1,4]]]/3/5/+0

Need chosen:  3 N(Dom 1 Act 4 Pri 400 Get additional sample of state s0001_0010_0001_1011 to confirm group r0001_0xXx_xxx1_1011+) PCS[PC[P[1:2,1,4]]]

All domain states: SC[s0_0011, s0001_0011_0111_1011]

Dom 1 s0001_0011_0111_1011 -2-> s0001_0010_0011_1011 [00/00/00/11_00/00/11/10_00/10/11/11_11/00/11/11]

Dom 1 s0001_0010_0011_1011 -1-> s0001_0011_0001_1011 [00/00/00/11_00/00/11/01_00/00/10/11_11/00/11/11]

Dom 1 s0001_0011_0001_1011 -4-> s0001_0010_0001_1011 [00/00/00/11_00/00/11/10_00/00/00/11_11/00/11/11]
3 steps run.

Dom 1 s0001_0010_0001_1011 -4-> s0001_0011_0001_1011 [00/00/00/11_00/00/11/01_00/00/00/11_11/00/11/11]

  Square s0001_0010_0001_1011 adding result 3 s0001_0011_0001_1011, pn 1, pnc changed from false to true
Dom 1 Act 4 Group r0001_0xXx_xxx1_1011 confirmed
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 45, priority(count): 400(5) 401(11) 402(4) 500(5) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 163 All domain states: SC[s0_0011, s0001_0011_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0011_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 6 Pri 400 Get additional sample of state s0001_0001_1001_1011 to confirm group r0001_0xxX_Xxx1_1011+) PCS[PC[P[1:6,3,4]]]/2/4/+0

Need chosen:  0 N(Dom 1 Act 6 Pri 400 Get additional sample of state s0001_0001_1001_1011 to confirm group r0001_0xxX_Xxx1_1011+) PCS[PC[P[1:6,3,4]]]

Dom 1 s0001_0011_0001_1011 -6-> s0001_0001_0001_1011 [00/00/00/11_00/00/10/11_00/00/00/11_11/00/11/11]

Dom 1 s0001_0001_0001_1011 -3-> s0001_0000_1001_1011 [00/00/00/11_00/00/00/10_01/00/00/11_11/00/11/11]

Dom 1 s0001_0000_1001_1011 -4-> s0001_0001_1001_1011 [00/00/00/11_00/00/00/01_11/00/00/11_11/00/11/11]
3 steps run.

Dom 1 s0001_0001_1001_1011 -6-> s0001_0011_1001_1011 [00/00/00/11_00/00/01/11_11/00/00/11_11/00/11/11]

  Square s0001_0001_1001_1011 adding result 3 s0001_0011_1001_1011, pn 1, pnc changed from false to true
Dom 1 Act 6 Group r0001_0xxX_Xxx1_1011 confirmed
Need satisfied
Dom 1 Act 6 Group r0001_0xxX_Xxx1_1011 set limited on, adj mask m0000_0000_0000_0000
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 43, priority(count): 400(4) 401(11) 402(4) 500(5) 600(3) 604(3) 605(3) 900(2) 902(5) 903(1) 904(2) 
Priority 400
Step: 164 All domain states: SC[s0_0011, s0001_0011_1001_1011] Status: Positive, in RC[rx_0xx1, rXXXX_XXX1_1XXX_XXXX], 2 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0011_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0010_1101_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[1:2]]]/2/2/+0

Need chosen:  0 N(Dom 1 Act 2 Pri 400 Get additional sample of state s0001_0010_1101_1011 to confirm group r0001_0xXx_XXx1_1011+) PCS[PC[P[1:2]]]

Dom 1 s0001_0011_1001_1011 -2-> s0001_0010_1101_1011 [00/00/00/11_00/00/11/10_11/01/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0010_1101_1011 -2-> s0001_0011_1001_1011 [00/00/00/11_00/00/11/01_11/10/00/11_11/00/11/11]

  Square s0001_0010_1101_1011 adding result 3 s0001_0011_1001_1011, pn 1, pnc changed from false to true
Dom 1 Act 2 Group r0001_0xXx_XXx1_1011 confirmed
Need satisfied
Dom 1 Act 2 Group r0001_0xXx_XXx1_1011 set limited on, adj mask m0000_0000_0000_0000
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 42, priority(count): 400(3) 401(11) 402(4) 500(5) 600(3) 604(3) 605(3) 900(2) 902(5) 903(1) 904(2) 
Priority 400
Step: 165 All domain states: SC[s0_0011, s0001_0011_1001_1011] Status: Positive, in RC[rx_0xx1, rXXXX_XXX1_1XXX_XXXX], 2 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11]) num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0011_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 400 Get additional sample of state s1_1010 to confirm group rX_Xx1x+) PCS[PC[P[0:4,4,1]]]/3/3/+0
 1 N(Dom 0 Act 4 Pri 400 Get additional sample of state s0_1110 to confirm group rX_1xxX+) PCS[PC[P[0:1,2,4]]]/3/3/+0
 2 N(Dom 1 Act 1 Pri 400 Get additional sample of state s0001_0101_1011_1011 to confirm group r0001_0XxX_XxX1_1011+) PCS[PC[P[1:7,6,1,4]]]/3/5/+0

Need chosen:  1 N(Dom 0 Act 4 Pri 400 Get additional sample of state s0_1110 to confirm group rX_1xxX+) PCS[PC[P[0:1,2,4]]]

All domain states: SC[s0_0011, s0001_0011_1001_1011]

Dom 0 s0_0011 -1-> s0_0010 [00_00/00/11/10]

  Square s0_0011 adding result 4 s0_0010, pn 1, pnc true

Dom 0 s0_0010 -2-> s0_0110 [00_00/01/11/00]

Dom 0 s0_0110 -4-> s0_1110 [00_01/11/11/00]

  Square s0_0110 adding result 2 s0_1110, pn 1, pnc false
3 steps run.

Dom 0 s0_1110 -4-> s1_1110 [01_11/11/11/00]

  Square s0_1110 adding result 3 s1_1110, pn 1, pnc changed from false to true
Dom 0 Act 4 Group rX_1xxX confirmed
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 43, priority(count): 400(2) 401(11) 402(4) 500(6) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 166 All domain states: SC[s1_1110, s0001_0011_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x+, pn: 1, pnc: f, [XX_XX/XX/10/XX]) num Sqrs: 4 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX]) num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 400 Get additional sample of state s1_1010 to confirm group rX_Xx1x+) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 400 Get additional sample of state s1_1010 to confirm group rX_Xx1x+) PCS[PC[P[0:2]]]

Dom 0 s1_1110 -2-> s1_1010 [11_11/10/11/00]
1 step run.

Dom 0 s1_1010 -3-> s1_1000 [11_11/00/10/00]

  Square s1_1010 adding result 3 s1_1000, pn 1, pnc changed from false to true
Dom 0 Act 3 Group rX_Xx1x confirmed
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 43, priority(count): 400(1) 401(11) 402(4) 500(7) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 400
Step: 167 All domain states: SC[s1_1000, s0001_0011_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s0_1110) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 1 Act 1 Pri 400 Get additional sample of state s0001_0101_1011_1011 to confirm group r0001_0XxX_XxX1_1011+) PCS[PC[P[1:6,7,1,4]]]/3/5/+0

Need chosen:  0 N(Dom 1 Act 1 Pri 400 Get additional sample of state s0001_0101_1011_1011 to confirm group r0001_0XxX_XxX1_1011+) PCS[PC[P[1:6,7,1,4]]]

All domain states: SC[s1_1000, s0001_0011_1001_1011]

Dom 1 s0001_0011_1001_1011 -6-> s0001_0001_1001_1011 [00/00/00/11_00/00/10/11_11/00/00/11_11/00/11/11]

Dom 1 s0001_0001_1001_1011 -7-> s0001_0101_1001_1011 [00/00/00/11_00/01/00/11_11/00/00/11_11/00/11/11]

  Square s0001_0001_1001_1011 adding result 2 s0001_0101_1001_1011, pn 1, pnc false

Dom 1 s0001_0101_1001_1011 -1-> s0001_0100_1011_1011 [00/00/00/11_00/11/00/10_11/00/01/11_11/00/11/11]

Dom 1 s0001_0100_1011_1011 -4-> s0001_0101_1011_1011 [00/00/00/11_00/11/00/01_11/00/11/11_11/00/11/11]
4 steps run.

Dom 1 s0001_0101_1011_1011 -1-> s0001_0100_1001_1011 [00/00/00/11_00/11/00/10_11/00/10/11_11/00/11/11]

  Square s0001_0101_1011_1011 adding result 3 s0001_0100_1001_1011, pn 1, pnc changed from false to true
Dom 1 Act 1 Group r0001_0XxX_XxX1_1011 confirmed
Need satisfied
Dom 1 Act 1 Group r0001_0XxX_XxX1_1011 set limited on, adj mask m0000_0000_0000_0000
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 42, priority(count): 401(11) 402(4) 500(7) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 168 All domain states: SC[s1_1000, s0001_0100_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0100_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 401 Get additional sample of state s1_1010 to confirm group rX_Xx1x) PCS[PC[P[0:2]]]/1/1/+0
 1 N(Dom 0 Act 3 Pri 401 Get additional sample of state s0_1000 to confirm group rx_Xx0x+) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  1 N(Dom 0 Act 3 Pri 401 Get additional sample of state s0_1000 to confirm group rx_Xx0x+) PCS[PC[P[0:4]]]

All domain states: SC[s1_1000, s0001_0100_1001_1011]

Dom 0 s1_1000 -4-> s0_1000 [10_11/00/00/00]
1 step run.

Dom 0 s0_1000 -3-> s0_1100 [00_11/01/00/00]

  Square s0_1000 adding result 2 s0_1100, pn 1, pnc false
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 42, priority(count): 401(11) 402(4) 500(7) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 169 All domain states: SC[s0_1100, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 8
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 401 Get additional sample of state s0_1000 to confirm group rx_Xx0x+) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 401 Get additional sample of state s0_1000 to confirm group rx_Xx0x+) PCS[PC[P[0:3]]]

Dom 0 s0_1100 -3-> s0_1000 [00_11/10/00/00]
1 step run.

Dom 0 s0_1000 -3-> s0_1100 [00_11/01/00/00]

  Square s0_1000 adding result 3 s0_1100, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 42, priority(count): 52(1) 401(10) 402(4) 500(7) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 170 All domain states: SC[s0_1100, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X, r0_XXXX], defining regions: []
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s0_1010 to find closer incompatible pair within rx_10x0) PCS[PC[P[0:3,2]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s0_1010 to find closer incompatible pair within rx_10x0) PCS[PC[P[0:3,2]]]

Dom 0 s0_1100 -3-> s0_1000 [00_11/10/00/00]

Dom 0 s0_1000 -2-> s0_1010 [00_11/00/01/00]
2 steps run.

Dom 0 s0_1010 -3-> s0_1000 [00_11/00/10/00]

  Square s0_1010 adding result 2 s0_1000, pn 1, pnc false
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 42, priority(count): 52(1) 401(10) 402(4) 500(7) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 171 All domain states: SC[s0_1000, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X, r0_XXXX], defining regions: []
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s0_1010 to find closer incompatible pair within rx_10x0) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s0_1010 to find closer incompatible pair within rx_10x0) PCS[PC[P[0:2]]]

Dom 0 s0_1000 -2-> s0_1010 [00_11/00/01/00]
1 step run.

Dom 0 s0_1010 -3-> s0_1000 [00_11/00/10/00]

  Square s0_1010 adding result 3 s0_1000, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 41, priority(count): 401(10) 402(4) 500(7) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 172 All domain states: SC[s0_1000, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 7
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 5 Pri 401 Get additional sample of state s0_0000 to confirm group rX_0XXX+) PCS[PC[P[0:5]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 5 Pri 401 Get additional sample of state s0_0000 to confirm group rX_0XXX+) PCS[PC[P[0:5]]]

Dom 0 s0_1000 -5-> s0_0000 [00_10/00/00/00]
1 step run.

Dom 0 s0_0000 -5-> s1_0000 [01_00/00/00/00]

Dom 0 Adding square s0_0000 -5-> s1_0000
Need satisfied
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 41, priority(count): 401(10) 402(4) 500(7) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 173 All domain states: SC[s1_0000, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 401 Get additional sample of state s1_0010 to confirm group rX_0x1x) PCS[PC[P[0:2]]]/1/1/+0
 1 N(Dom 0 Act 4 Pri 401 Get additional sample of state s1_0100 to confirm group rX_0Xxx+) PCS[PC[P[0:3]]]/1/1/+0
 2 N(Dom 0 Act 5 Pri 401 Get additional sample of state s0_0000 to confirm group rX_0XXX+) PCS[PC[P[0:5]]]/1/1/+0

Need chosen:  1 N(Dom 0 Act 4 Pri 401 Get additional sample of state s1_0100 to confirm group rX_0Xxx+) PCS[PC[P[0:3]]]

Dom 0 s1_0000 -3-> s1_0100 [11_00/01/00/00]

  Square s1_0000 adding result 2 s1_0100, pn 1, pnc false
1 step run.

Dom 0 s1_0100 -4-> s1_1100 [11_01/11/00/00]

  Square s1_0100 adding result 3 s1_1100, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]

Number needs: 41, priority(count): 53(1) 401(9) 402(4) 500(7) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 174 All domain states: SC[s1_1100, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 9, calculated structure regions: [rX_XXX0, rX_XX01, rX_X00X, r0_XXXX, rX_0XXX, rX_X1XX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 53 Get additional sample of state s1_1100 to find closer incompatible pair within r1_xX0x) At Target

Need chosen:  0 N(Dom 0 Act 4 Pri 53 Get additional sample of state s1_1100 to find closer incompatible pair within r1_xX0x) At Target

Dom 0 s1_1100 -4-> s0_1100 [10_11/11/00/00]

  Square s1_1100 adding result 2 s0_1100, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_0011 - [s1_1011]), (s1_1011 - [s1_0011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 41, priority(count): 53(1) 401(9) 402(4) 500(7) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 175 All domain states: SC[s0_1100, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 9, calculated structure regions: [rX_XXX0, rX_XX01, rX_X00X, r0_XXXX, rX_0XXX, rX_X1XX, rX_1XXX], defining regions: [rX_0XXX, rX_1XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 53 Get additional sample of state s1_1100 to find closer incompatible pair within r1_xX0x) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 4 Pri 53 Get additional sample of state s1_1100 to find closer incompatible pair within r1_xX0x) PCS[PC[P[0:4]]]

Dom 0 s0_1100 -4-> s1_1100 [01_11/11/00/00]

  Square s0_1100 adding result 2 s1_1100, pn 1, pnc false
1 step run.

Dom 0 s1_1100 -4-> s0_1100 [10_11/11/00/00]

  Square s1_1100 adding result 3 s0_1100, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 40, priority(count): 401(9) 402(4) 500(7) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 176 All domain states: SC[s0_1100, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 9, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, rX_X0X0, rX_1XXX, rX_XX10, rX_X11X, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 5 Pri 401 Get additional sample of state s0_0000 to confirm group rX_0XXX+) PCS[PC[P[0:5,3]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 5 Pri 401 Get additional sample of state s0_0000 to confirm group rX_0XXX+) PCS[PC[P[0:5,3]]]

Dom 0 s0_1100 -5-> s0_0100 [00_10/11/00/00]

Dom 0 s0_0100 -3-> s0_0000 [00_00/10/00/00]
2 steps run.

Dom 0 s0_0000 -5-> s1_0000 [01_00/00/00/00]

  Square s0_0000 adding result 2 s1_0000, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 40, priority(count): 401(9) 402(4) 500(7) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 177 All domain states: SC[s1_0000, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 9, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, rX_X0X0, rX_1XXX, rX_XX10, rX_X11X, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 401 Get additional sample of state s1_0010 to confirm group rX_0x1x) PCS[PC[P[0:2]]]/1/1/+0
 1 N(Dom 0 Act 5 Pri 401 Get additional sample of state s0_0000 to confirm group rX_0XXX+) PCS[PC[P[0:5]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 401 Get additional sample of state s1_0010 to confirm group rX_0x1x) PCS[PC[P[0:2]]]

Dom 0 s1_0000 -2-> s1_0010 [11_00/00/01/00]
1 step run.

Dom 0 s1_0010 -1-> s1_0011 [11_00/00/11/01]

  Square s1_0010 adding result 2 s1_0011, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 40, priority(count): 401(9) 402(4) 500(7) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 178 All domain states: SC[s1_0011, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 9, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, rX_X0X0, rX_1XXX, rX_XX10, rX_X11X, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 401 Get additional sample of state s1_0010 to confirm group rX_0x1x) PCS[PC[P[0:1]]]/1/1/+0
 1 N(Dom 0 Act 4 Pri 401 Get additional sample of state s0_0011 to confirm group rX_0Xxx+) PCS[PC[P[0:5]]]/1/1/+0
 2 N(Dom 0 Act 5 Pri 401 Get additional sample of state s1_0111 to confirm group rX_0XXX+) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  1 N(Dom 0 Act 4 Pri 401 Get additional sample of state s0_0011 to confirm group rX_0Xxx+) PCS[PC[P[0:5]]]

Dom 0 s1_0011 -5-> s0_0011 [10_00/00/11/11]
1 step run.

Dom 0 s0_0011 -4-> s0_1011 [00_01/00/11/11]

Dom 0 Adding square s0_0011 -4-> s0_1011
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 40, priority(count): 401(9) 402(4) 500(7) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 179 All domain states: SC[s0_1011, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, rX_X0X0, rX_1XXX, rX_XX10, rX_X11X, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 401 Get additional sample of state s0_0011 to confirm group rX_0Xxx+) PCS[PC[P[0:5]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 4 Pri 401 Get additional sample of state s0_0011 to confirm group rX_0Xxx+) PCS[PC[P[0:5]]]

Dom 0 s0_1011 -5-> s0_0011 [00_10/00/11/11]
1 step run.

Dom 0 s0_0011 -4-> s0_1011 [00_01/00/11/11]

  Square s0_0011 adding result 2 s0_1011, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 40, priority(count): 401(9) 402(4) 500(7) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 180 All domain states: SC[s0_1011, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, rX_X0X0, rX_1XXX, rX_XX10, rX_X11X, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx+, pn: 1, pnc: f, [XX_01/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 401 Get additional sample of state s0_0011 to confirm group rX_0Xxx+) PCS[PC[P[0:5]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 4 Pri 401 Get additional sample of state s0_0011 to confirm group rX_0Xxx+) PCS[PC[P[0:5]]]

Dom 0 s0_1011 -5-> s0_0011 [00_10/00/11/11]
1 step run.

Dom 0 s0_0011 -4-> s0_1011 [00_01/00/11/11]

  Square s0_0011 adding result 3 s0_1011, pn 1, pnc changed from false to true
Dom 0 Act 4 Group rX_0Xxx confirmed
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 41, priority(count): 53(1) 401(8) 402(4) 500(7) 501(1) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 181 All domain states: SC[s0_1011, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, rX_X0X0, rX_1XXX, rX_XX10, rX_X11X, r0_XXX0, r0_XX0X, r0_X1XX, r0_XXX1, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 53 Get additional sample of state s0_0110 to find closer incompatible pair within r0_xx1X) PCS[PC[P[0:5,1,2]]]/3/3/+0

Need chosen:  0 N(Dom 0 Act 4 Pri 53 Get additional sample of state s0_0110 to find closer incompatible pair within r0_xx1X) PCS[PC[P[0:5,1,2]]]

Dom 0 s0_1011 -5-> s0_0011 [00_10/00/11/11]

Dom 0 s0_0011 -1-> s0_0010 [00_00/00/11/10]

Dom 0 s0_0010 -2-> s0_0110 [00_00/01/11/00]
3 steps run.

Dom 0 s0_0110 -4-> s0_1110 [00_01/11/11/00]

  Square s0_0110 adding result 3 s0_1110, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 40, priority(count): 401(8) 402(4) 500(7) 501(1) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 182 All domain states: SC[s0_1110, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 401 Get additional sample of state s1_1010 to confirm group rX_Xx1x) PCS[PC[P[0:2,4]]]/2/2/+0
 1 N(Dom 0 Act 2 Pri 401 Get additional sample of state s0_0111 to confirm group rX_Xx1x) PCS[PC[P[0:1,5]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 401 Get additional sample of state s1_1010 to confirm group rX_Xx1x) PCS[PC[P[0:2,4]]]

Dom 0 s0_1110 -2-> s0_1010 [00_11/10/11/00]

Dom 0 s0_1010 -4-> s1_1010 [01_11/00/11/00]
2 steps run.

Dom 0 s1_1010 -2-> s1_1110 [11_11/01/11/00]

  Square s1_1010 adding result 2 s1_1110, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 40, priority(count): 401(8) 402(4) 500(7) 501(1) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 183 All domain states: SC[s1_1110, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 7
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 401 Get additional sample of state s1_1010 to confirm group rX_Xx1x) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 401 Get additional sample of state s1_1010 to confirm group rX_Xx1x) PCS[PC[P[0:2]]]

Dom 0 s1_1110 -2-> s1_1010 [11_11/10/11/00]
1 step run.

Dom 0 s1_1010 -2-> s1_1110 [11_11/01/11/00]

  Square s1_1010 adding result 3 s1_1110, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 40, priority(count): 53(1) 401(7) 402(4) 500(7) 501(1) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 184 All domain states: SC[s1_1110, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XXX0, rX_XX1X, r1_XXXX], defining regions: []
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 53 Get additional sample of state s1_1000 to find closer incompatible pair within rX_10Xx) PCS[PC[P[0:2,3]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 53 Get additional sample of state s1_1000 to find closer incompatible pair within rX_10Xx) PCS[PC[P[0:2,3]]]

Dom 0 s1_1110 -2-> s1_1010 [11_11/10/11/00]

Dom 0 s1_1010 -3-> s1_1000 [11_11/00/10/00]

  Square s1_1010 adding result 4 s1_1000, pn 1, pnc true
2 steps run.

Dom 0 s1_1000 -2-> s1_1010 [11_11/00/01/00]

  Square s1_1000 adding result 2 s1_1010, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 40, priority(count): 53(1) 401(7) 402(4) 500(7) 501(1) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 185 All domain states: SC[s1_1010, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XXX0, rX_XX1X, r1_XXXX], defining regions: []
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 53 Get additional sample of state s1_1000 to find closer incompatible pair within rX_10Xx) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 53 Get additional sample of state s1_1000 to find closer incompatible pair within rX_10Xx) PCS[PC[P[0:3]]]

Dom 0 s1_1010 -3-> s1_1000 [11_11/00/10/00]
1 step run.

Dom 0 s1_1000 -2-> s1_1010 [11_11/00/01/00]

  Square s1_1000 adding result 3 s1_1010, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 39, priority(count): 401(7) 402(4) 500(7) 501(1) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 186 All domain states: SC[s1_1010, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: f, [XX_00/XX/11/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 401 Get additional sample of state s1_0010 to confirm group rX_0x1x) PCS[PC[P[0:5]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 401 Get additional sample of state s1_0010 to confirm group rX_0x1x) PCS[PC[P[0:5]]]

Dom 0 s1_1010 -5-> s1_0010 [11_10/00/11/00]

  Square s1_1010 adding result 2 s1_0010, pn 1, pnc false
1 step run.

Dom 0 s1_0010 -1-> s1_0011 [11_00/00/11/01]

  Square s1_0010 adding result 3 s1_0011, pn 1, pnc changed from false to true
Dom 0 Act 1 Group rX_0x1x confirmed
Need satisfied
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 38, priority(count): 401(6) 402(3) 500(7) 501(2) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 187 All domain states: SC[s1_0011, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 5 Pri 401 Get additional sample of state s1_0111 to confirm group rX_0XXX+) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 5 Pri 401 Get additional sample of state s1_0111 to confirm group rX_0XXX+) PCS[PC[P[0:2]]]

Dom 0 s1_0011 -2-> s1_0111 [11_00/01/11/11]
1 step run.

Dom 0 s1_0111 -5-> s0_0111 [10_00/11/11/11]

  Square s1_0111 adding result 2 s0_0111, pn 1, pnc false
Need satisfied
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 38, priority(count): 401(6) 402(3) 500(7) 501(2) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 188 All domain states: SC[s0_0111, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 401 Get additional sample of state s0_0111 to confirm group rX_Xx1x) At Target

Need chosen:  0 N(Dom 0 Act 2 Pri 401 Get additional sample of state s0_0111 to confirm group rX_Xx1x) At Target

Dom 0 s0_0111 -2-> s0_0011 [00_00/10/11/11]

  Square s0_0111 adding result 2 s0_0011, pn 1, pnc false
Need satisfied
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 38, priority(count): 401(6) 402(3) 500(7) 501(2) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 189 All domain states: SC[s0_0011, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: f, [XX_XX/Xx/11/XX])                         num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 401 Get additional sample of state s0_0111 to confirm group rX_Xx1x) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 401 Get additional sample of state s0_0111 to confirm group rX_Xx1x) PCS[PC[P[0:2]]]

Dom 0 s0_0011 -2-> s0_0111 [00_00/01/11/11]

  Square s0_0011 adding result 4 s0_0111, pn 1, pnc true
1 step run.

Dom 0 s0_0111 -2-> s0_0011 [00_00/10/11/11]

  Square s0_0111 adding result 3 s0_0011, pn 1, pnc changed from false to true
Dom 0 Act 2 Group rX_Xx1x confirmed
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
defining vert: rX_XX1X (s1_1010 - [s1_1000])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 38, priority(count): 401(5) 402(3) 500(7) 501(3) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 190 All domain states: SC[s0_0011, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 5 Pri 401 Get additional sample of state s1_0111 to confirm group rX_0XXX+) PCS[PC[P[0:5,2]]]/2/2/+0
 1 N(Dom 0 Act 5 Pri 401 Get additional sample of state s0_0000 to confirm group rX_0XXX+) PCS[PC[P[0:1,3]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 5 Pri 401 Get additional sample of state s1_0111 to confirm group rX_0XXX+) PCS[PC[P[0:5,2]]]

Dom 0 s0_0011 -5-> s1_0011 [01_00/00/11/11]

Dom 0 s1_0011 -2-> s1_0111 [11_00/01/11/11]
2 steps run.

Dom 0 s1_0111 -5-> s0_0111 [10_00/11/11/11]

  Square s1_0111 adding result 3 s0_0111, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
Options:
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 38, priority(count): 52(1) 401(4) 402(3) 500(7) 501(3) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 191 All domain states: SC[s0_0111, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_XXX1, rX_0XXX], defining regions: []
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 5 Pri 52 Get additional sample of state s1_1111 to find closer incompatible pair within r1_x11X) PCS[PC[P[0:4,4]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 5 Pri 52 Get additional sample of state s1_1111 to find closer incompatible pair within r1_x11X) PCS[PC[P[0:4,4]]]

Dom 0 s0_0111 -4-> s0_1111 [00_01/11/11/11]

Dom 0 s0_1111 -4-> s1_1111 [01_11/11/11/11]
2 steps run.

Dom 0 s1_1111 -5-> s1_0111 [11_10/11/11/11]

  Square s1_1111 adding result 2 s1_0111, pn 1, pnc false
Need satisfied
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 38, priority(count): 52(1) 401(4) 402(3) 500(7) 501(3) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 192 All domain states: SC[s1_0111, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_XXX1, rX_0XXX], defining regions: []
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 5 Pri 52 Get additional sample of state s1_1111 to find closer incompatible pair within r1_x11X) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 5 Pri 52 Get additional sample of state s1_1111 to find closer incompatible pair within r1_x11X) PCS[PC[P[0:4]]]

Dom 0 s1_0111 -4-> s1_1111 [11_01/11/11/11]
1 step run.

Dom 0 s1_1111 -5-> s1_0111 [11_10/11/11/11]

  Square s1_1111 adding result 3 s1_0111, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 37, priority(count): 401(4) 402(3) 500(7) 501(3) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 193 All domain states: SC[s1_0111, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 9, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 3 in1: 3))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 401 Get additional sample of state s1_0101 to confirm group rx_Xx0x+) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 401 Get additional sample of state s1_0101 to confirm group rx_Xx0x+) PCS[PC[P[0:3]]]

Dom 0 s1_0111 -3-> s1_0101 [11_00/11/10/11]
1 step run.

Dom 0 s1_0101 -3-> s1_0001 [11_00/10/00/11]

Dom 0 Adding square s1_0101 -3-> s1_0001
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 37, priority(count): 401(4) 402(3) 500(7) 501(3) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 194 All domain states: SC[s1_0001, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 401 Get additional sample of state s1_0101 to confirm group rx_Xx0x+) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 401 Get additional sample of state s1_0101 to confirm group rx_Xx0x+) PCS[PC[P[0:3]]]

Dom 0 s1_0001 -3-> s1_0101 [11_00/01/00/11]
1 step run.

Dom 0 s1_0101 -3-> s1_0001 [11_00/10/00/11]

  Square s1_0101 adding result 2 s1_0001, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 37, priority(count): 401(4) 402(3) 500(7) 501(3) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 195 All domain states: SC[s1_0001, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x+, pn: 1, pnc: f, [XX_XX/Xx/00/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 401 Get additional sample of state s1_0101 to confirm group rx_Xx0x+) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 401 Get additional sample of state s1_0101 to confirm group rx_Xx0x+) PCS[PC[P[0:3]]]

Dom 0 s1_0001 -3-> s1_0101 [11_00/01/00/11]
1 step run.

Dom 0 s1_0101 -3-> s1_0001 [11_00/10/00/11]

  Square s1_0101 adding result 3 s1_0001, pn 1, pnc changed from false to true
Dom 0 Act 3 Group rx_Xx0x confirmed
Need satisfied
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 37, priority(count): 401(3) 402(3) 500(7) 501(4) 600(3) 604(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 196 All domain states: SC[s1_0001, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 10, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_xxXx+, pn: 1, pnc: f, [11_XX/XX/XX/Xx])                                                         num Sqrs: 3 Sqrs in: 4 in1: 0),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX+, pn: 1, pnc: f, [Xx_00/XX/XX/XX])                         num Sqrs: 3 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 5 Pri 401 Get additional sample of state s0_0000 to confirm group rX_0XXX+) PCS[PC[P[0:1,5]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 5 Pri 401 Get additional sample of state s0_0000 to confirm group rX_0XXX+) PCS[PC[P[0:1,5]]]

Dom 0 s1_0001 -1-> s1_0011 [11_00/00/01/11]

Dom 0 Adding square s1_0001 -1-> s1_0011

Dom 0 Act 1 square s1_0001 [11_00/00/01/11] invalidates
             group r1_xxXx+ [11_XX/XX/XX/Xx]

Dom 0 Act 1 Adding Group G(r1_00Xx, pn: 1, pnc: f, [11_00/00/X1/X1]) from [s1_0010, s1_0001]
Dom 0 Act 1 Group r1_00Xx confirmed

Change [s1_0001 -01> s1_0011] unexpected, expected STP[r1_0001 -01> r1_0000 Alt: None]
Run plan failed, domain::run_plan: Unexpected result, step failed.
Try again with PCS[PC[[P[0, r1_0011-5->r0_0011-1->r0_0010-3->r0_0000]]]]

Dom 0 s1_0011 -5-> s0_0011 [10_00/00/11/11]

Dom 0 s0_0011 -1-> s0_0010 [00_00/00/11/10]

Dom 0 s0_0010 -3-> s0_0000 [00_00/00/10/00]
3 steps run.

Dom 0 s0_0000 -5-> s1_0000 [01_00/00/00/00]

  Square s0_0000 adding result 3 s1_0000, pn 1, pnc changed from false to true
Dom 0 Act 5 Group rX_0XXX confirmed
Need satisfied
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 38, priority(count): 201(1) 401(2) 402(2) 500(7) 501(4) 505(1) 600(3) 601(1) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 201
Step: 197 All domain states: SC[s1_0000, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 11, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_00Xx,  pn: 1, pnc: t, [11_00/00/X1/X1],                 limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 2 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_X1XX, rX_0XXX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limiting using s1_0100) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110) num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limiting using s0_0000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 201 Sample Region r1_0011 intersection of rX_0x1x [11_00/00/11/10] and r1_00Xx [11_00/00/11/11]) PCS[PC[P[0:1]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 201 Sample Region r1_0011 intersection of rX_0x1x [11_00/00/11/10] and r1_00Xx [11_00/00/11/11]) PCS[PC[P[0:1]]]

Dom 0 s1_0000 -1-> s1_0100 [11_00/01/00/00]

Dom 0 Adding square s1_0000 -1-> s1_0100

Dom 0 Act 1 square s1_0000 [11_00/01/00/00] invalidates
             group r1_00Xx [11_00/00/X1/X1]

Dom 0 Act 1 Adding Group G(r1_0001, pn: 1, pnc: f, [11_00/00/01/11])

Dom 0 Act 1 Adding Group G(r1_0000, pn: 1, pnc: f, [11_00/01/00/00])
Dom 0 Act 1 Group r1_0000 confirmed

Change [s1_0000 -01> s1_0100] unexpected, expected STP[r1_0000 -01> r1_0011 Alt: None]
Run plan failed, domain::run_plan: Unexpected result, step failed.
Try again with PCS[PC[[P[0, r1_0100-2->r1_0110-2->r1_0010-1->r1_0011]]]]

Dom 0 s1_0100 -2-> s1_0110 [11_00/11/01/00]

  Square s1_0100 adding result 4 s1_0110, pn 1, pnc true

Dom 0 s1_0110 -2-> s1_0010 [11_00/10/11/00]

  Square s1_0110 adding result 3 s1_0010, pn 1, pnc changed from false to true

Dom 0 s1_0010 -1-> s1_0011 [11_00/00/11/01]

  Square s1_0010 adding result 4 s1_0011, pn 1, pnc true
3 steps run.

Dom 0 s1_0011 -1-> s1_0010 [11_00/00/11/10]

Dom 0 Adding square s1_0011 -1-> s1_0010
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
Dom 0 Act 5 Group rX_0XXX set limited on, adj mask m0_1000
Dom 0 Act 2 Group rX_xX0x set limited on, adj mask m0_0010
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 36, priority(count): 401(2) 402(2) 405(1) 500(7) 501(4) 506(1) 600(2) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 198 All domain states: SC[s1_0010, s0001_0100_1001_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 13, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_0001,  pn: 1, pnc: f, [11_00/00/01/11])                                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_0000,  pn: 1, pnc: t, [11_00/01/00/00],                 limiting using s1_0000)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_11XX, rX_00XX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 401 Get additional sample of state s0001_0100_0111_1011 to confirm group r0001_0xXX_X111_1011) PCS[PC[P[1:1,3,2,7]]]/3/7/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 401 Get additional sample of state s0001_0100_0111_1011 to confirm group r0001_0xXX_X111_1011) PCS[PC[P[1:1,3,2,7]]]

All domain states: SC[s1_0010, s0001_0100_1001_1011]

Dom 1 s0001_0100_1001_1011 -1-> s0001_0101_1011_1011 [00/00/00/11_00/11/00/01_11/00/01/11_11/00/11/11]

Dom 1 s0001_0101_1011_1011 -3-> s0001_0100_0011_1011 [00/00/00/11_00/11/00/10_10/00/11/11_11/00/11/11]

Dom 1 s0001_0100_0011_1011 -2-> s0001_0101_0111_1011 [00/00/00/11_00/11/00/01_00/01/11/11_11/00/11/11]

Dom 1 s0001_0101_0111_1011 -7-> s0001_0100_0111_1011 [00/00/00/11_00/11/00/10_00/11/11/11_11/00/11/11]
4 steps run.

Dom 1 s0001_0100_0111_1011 -7-> s0001_0101_0111_1011 [00/00/00/11_00/11/00/01_00/11/11/11_11/00/11/11]

  Square s0001_0100_0111_1011 adding result 2 s0001_0101_0111_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 36, priority(count): 401(2) 402(2) 405(1) 500(7) 501(4) 506(1) 600(2) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 199 All domain states: SC[s1_0010, s0001_0101_0111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0101_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 401 Get additional sample of state s0001_0100_0111_1011 to confirm group r0001_0xXX_X111_1011) PCS[PC[P[1:4]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 401 Get additional sample of state s0001_0100_0111_1011 to confirm group r0001_0xXX_X111_1011) PCS[PC[P[1:4]]]

Dom 1 s0001_0101_0111_1011 -4-> s0001_0100_0111_1011 [00/00/00/11_00/11/00/10_00/11/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0100_0111_1011 -7-> s0001_0101_0111_1011 [00/00/00/11_00/11/00/01_00/11/11/11_11/00/11/11]

  Square s0001_0100_0111_1011 adding result 3 s0001_0101_0111_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 36, priority(count): 53(1) 401(1) 402(2) 405(1) 500(7) 501(4) 506(1) 600(2) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 200 All domain states: SC[s1_0010, s0001_0101_0111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX01_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_1XX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X1X1_1011, r0001_0XXX_0XX1_1011], defining regions: []
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0101_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 53 Get additional sample of state s0001_0100_0101_1011 to find closer incompatible pair within r0001_0100_xXX1_1011) PCS[PC[P[1:1]]]/2/2/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 53 Get additional sample of state s0001_0100_0101_1011 to find closer incompatible pair within r0001_0100_xXX1_1011) PCS[PC[P[1:1]]]

Dom 1 s0001_0101_0111_1011 -1-> s0001_0100_0101_1011 [00/00/00/11_00/11/00/10_00/11/10/11_11/00/11/11]
1 step run.

Dom 1 s0001_0100_0101_1011 -7-> s0001_0110_0101_1011 [00/00/00/11_00/11/01/00_00/11/00/11_11/00/11/11]

  Square s0001_0100_0101_1011 adding result 2 s0001_0110_0101_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 36, priority(count): 53(1) 401(1) 402(2) 405(1) 500(7) 501(4) 506(1) 600(2) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 201 All domain states: SC[s1_0010, s0001_0110_0101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX01_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_1XX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X1X1_1011, r0001_0XXX_0XX1_1011], defining regions: []
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0110_0101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 53 Get additional sample of state s0001_0100_0101_1011 to find closer incompatible pair within r0001_0100_xXX1_1011) PCS[PC[P[1:7]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 53 Get additional sample of state s0001_0100_0101_1011 to find closer incompatible pair within r0001_0100_xXX1_1011) PCS[PC[P[1:7]]]

Dom 1 s0001_0110_0101_1011 -7-> s0001_0100_0101_1011 [00/00/00/11_00/11/10/00_00/11/00/11_11/00/11/11]

  Square s0001_0110_0101_1011 adding result 2 s0001_0100_0101_1011, pn 1, pnc false
1 step run.

Dom 1 s0001_0100_0101_1011 -7-> s0001_0110_0101_1011 [00/00/00/11_00/11/01/00_00/11/00/11_11/00/11/11]

  Square s0001_0100_0101_1011 adding result 3 s0001_0110_0101_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 36, priority(count): 52(2) 401(1) 402(1) 405(1) 500(7) 501(4) 506(1) 600(2) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 202 All domain states: SC[s1_0010, s0001_0110_0101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_X101_1011, r0001_0XXX_1XX1_1011, r0001_0XXX_XX11_1011], defining regions: [r0001_0XXX_XX11_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0110_0101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 52 Get sample in r0001_0100_0001_1011 to find closer incompatible pair within r0001_0100_xX01_1011) PCS[PC[P[1:7,2,4]]]/2/4/+0
 1 N(Dom 1 Act 7 Pri 52 Get sample in r0001_0100_1101_1011 to find closer incompatible pair within r0001_0100_xX01_1011) PCS[PC[P[1:5,3,4]]]/2/4/+0

Need chosen:  1 N(Dom 1 Act 7 Pri 52 Get sample in r0001_0100_1101_1011 to find closer incompatible pair within r0001_0100_xX01_1011) PCS[PC[P[1:5,3,4]]]

Dom 1 s0001_0110_0101_1011 -5-> s0001_0100_0101_1011 [00/00/00/11_00/11/10/00_00/11/00/11_11/00/11/11]

Dom 1 s0001_0100_0101_1011 -3-> s0001_0101_1101_1011 [00/00/00/11_00/11/00/01_01/11/00/11_11/00/11/11]

Dom 1 s0001_0101_1101_1011 -4-> s0001_0100_1101_1011 [00/00/00/11_00/11/00/10_11/11/00/11_11/00/11/11]
3 steps run.

Dom 1 s0001_0100_1101_1011 -7-> s0001_0110_1101_1011 [00/00/00/11_00/11/01/00_11/11/00/11_11/00/11/11]

Dom 1 Adding square s0001_0100_1101_1011 -7-> s0001_0110_1101_1011
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 35, priority(count): 52(1) 401(1) 402(1) 405(1) 500(7) 501(4) 506(1) 600(2) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 203 All domain states: SC[s1_0010, s0001_0110_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 11, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_X101_1011, r0001_0XXX_1XX1_1011, r0001_0XXX_XX11_1011], defining regions: [r0001_0XXX_XX11_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0110_1101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 52 Get additional sample of state s0001_0100_1101_1011 to find closer incompatible pair within r0001_0100_xX01_1011) PCS[PC[P[1:6]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 52 Get additional sample of state s0001_0100_1101_1011 to find closer incompatible pair within r0001_0100_xX01_1011) PCS[PC[P[1:6]]]

Dom 1 s0001_0110_1101_1011 -6-> s0001_0100_1101_1011 [00/00/00/11_00/11/10/00_11/11/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0100_1101_1011 -7-> s0001_0110_1101_1011 [00/00/00/11_00/11/01/00_11/11/00/11_11/00/11/11]

  Square s0001_0100_1101_1011 adding result 2 s0001_0110_1101_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 35, priority(count): 52(1) 401(1) 402(1) 405(1) 500(7) 501(4) 506(1) 600(2) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 204 All domain states: SC[s1_0010, s0001_0110_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 11, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_X101_1011, r0001_0XXX_1XX1_1011, r0001_0XXX_XX11_1011], defining regions: [r0001_0XXX_XX11_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0110_1101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 52 Get additional sample of state s0001_0100_1101_1011 to find closer incompatible pair within r0001_0100_xX01_1011) PCS[PC[P[1:6]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 52 Get additional sample of state s0001_0100_1101_1011 to find closer incompatible pair within r0001_0100_xX01_1011) PCS[PC[P[1:6]]]

Dom 1 s0001_0110_1101_1011 -6-> s0001_0100_1101_1011 [00/00/00/11_00/11/10/00_11/11/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0100_1101_1011 -7-> s0001_0110_1101_1011 [00/00/00/11_00/11/01/00_11/11/00/11_11/00/11/11]

  Square s0001_0100_1101_1011 adding result 3 s0001_0110_1101_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 33, priority(count): 401(1) 402(1) 405(1) 500(7) 501(4) 506(1) 600(1) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 205 All domain states: SC[s1_0010, s0001_0110_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 11, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0110_1101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 401 Get additional sample of state s0001_0011_1111_1011 to confirm group r0001_0xXX_X111_1011) PCS[PC[P[1:2,7,1,2]]]/3/7/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 401 Get additional sample of state s0001_0011_1111_1011 to confirm group r0001_0xXX_X111_1011) PCS[PC[P[1:2,7,1,2]]]

Dom 1 s0001_0110_1101_1011 -2-> s0001_0111_1001_1011 [00/00/00/11_00/11/11/01_11/10/00/11_11/00/11/11]

Dom 1 s0001_0111_1001_1011 -7-> s0001_0011_1001_1011 [00/00/00/11_00/10/11/11_11/00/00/11_11/00/11/11]

Dom 1 s0001_0011_1001_1011 -1-> s0001_0010_1011_1011 [00/00/00/11_00/00/11/10_11/00/01/11_11/00/11/11]

Dom 1 s0001_0010_1011_1011 -2-> s0001_0011_1111_1011 [00/00/00/11_00/00/11/01_11/01/11/11_11/00/11/11]
4 steps run.

Dom 1 s0001_0011_1111_1011 -7-> s0001_0010_1111_1011 [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]

  Square s0001_0011_1111_1011 adding result 2 s0001_0010_1111_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 33, priority(count): 401(1) 402(1) 405(1) 500(7) 501(4) 506(1) 600(1) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 401
Step: 206 All domain states: SC[s1_0010, s0001_0010_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 11, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0010_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 401 Get additional sample of state s0001_0011_1111_1011 to confirm group r0001_0xXX_X111_1011) PCS[PC[P[1:4]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 401 Get additional sample of state s0001_0011_1111_1011 to confirm group r0001_0xXX_X111_1011) PCS[PC[P[1:4]]]

Dom 1 s0001_0010_1111_1011 -4-> s0001_0011_1111_1011 [00/00/00/11_00/00/11/01_11/11/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0011_1111_1011 -7-> s0001_0010_1111_1011 [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]

  Square s0001_0011_1111_1011 adding result 3 s0001_0010_1111_1011, pn 1, pnc changed from false to true
Dom 1 Act 7 Group r0001_0xXX_X111_1011 confirmed
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 33, priority(count): 402(1) 405(1) 500(7) 501(4) 506(1) 600(1) 601(1) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 402
Step: 207 All domain states: SC[s1_0010, s0001_0010_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 11, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11], limiting using s0001_0100_0111_1011) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0010_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0010_1101_1011 to confirm group r0001_0Xx0_x101_1011) PCS[PC[P[1:1,4]]]/1/3/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0010_1101_1011 to confirm group r0001_0Xx0_x101_1011) PCS[PC[P[1:1,4]]]

Dom 1 s0001_0010_1111_1011 -1-> s0001_0011_1101_1011 [00/00/00/11_00/00/11/01_11/11/10/11_11/00/11/11]

Dom 1 s0001_0011_1101_1011 -4-> s0001_0010_1101_1011 [00/00/00/11_00/00/11/10_11/11/00/11_11/00/11/11]
2 steps run.

Dom 1 s0001_0010_1101_1011 -7-> s0001_0000_1101_1011 [00/00/00/11_00/00/10/00_11/11/00/11_11/00/11/11]

  Square s0001_0010_1101_1011 adding result 2 s0001_0000_1101_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 33, priority(count): 402(1) 405(1) 500(7) 501(4) 506(1) 600(1) 601(1) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 402
Step: 208 All domain states: SC[s1_0010, s0001_0000_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 11, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11], limiting using s0001_0100_0111_1011) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0000_1101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0010_1101_1011 to confirm group r0001_0Xx0_x101_1011) PCS[PC[P[1:5]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0010_1101_1011 to confirm group r0001_0Xx0_x101_1011) PCS[PC[P[1:5]]]

Dom 1 s0001_0000_1101_1011 -5-> s0001_0010_1101_1011 [00/00/00/11_00/00/01/00_11/11/00/11_11/00/11/11]

  Square s0001_0000_1101_1011 adding result 2 s0001_0010_1101_1011, pn 1, pnc false
1 step run.

Dom 1 s0001_0010_1101_1011 -7-> s0001_0000_1101_1011 [00/00/00/11_00/00/10/00_11/11/00/11_11/00/11/11]

  Square s0001_0010_1101_1011 adding result 3 s0001_0000_1101_1011, pn 1, pnc changed from false to true
Dom 1 Act 7 Group r0001_0Xx0_x101_1011 confirmed
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 34, priority(count): 405(1) 500(7) 501(4) 506(1) 600(1) 601(1) 602(2) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 405
Step: 209 All domain states: SC[s1_0010, s0001_0000_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 11, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11], limiting using s0001_0100_0111_1011) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0000_1101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 405 Get additional sample of state s1_0001 to confirm group r1_0001) PCS[PC[P[0:1,3]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 405 Get additional sample of state s1_0001 to confirm group r1_0001) PCS[PC[P[0:1,3]]]

All domain states: SC[s1_0010, s0001_0000_1101_1011]

Dom 0 s1_0010 -1-> s1_0011 [11_00/00/11/01]

Dom 0 s1_0011 -3-> s1_0001 [11_00/00/10/11]
2 steps run.

Dom 0 s1_0001 -1-> s1_0101 [11_00/01/00/11]

  Square s1_0001 adding result 2 s1_0101, pn changed from 1 to 2, pnc false

Dom 0 Act 1 square s1_0001 pn: 2 invalidates
             group r1_0001 pn: 1
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]

Number needs: 34, priority(count): 251(1) 500(7) 501(4) 505(1) 600(1) 601(1) 602(2) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 251
Step: 210 All domain states: SC[s1_0101, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 13, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, rX_0X0X, rX_X1XX, r1_XXXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_0000,  pn: 1, pnc: t, [11_00/01/00/00],                 limiting using s1_0000)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_11XX, rX_00XX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 251 Sample State s1_0001 not in a group) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 251 Sample State s1_0001 not in a group) PCS[PC[P[0:3]]]

Dom 0 s1_0101 -3-> s1_0001 [11_00/10/00/11]

  Square s1_0101 adding result 4 s1_0001, pn 1, pnc true
1 step run.

Dom 0 s1_0001 -1-> s1_0000 [11_00/00/00/10]

  Square s1_0001 adding result 3 s1_0000, pn changed from 2 to U, pnc changed from false to true

Dom 0 Act 1 Adding Group G(rx_0001, pn: U, pnc: f, [Unpredictable]) from [s0_0001, s1_0001]
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
Dom 0 Act 1 Group rx_0001 confirmed

Number needs: 35, priority(count): 52(2) 500(7) 501(4) 504(1) 600(1) 601(1) 602(2) 603(3) 605(3) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 211 All domain states: SC[s1_0000, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 13, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r1_0XX1, rX_0X0X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_0000,  pn: 1, pnc: t, [11_00/01/00/00],                 limiting using s1_0000)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_11XX, rX_00XX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s1_0000 to find closer incompatible pair within r1_00xX) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s1_0000 to find closer incompatible pair within r1_00xX) At Target

Dom 0 s1_0000 -1-> s1_0001 [11_00/00/00/01]

  Square s1_0000 adding result 2 s1_0001, pn changed from 1 to 2, pnc false

Dom 0 Act 1 square s1_0000 pn: 2 invalidates
             group r1_0000 pn: 1
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 35, priority(count): 52(2) 251(1) 500(7) 501(4) 600(1) 601(1) 602(2) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 212 All domain states: SC[s1_0001, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 13, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r1_0XX1, rX_0X0X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_11XX, rX_00XX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s1_0011 to find closer incompatible pair within r1_00xX) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s1_0011 to find closer incompatible pair within r1_00xX) PCS[PC[P[0:2]]]

Dom 0 s1_0001 -2-> s1_0011 [11_00/00/01/11]
1 step run.

Dom 0 s1_0011 -1-> s1_0010 [11_00/00/11/10]

  Square s1_0011 adding result 2 s1_0010, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 35, priority(count): 52(2) 251(1) 500(7) 501(4) 600(1) 601(1) 602(2) 603(3) 604(3) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 213 All domain states: SC[s1_0010, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 13, calculated structure regions: [rX_XXX0, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r1_0XX1, rX_0X0X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_0001,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_11XX, rX_00XX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s1_0011 to find closer incompatible pair within r1_00xX) PCS[PC[P[0:1]]]/1/1/+0
 1 N(Dom 0 Act 1 Pri 52 Get additional sample of state s1_0000 to find closer incompatible pair within r1_00xX) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  1 N(Dom 0 Act 1 Pri 52 Get additional sample of state s1_0000 to find closer incompatible pair within r1_00xX) PCS[PC[P[0:3]]]

Dom 0 s1_0010 -3-> s1_0000 [11_00/00/10/00]
1 step run.

Dom 0 s1_0000 -1-> s1_0010 [11_00/00/01/00]

  Square s1_0000 adding result 3 s1_0010, pn changed from 2 to U, pnc changed from false to true

Dom 0 Act 1 Adding Group G(rx_000X, pn: U, pnc: f, [Unpredictable]) from [s0_0001, s1_0000]
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s1_0000 - [s1_1000, s1_0010])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s1_0000 - [s1_1000, s1_0010]), (s0_1001 - [s0_0001, s0_1011])]
Dom 0 Act 1 Group rx_000X confirmed

Number needs: 31, priority(count): 500(7) 501(4) 600(1) 601(1) 602(2) 603(3) 604(2) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 214 All domain states: SC[s1_0010, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 13, calculated structure regions: [rX_1XX0, rX_XX10, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r0_XXX0, r1_0XX1, rX_0X0X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rx_x1XX,  pn: 1, pnc: t, [XX_XX/11/XX/Xx],                 limiting using s0_0101)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_11XX, rX_00XX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 500 Sample anchor State s1_1111, to limit group rX_Xx1x) PCS[PC[P[0:2,4,1]]]/3/3/+0
 1 N(Dom 0 Act 5 Pri 500 Sample State s0_1000, far from anchor s1_1111 to define group rx_1xxX) PCS[PC[P[0:3,5,4]]]/3/3/+0
 2 N(Dom 0 Act 6 Pri 500 Sample anchor State s1_1111, to limit group rX_XXXX) PCS[PC[P[0:2,1,4]]]/3/3/+0
 3 N(Dom 1 Act 3 Pri 500 Sample anchor State s0001_0011_0101_1011, to limit group r0001_0xXX_Xxx1_1011) PCS[PC[P[1:3,5]]]/3/3/+0
 4 N(Dom 1 Act 4 Pri 500 Sample anchor State s0001_0101_1001_1011, to limit group r0001_0xXx_xxx1_1011) PCS[PC[P[1:2,7]]]/3/3/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 500 Sample anchor State s1_1111, to limit group rX_Xx1x) PCS[PC[P[0:2,4,1]]]

Dom 0 s1_0010 -2-> s1_0110 [11_00/01/11/00]

Dom 0 s1_0110 -4-> s1_1110 [11_01/11/11/00]

Dom 0 s1_1110 -1-> s1_1100 [11_11/11/10/00]

Dom 0 Adding square s1_1110 -1-> s1_1100

Dom 0 Act 1 square s1_1110 [11_11/11/10/00] invalidates
             group rx_x1XX [XX_XX/11/XX/Xx]

Dom 0 Act 1 Adding Group G(r1_1110, pn: 1, pnc: f, [11_11/11/10/00])

Dom 0 Act 1 Adding Group G(r0_01X1, pn: 1, pnc: f, [00_00/11/XX/10]) from [s0_0111, s0_0101]

Dom 0 Act 1 Adding Group G(rX_X10x, pn: 1, pnc: f, [XX_XX/11/00/Xx]) from [s1_1100, s0_0101]
Dom 0 Act 1 Group r1_1110 confirmed

Change [s1_1110 -01> s1_1100] unexpected, expected STP[r1_1110 -01> r1_1111 Alt: None]
Run plan failed, domain::run_plan: Unexpected result, step failed.
Try again with PCS[PC[[P[0, r1_1100-1->r1_1101-2->r1_1111]]]]

Dom 0 s1_1100 -1-> s1_1101 [11_11/11/00/01]

  Square s1_1100 adding result 4 s1_1101, pn 1, pnc true

Dom 0 s1_1101 -2-> s1_1111 [11_11/11/01/11]

  Square s1_1101 adding result 2 s1_1111, pn 1, pnc false
2 steps run.

Dom 0 s1_1111 -3-> s1_1101 [11_11/11/10/11]

  Square s1_1111 adding result 2 s1_1101, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s1_0000 - [s1_1000, s1_0010])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s1_0000 - [s1_1000, s1_0010]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 33, priority(count): 405(1) 406(1) 500(7) 501(3) 504(1) 600(1) 601(1) 602(5) 603(2) 900(2) 902(5) 903(2) 904(2) 
Priority 405
Step: 215 All domain states: SC[s1_1101, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 14, calculated structure regions: [rX_1XX0, rX_XX10, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r0_XXX0, r1_0XX1, rX_0X0X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_01X1,  pn: 1, pnc: f, [00_00/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: f, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_11XX, rX_00XX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 405 Get additional sample of state s0_0101 to confirm group r0_01X1) PCS[PC[P[0:5,5]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 405 Get additional sample of state s0_0101 to confirm group r0_01X1) PCS[PC[P[0:5,5]]]

Dom 0 s1_1101 -5-> s1_0101 [11_10/11/00/11]

Dom 0 s1_0101 -5-> s0_0101 [10_00/11/00/11]
2 steps run.

Dom 0 s0_0101 -1-> s0_0100 [00_00/11/00/10]

  Square s0_0101 adding result 2 s0_0100, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s0_0001 - [s0_1001, s0_0011])
defining vert: rX_0X0X (s1_0000 - [s1_1000, s1_0010])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s1_0000 - [s1_1000, s1_0010]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 33, priority(count): 405(1) 406(1) 500(7) 501(3) 504(1) 600(1) 601(1) 602(5) 603(2) 900(2) 902(5) 903(2) 904(2) 
Priority 405
Step: 216 All domain states: SC[s0_0100, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 14, calculated structure regions: [rX_1XX0, rX_XX10, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r0_XXX0, r1_0XX1, rX_0X0X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_0X0X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_01X1,  pn: 1, pnc: f, [00_00/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: f, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_11XX, rX_00XX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 405 Get additional sample of state s0_0101 to confirm group r0_01X1) PCS[PC[P[0:1]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 405 Get additional sample of state s0_0101 to confirm group r0_01X1) PCS[PC[P[0:1]]]

Dom 0 s0_0100 -1-> s0_0101 [00_00/11/00/01]
1 step run.

Dom 0 s0_0101 -1-> s0_0100 [00_00/11/00/10]

  Square s0_0101 adding result 3 s0_0100, pn 1, pnc changed from false to true
Dom 0 Act 1 Group r0_01X1 confirmed
Dom 0 Act 1 Group rX_X10x confirmed
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 31, priority(count): 500(7) 501(3) 504(1) 600(1) 601(1) 602(5) 603(2) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 217 All domain states: SC[s0_0100, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 14, calculated structure regions: [rX_1XX0, rX_XX10, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r0_XXX0, rX_0X00, r1_0XX1, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_01X1,  pn: 1, pnc: t, [00_00/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_11XX, rX_00XX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 500 Sample anchor State s0_1100, to limit group rX_1xxX) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 4 Pri 500 Sample anchor State s0_1100, to limit group rX_1xxX) PCS[PC[P[0:4]]]

Dom 0 s0_0100 -4-> s0_1100 [00_01/11/00/00]
1 step run.

Dom 0 s0_1100 -4-> s1_1100 [01_11/11/00/00]

  Square s0_1100 adding result 3 s1_1100, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 31, priority(count): 500(6) 501(3) 504(1) 600(2) 601(1) 602(5) 603(2) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 218 All domain states: SC[s1_1100, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 14, calculated structure regions: [rX_1XX0, rX_XX10, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r0_XXX0, rX_0X00, r1_0XX1, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_01X1,  pn: 1, pnc: t, [00_00/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_XXX1, rX_XX0X, rX_11XX, rX_00XX, r0_XXXX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 500 Sample State s1_0110, far from anchor s0_0011 to define group rX_0x1x) PCS[PC[P[0:2,5]]]/2/2/+0
 1 N(Dom 0 Act 3 Pri 500 Sample anchor State s1_1111, to limit group rX_Xx1x) PCS[PC[P[0:1,2]]]/2/2/+0
 2 N(Dom 0 Act 5 Pri 500 Sample State s0_1000, far from anchor s1_1111 to define group rx_1xxX) PCS[PC[P[0:4,3]]]/2/2/+0
 3 N(Dom 0 Act 6 Pri 500 Sample anchor State s1_1111, to limit group rX_XXXX) PCS[PC[P[0:1,2]]]/2/2/+0

Need chosen:  1 N(Dom 0 Act 3 Pri 500 Sample anchor State s1_1111, to limit group rX_Xx1x) PCS[PC[P[0:1,2]]]

Dom 0 s1_1100 -1-> s1_1101 [11_11/11/00/01]

Dom 0 s1_1101 -2-> s1_1111 [11_11/11/01/11]

  Square s1_1101 adding result 3 s1_1111, pn 1, pnc changed from false to true
2 steps run.

Dom 0 s1_1111 -3-> s1_1101 [11_11/11/10/11]

  Square s1_1111 adding result 3 s1_1101, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 37, priority(count): 53(6) 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(2) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 219 All domain states: SC[s1_1101, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 14, calculated structure regions: [rX_1XX0, rX_XX10, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r0_XXX0, rX_0X00, r1_0XX1, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_01X1,  pn: 1, pnc: t, [00_00/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 8, calculated structure regions: [rX_00XX, rX_X0X1, rX_1XX1, r1_XXX1, r0_XXXX, rX_0XX1, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 53 Get sample in rX_0101 to find closer incompatible pair within rx_x1X1) PCS[PC[P[0:5]]]/1/1/+0
 1 N(Dom 0 Act 2 Pri 53 Get sample in r0_X101 to find closer incompatible pair within rx_x1X1) PCS[PC[P[0:4]]]/1/1/+0
 2 N(Dom 0 Act 2 Pri 53 Get sample in rX_1111 to find closer incompatible pair within rx_x1X1) PCS[PC[P[0:2]]]/1/1/+0
 3 N(Dom 0 Act 2 Pri 53 Get sample in r0_11X1 to find closer incompatible pair within rx_x1X1) PCS[PC[P[0:4]]]/1/1/+0
 4 N(Dom 0 Act 2 Pri 53 Get sample in r1_X111 to find closer incompatible pair within rx_x1X1) PCS[PC[P[0:2]]]/1/1/+0
 5 N(Dom 0 Act 2 Pri 53 Get sample in r1_01X1 to find closer incompatible pair within rx_x1X1) PCS[PC[P[0:5]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 53 Get sample in rX_0101 to find closer incompatible pair within rx_x1X1) PCS[PC[P[0:5]]]

Dom 0 s1_1101 -5-> s1_0101 [11_10/11/00/11]
1 step run.

Dom 0 s1_0101 -2-> s1_0111 [11_00/11/01/11]

Dom 0 Adding square s1_0101 -2-> s1_0111
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 32, priority(count): 53(1) 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(2) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 220 All domain states: SC[s1_0111, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 14, calculated structure regions: [rX_1XX0, rX_XX10, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r0_XXX0, rX_0X00, r1_0XX1, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_01X1,  pn: 1, pnc: t, [00_00/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 9, calculated structure regions: [rX_00XX, rX_X0X1, rX_1XX1, r1_XXX1, r0_XXXX, rX_0XX1, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 53 Get additional sample of state s1_0101 to find closer incompatible pair within rx_x1X1) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 53 Get additional sample of state s1_0101 to find closer incompatible pair within rx_x1X1) PCS[PC[P[0:3]]]

Dom 0 s1_0111 -3-> s1_0101 [11_00/11/10/11]
1 step run.

Dom 0 s1_0101 -2-> s1_0111 [11_00/11/01/11]

  Square s1_0101 adding result 2 s1_0111, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 32, priority(count): 53(1) 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(2) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 221 All domain states: SC[s1_0111, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 14, calculated structure regions: [rX_1XX0, rX_XX10, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r0_XXX0, rX_0X00, r1_0XX1, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_01X1,  pn: 1, pnc: t, [00_00/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 9, calculated structure regions: [rX_00XX, rX_X0X1, rX_1XX1, r1_XXX1, r0_XXXX, rX_0XX1, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 53 Get additional sample of state s1_0101 to find closer incompatible pair within rx_x1X1) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 53 Get additional sample of state s1_0101 to find closer incompatible pair within rx_x1X1) PCS[PC[P[0:3]]]

Dom 0 s1_0111 -3-> s1_0101 [11_00/11/10/11]
1 step run.

Dom 0 s1_0101 -2-> s1_0111 [11_00/11/01/11]

  Square s1_0101 adding result 3 s1_0111, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 33, priority(count): 52(2) 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(2) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 222 All domain states: SC[s1_0111, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 14, calculated structure regions: [rX_1XX0, rX_XX10, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r0_XXX0, rX_0X00, r1_0XX1, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_01X1,  pn: 1, pnc: t, [00_00/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 9, calculated structure regions: [rX_00XX, rX_X0X1, rX_1XX1, r1_XXX1, r0_XXXX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 3 in1: 3))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 52 Get sample in r1_0111 to find closer incompatible pair within rx_01X1) At Target

Need chosen:  0 N(Dom 0 Act 2 Pri 52 Get sample in r1_0111 to find closer incompatible pair within rx_01X1) At Target

Dom 0 s1_0111 -2-> s1_0011 [11_00/10/11/11]

Dom 0 Adding square s1_0111 -2-> s1_0011
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 32, priority(count): 52(1) 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(2) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 223 All domain states: SC[s1_0011, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 14, calculated structure regions: [rX_1XX0, rX_XX10, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r0_XXX0, rX_0X00, r1_0XX1, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_01X1,  pn: 1, pnc: t, [00_00/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 10, calculated structure regions: [rX_00XX, rX_X0X1, rX_1XX1, r1_XXX1, r0_XXXX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 52 Get additional sample of state s1_0111 to find closer incompatible pair within rx_01X1) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 52 Get additional sample of state s1_0111 to find closer incompatible pair within rx_01X1) PCS[PC[P[0:2]]]

Dom 0 s1_0011 -2-> s1_0111 [11_00/01/11/11]
1 step run.

Dom 0 s1_0111 -2-> s1_0011 [11_00/10/11/11]

  Square s1_0111 adding result 2 s1_0011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 32, priority(count): 52(1) 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(2) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 224 All domain states: SC[s1_0011, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 14, calculated structure regions: [rX_1XX0, rX_XX10, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r0_XXX0, rX_0X00, r1_0XX1, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_01X1,  pn: 1, pnc: t, [00_00/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 10, calculated structure regions: [rX_00XX, rX_X0X1, rX_1XX1, r1_XXX1, r0_XXXX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 52 Get additional sample of state s1_0111 to find closer incompatible pair within rx_01X1) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 52 Get additional sample of state s1_0111 to find closer incompatible pair within rx_01X1) PCS[PC[P[0:2]]]

Dom 0 s1_0011 -2-> s1_0111 [11_00/01/11/11]
1 step run.

Dom 0 s1_0111 -2-> s1_0011 [11_00/10/11/11]

  Square s1_0111 adding result 3 s1_0011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
defining vert: rX_XX0X (s1_0101 - [s1_0111])
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_0100 - [s1_0110])
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 31, priority(count): 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(2) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 225 All domain states: SC[s1_0011, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 14, calculated structure regions: [rX_1XX0, rX_XX10, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r0_XXX0, rX_0X00, r1_0XX1, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_01X1,  pn: 1, pnc: t, [00_00/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 500 Sample State s1_0110, far from anchor s0_0011 to define group rX_0x1x) PCS[PC[P[0:1,2]]]/2/2/+0
 1 N(Dom 0 Act 6 Pri 500 Sample anchor State s1_1111, to limit group rX_XXXX) PCS[PC[P[0:4,2]]]/2/2/+0

Need chosen:  1 N(Dom 0 Act 6 Pri 500 Sample anchor State s1_1111, to limit group rX_XXXX) PCS[PC[P[0:4,2]]]

Dom 0 s1_0011 -4-> s1_1011 [11_01/00/11/11]

  Square s1_0011 adding result 4 s1_1011, pn 1, pnc true

Dom 0 s1_1011 -2-> s1_1111 [11_11/01/11/11]
2 steps run.

Dom 0 s1_1111 -6-> s1_1111 [11_11/11/11/11]

  Square s1_1111 adding result 2 s1_1111, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 32, priority(count): 250(1) 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(2) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 226 All domain states: SC[s1_1111, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 14, calculated structure regions: [rX_1XX0, rX_XX10, rX_0X1X, rX_1X1X, r1_XX1X, rX_X1XX, r0_XXX0, rX_0X00, r1_0XX1, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r0_01X1,  pn: 1, pnc: t, [00_00/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1111 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 250 Sample State s1_1111 not in a group) At Target

Dom 0 s1_1111 -1-> s1_1110 [11_11/11/11/10]

Dom 0 Adding square s1_1111 -1-> s1_1110

Dom 0 Act 1 Adding Group G(r1_xx11, pn: 1, pnc: f, [11_XX/XX/11/10]) from [s1_0011, s1_1111]

Dom 0 Act 1 Adding Group G(rx_x1x1, pn: 1, pnc: f, [XX_XX/11/XX/10]) from [s0_0101, s1_1111]

Dom 0 Act 1 Adding Group G(r1_1xx1, pn: 1, pnc: f, [11_11/XX/XX/10]) from [s1_1001, s1_1111]
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_1001 - [s0_0001, s0_1011])]
anchor s1_0001 in group rx_000X removed, rate 0 below 3

Number needs: 34, priority(count): 405(2) 407(1) 408(1) 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 405
Step: 227 All domain states: SC[s1_1110, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 15, calculated structure regions: [r0_XXX0, rX_XX10, rX_0X00, rX_0X1X, r1_XX1X, rX_1X1X, rX_1XX0, rX_X1XX, r1_0XX1, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_1X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_xx11,  pn: 1, pnc: f, [11_XX/XX/11/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rx_x1x1,  pn: 1, pnc: f, [XX_XX/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(r1_1xx1,  pn: 1, pnc: f, [11_11/XX/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 405 Get additional sample of state s1_0011 to confirm group r1_xx11) PCS[PC[P[0:5,2,1]]]/3/3/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 405 Get additional sample of state s1_0011 to confirm group r1_xx11) PCS[PC[P[0:5,2,1]]]

Dom 0 s1_1110 -5-> s1_0110 [11_10/11/11/00]

  Square s1_1110 adding result 4 s1_0110, pn 1, pnc true

Dom 0 s1_0110 -2-> s1_0010 [11_00/10/11/00]

  Square s1_0110 adding result 4 s1_0010, pn 1, pnc true

Dom 0 s1_0010 -1-> s1_0011 [11_00/00/11/01]
3 steps run.

Dom 0 s1_0011 -1-> s1_0010 [11_00/00/11/10]

  Square s1_0011 adding result 3 s1_0010, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0101 - [s0_0001]), (s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 33, priority(count): 405(1) 407(1) 408(1) 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 405
Step: 228 All domain states: SC[s1_0010, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 15, calculated structure regions: [rX_X1XX, rX_XX10, rX_0X1X, r1_XX1X, rX_1X1X, rX_1XX0, r0_XXX0, rX_0X00, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_X1XX, rX_0X1X, rX_1X1X, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_xx11,  pn: 1, pnc: f, [11_XX/XX/11/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rx_x1x1,  pn: 1, pnc: f, [XX_XX/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(r1_1xx1,  pn: 1, pnc: f, [11_11/XX/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 405 Get additional sample of state s1_1111 to confirm group r1_xx11) PCS[PC[P[0:1,4,2]]]/3/3/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 405 Get additional sample of state s1_1111 to confirm group r1_xx11) PCS[PC[P[0:1,4,2]]]

Dom 0 s1_0010 -1-> s1_0011 [11_00/00/11/01]

Dom 0 s1_0011 -4-> s1_1011 [11_01/00/11/11]

Dom 0 s1_1011 -2-> s1_1111 [11_11/01/11/11]
3 steps run.

Dom 0 s1_1111 -1-> s1_1110 [11_11/11/11/10]

  Square s1_1111 adding result 2 s1_1110, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0101 - [s0_0001]), (s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 33, priority(count): 405(1) 407(1) 408(1) 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 405, none.
Priority 407, none.
Priority 408, none.
Priority 500
Step: 229 All domain states: SC[s1_1110, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 15, calculated structure regions: [rX_X1XX, rX_XX10, rX_0X1X, r1_XX1X, rX_1X1X, rX_1XX0, r0_XXX0, rX_0X00, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_X1XX, rX_0X1X, rX_1X1X, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_xx11,  pn: 1, pnc: f, [11_XX/XX/11/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rx_x1x1,  pn: 1, pnc: f, [XX_XX/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(r1_1xx1,  pn: 1, pnc: f, [11_11/XX/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 500 Sample State s1_0110, far from anchor s0_0011 to define group rX_0x1x) PCS[PC[P[0:5]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 500 Sample State s1_0110, far from anchor s0_0011 to define group rX_0x1x) PCS[PC[P[0:5]]]

Dom 0 s1_1110 -5-> s1_0110 [11_10/11/11/00]
1 step run.

Dom 0 s1_0110 -1-> s1_0111 [11_00/11/11/01]

Dom 0 Adding square s1_0110 -1-> s1_0111
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X1X (s0_1011 - [s0_1001, s0_0011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0101 - [s0_0001]), (s0_0011 - [s0_0001, s0_1011]), (s0_1011 - [s0_1001, s0_0011]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 33, priority(count): 405(1) 407(1) 408(1) 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 405
Step: 230 All domain states: SC[s1_0111, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 16, calculated structure regions: [rX_X1XX, rX_XX10, rX_0X1X, r1_XX1X, rX_1X1X, rX_1XX0, r0_XXX0, rX_0X00, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_X1XX, rX_0X1X, rX_1X1X, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_xx11,  pn: 1, pnc: f, [11_XX/XX/11/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rx_x1x1,  pn: 1, pnc: f, [XX_XX/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(r1_1xx1,  pn: 1, pnc: f, [11_11/XX/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 405 Get additional sample of state s1_1111 to confirm group r1_xx11) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 405 Get additional sample of state s1_1111 to confirm group r1_xx11) PCS[PC[P[0:4]]]

Dom 0 s1_0111 -4-> s1_1111 [11_01/11/11/11]
1 step run.

Dom 0 s1_1111 -1-> s1_1110 [11_11/11/11/10]

  Square s1_1111 adding result 3 s1_1110, pn 1, pnc changed from false to true
Dom 0 Act 1 Group r1_xx11 confirmed
Dom 0 Act 1 Group rx_x1x1 confirmed
Dom 0 Act 1 Group r1_1xx1 confirmed
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 32, priority(count): 52(2) 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 231 All domain states: SC[s1_1110, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 16, calculated structure regions: [r0_XXX0, rX_XX10, rX_0X00, rX_0X1X, r1_XX1X, rX_1XX0, rX_101X, r0_1X1X, rX_X1XX, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_xx11,  pn: 1, pnc: t, [11_XX/XX/11/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(r1_1xx1,  pn: 1, pnc: t, [11_11/XX/XX/10])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get sample in r0_1111 to find closer incompatible pair within rx_1x11) PCS[PC[P[0:4,5,1,4]]]/2/4/+0
 1 N(Dom 0 Act 1 Pri 52 Get sample in r1_1011 to find closer incompatible pair within rx_1x11) PCS[PC[P[0:5,2,1,4]]]/2/4/+0

Need chosen:  1 N(Dom 0 Act 1 Pri 52 Get sample in r1_1011 to find closer incompatible pair within rx_1x11) PCS[PC[P[0:5,2,1,4]]]

Dom 0 s1_1110 -5-> s1_0110 [11_10/11/11/00]

Dom 0 s1_0110 -2-> s1_0010 [11_00/10/11/00]

Dom 0 s1_0010 -1-> s1_0011 [11_00/00/11/01]

Dom 0 s1_0011 -4-> s1_1011 [11_01/00/11/11]
4 steps run.

Dom 0 s1_1011 -1-> s1_1111 [11_11/01/11/11]

Dom 0 Adding square s1_1011 -1-> s1_1111

Dom 0 Act 1 square s1_1011 [11_11/01/11/11] invalidates
             group r1_xx11 [11_XX/XX/11/10]

Dom 0 Act 1 square s1_1011 [11_11/01/11/11] invalidates
             group r1_1xx1 [11_11/XX/XX/10]

Dom 0 Act 1 Adding Group G(r1_1011, pn: 1, pnc: f, [11_11/01/11/11])
Dom 0 Act 1 Group r1_1011 confirmed
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 34, priority(count): 52(1) 500(5) 501(3) 504(1) 507(1) 600(3) 601(1) 602(5) 603(1) 606(2) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 232 All domain states: SC[s1_1111, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [r0_XXX0, rX_XX10, rX_0X00, rX_0X1X, r1_XX1X, rX_1XX0, rX_101X, r0_1X1X, rX_X1XX, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r1_1011,  pn: 1, pnc: t, [11_11/01/11/11],                 limiting using s1_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s1_1011 to find closer incompatible pair within rx_1x11) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s1_1011 to find closer incompatible pair within rx_1x11) PCS[PC[P[0:2]]]

Dom 0 s1_1111 -2-> s1_1011 [11_11/10/11/11]
1 step run.

Dom 0 s1_1011 -1-> s1_1001 [11_11/00/10/11]

  Square s1_1011 adding result 2 s1_1001, pn changed from 1 to 2, pnc false

Dom 0 Act 1 square s1_1011 pn: 2 invalidates
             group r1_1011 pn: 1
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 34, priority(count): 52(1) 251(1) 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(1) 606(2) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 233 All domain states: SC[s1_1001, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [r0_XXX0, rX_XX10, rX_0X00, rX_0X1X, r1_XX1X, rX_1XX0, rX_101X, r0_1X1X, rX_X1XX, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s1_1011 to find closer incompatible pair within rx_1x11) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s1_1011 to find closer incompatible pair within rx_1x11) PCS[PC[P[0:2]]]

Dom 0 s1_1001 -2-> s1_1011 [11_11/00/01/11]
1 step run.

Dom 0 s1_1011 -1-> s1_1111 [11_11/01/11/11]

  Square s1_1011 adding result 3 s1_1111, pn 2, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
defining vert: rX_0XXX (s0_0110 - [s0_1110])
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
Options:
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0011 - [s0_0001, s0_1011]), (s0_0101 - [s0_0001]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_1001 - [s0_0001, s0_1011])]

Number needs: 34, priority(count): 52(1) 251(1) 500(5) 501(3) 504(1) 600(3) 601(1) 602(5) 603(1) 606(2) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 234 All domain states: SC[s1_1111, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [r0_XXX0, rX_XX10, rX_0X00, rX_0X1X, r1_XX1X, rX_1XX0, rX_101X, r0_1X1X, rX_X1XX, r1_0X0X, rX_000X, r1_1XXX, rX_1X0X], defining regions: [rX_0X1X, rX_X1XX, rX_000X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1011,  pn: 2, pnc: t, [00_11/00/10/11, 00_11/01/11/11], limiting using s0_1011)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s1_1011 to find closer incompatible pair within rx_1x11) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s1_1011 to find closer incompatible pair within rx_1x11) PCS[PC[P[0:2]]]

Dom 0 s1_1111 -2-> s1_1011 [11_11/10/11/11]
1 step run.

Dom 0 s1_1011 -1-> s1_1001 [11_11/00/10/11]

  Square s1_1011 adding result 4 s1_1001, pn 2, pnc changed from false to true

Dom 0 Act 1 Adding Group G(rX_1011, pn: 2, pnc: f, [XX_11/01/11/11, XX_11/00/10/11]) from [s1_1011, s0_1011]
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
Dom 0 Act 1 Group rX_1011 confirmed

Number needs: 30, priority(count): 500(5) 501(3) 504(1) 600(3) 601(1) 602(3) 603(1) 606(2) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 235 All domain states: SC[s1_1001, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s0_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 8, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 5 Pri 500 Sample State s0_1000, far from anchor s1_1111 to define group rx_1xxX) PCS[PC[P[0:4,1]]]/2/2/+0
 1 N(Dom 0 Act 6 Pri 500 Sample anchor State s1_1111, to limit group rX_XXXX) PCS[PC[P[0:2,2]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 5 Pri 500 Sample State s0_1000, far from anchor s1_1111 to define group rx_1xxX) PCS[PC[P[0:4,1]]]

Dom 0 s1_1001 -4-> s0_1001 [10_11/00/00/11]

  Square s1_1001 adding result 4 s0_1001, pn 1, pnc true

Dom 0 s0_1001 -1-> s0_1000 [00_11/00/00/10]

  Square s0_1001 adding result 4 s0_1000, pn 1, pnc true
2 steps run.

Dom 0 s0_1000 -5-> s0_0000 [00_10/00/00/00]

Dom 0 Adding square s0_1000 -5-> s0_0000
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 29, priority(count): 500(5) 501(3) 504(1) 600(3) 601(1) 602(3) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 236 All domain states: SC[s0_0000, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 5 Pri 500 Sample State s0_1000, far from anchor s1_1111 to define group rx_1xxX) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 5 Pri 500 Sample State s0_1000, far from anchor s1_1111 to define group rx_1xxX) PCS[PC[P[0:4]]]

Dom 0 s0_0000 -4-> s0_1000 [00_01/00/00/00]
1 step run.

Dom 0 s0_1000 -5-> s0_0000 [00_10/00/00/00]

  Square s0_1000 adding result 2 s0_0000, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 29, priority(count): 500(5) 501(3) 504(1) 600(3) 601(1) 602(3) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 237 All domain states: SC[s0_0000, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XXX0, rX_XX0X, rX_X0XX, rX_1XXX, r0_XXXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1xxX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 5 Pri 500 Sample State s0_1000, far from anchor s1_1111 to define group rx_1xxX) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 5 Pri 500 Sample State s0_1000, far from anchor s1_1111 to define group rx_1xxX) PCS[PC[P[0:4]]]

Dom 0 s0_0000 -4-> s0_1000 [00_01/00/00/00]
1 step run.

Dom 0 s0_1000 -5-> s0_0000 [00_10/00/00/00]

  Square s0_1000 adding result 3 s0_0000, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Dom 0 Act 5 Group rx_1xxX set limited on, adj mask m0_1000
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 28, priority(count): 500(4) 501(3) 504(1) 600(3) 601(1) 602(3) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 238 All domain states: SC[s0_0000, s0001_0000_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s0_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 500 Sample State s1_0110, far from anchor s0_0011 to define group rX_0x1x) PCS[PC[P[0:3,5,2]]]/3/3/+0
 1 N(Dom 1 Act 3 Pri 500 Sample anchor State s0001_0011_0101_1011, to limit group r0001_0xXX_Xxx1_1011) PCS[PC[P[0:2]], PC[P[1:3,6]]]/4/4/+0
 2 N(Dom 1 Act 4 Pri 500 Sample anchor State s0001_0101_1001_1011, to limit group r0001_0xXx_xxx1_1011) PCS[PC[P[1:2,7]]]/3/3/+0

Need chosen:  1 N(Dom 1 Act 3 Pri 500 Sample anchor State s0001_0011_0101_1011, to limit group r0001_0xXX_Xxx1_1011) PCS[PC[P[0:2]], PC[P[1:3,6]]]

All domain states: SC[s0_0000, s0001_0000_1101_1011]

Dom 0 s0_0000 -2-> s0_0010 [00_00/00/01/00]
---- 
Dom 1 s0001_0000_1101_1011 -3-> s0001_0001_0101_1011 [00/00/00/11_00/00/00/01_10/11/00/11_11/00/11/11]

Dom 1 s0001_0001_0101_1011 -6-> s0001_0011_0101_1011 [00/00/00/11_00/00/01/11_00/11/00/11_11/00/11/11]
3 steps run.

Dom 1 s0001_0011_0101_1011 -3-> s0001_0010_1101_1011 [00/00/00/11_00/00/11/10_01/11/00/11_11/00/11/11]

  Square s0001_0011_0101_1011 adding result 2 s0001_0010_1101_1011, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 28, priority(count): 500(4) 501(3) 504(1) 600(3) 601(1) 602(3) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 239 All domain states: SC[s0_0010, s0001_0010_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 11, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11], limiting using s0001_0100_0111_1011) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0010_1101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 500 Sample State s1_0110, far from anchor s0_0011 to define group rX_0x1x) PCS[PC[P[0:2,5]]]/2/2/+0
 1 N(Dom 1 Act 3 Pri 500 Sample anchor State s0001_0011_0101_1011, to limit group r0001_0xXX_Xxx1_1011) PCS[PC[P[1:3]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 500 Sample State s1_0110, far from anchor s0_0011 to define group rX_0x1x) PCS[PC[P[0:2,5]]]

All domain states: SC[s0_0010, s0001_0010_1101_1011]

Dom 0 s0_0010 -2-> s0_0110 [00_00/01/11/00]

Dom 0 s0_0110 -5-> s1_0110 [01_00/11/11/00]

  Square s0_0110 adding result 2 s1_0110, pn 1, pnc false
2 steps run.

Dom 0 s1_0110 -1-> s1_0111 [11_00/11/11/01]

  Square s1_0110 adding result 2 s1_0111, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 28, priority(count): 500(4) 501(3) 504(1) 600(3) 601(1) 602(3) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 240 All domain states: SC[s1_0111, s0001_0010_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 500 Sample State s1_0110, far from anchor s0_0011 to define group rX_0x1x) PCS[PC[P[0:1]]]/1/1/+0
 1 N(Dom 0 Act 6 Pri 500 Sample anchor State s1_1111, to limit group rX_XXXX) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  1 N(Dom 0 Act 6 Pri 500 Sample anchor State s1_1111, to limit group rX_XXXX) PCS[PC[P[0:4]]]

Dom 0 s1_0111 -4-> s1_1111 [11_01/11/11/11]
1 step run.

Dom 0 s1_1111 -6-> s1_1111 [11_11/11/11/11]

  Square s1_1111 adding result 3 s1_1111, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 33, priority(count): 500(4) 501(3) 504(1) 600(8) 601(1) 602(3) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 241 All domain states: SC[s1_1111, s0001_0010_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rX_0x1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s0_0011)                 num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 500 Sample State s1_0110, far from anchor s0_0011 to define group rX_0x1x) PCS[PC[P[0:5,1]]]/2/2/+0
 1 N(Dom 1 Act 3 Pri 500 Sample anchor State s0001_0011_0101_1011, to limit group r0001_0xXX_Xxx1_1011) PCS[PC[P[1:3]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 500 Sample State s1_0110, far from anchor s0_0011 to define group rX_0x1x) PCS[PC[P[0:5,1]]]

Dom 0 s1_1111 -5-> s1_0111 [11_10/11/11/11]

  Square s1_1111 adding result 4 s1_0111, pn 1, pnc true

Dom 0 s1_0111 -1-> s1_0110 [11_00/11/11/10]
2 steps run.

Dom 0 s1_0110 -1-> s1_0111 [11_00/11/11/01]

  Square s1_0110 adding result 3 s1_0111, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_0XXX (s0_0000 - [s0_1000])
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
Dom 0 Act 1 Group rX_0x1x set limited on, adj mask m0_1010

Number needs: 32, priority(count): 500(3) 501(3) 504(1) 600(8) 601(1) 602(3) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 242 All domain states: SC[s1_0111, s0001_0010_1101_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 1 Act 3 Pri 500 Sample anchor State s0001_0011_0101_1011, to limit group r0001_0xXX_Xxx1_1011) PCS[PC[P[1:3]]]/2/2/+0

Need chosen:  0 N(Dom 1 Act 3 Pri 500 Sample anchor State s0001_0011_0101_1011, to limit group r0001_0xXX_Xxx1_1011) PCS[PC[P[1:3]]]

All domain states: SC[s1_0111, s0001_0010_1101_1011]

Dom 1 s0001_0010_1101_1011 -3-> s0001_0011_0101_1011 [00/00/00/11_00/00/11/01_10/11/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0011_0101_1011 -3-> s0001_0010_1101_1011 [00/00/00/11_00/00/11/10_01/11/00/11_11/00/11/11]

  Square s0001_0011_0101_1011 adding result 3 s0001_0010_1101_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 32, priority(count): 500(3) 501(3) 504(1) 600(8) 601(1) 602(3) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 243 All domain states: SC[s1_0111, s0001_0010_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 11, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11], limiting using s0001_0100_0111_1011) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0010_1101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 500 Sample State s0_0000, far from anchor s1_1111 to define group rX_XXXX) PCS[PC[P[0:1,2,5,3]]]/4/4/+0
 1 N(Dom 1 Act 3 Pri 500 Sample State s0001_0100_1011_1011, far from anchor s0001_0011_0101_1011 to define group r0001_0xXX_Xxx1_1011) PCS[PC[P[1:2,5,7,1]]]/4/6/+0
 2 N(Dom 1 Act 4 Pri 500 Sample anchor State s0001_0101_1001_1011, to limit group r0001_0xXx_xxx1_1011) PCS[PC[P[1:2,5,7]]]/4/4/+0

Need chosen:  0 N(Dom 0 Act 6 Pri 500 Sample State s0_0000, far from anchor s1_1111 to define group rX_XXXX) PCS[PC[P[0:1,2,5,3]]]

All domain states: SC[s1_0111, s0001_0010_1101_1011]

Dom 0 s1_0111 -1-> s1_0110 [11_00/11/11/10]

Dom 0 s1_0110 -2-> s1_0010 [11_00/10/11/00]

Dom 0 s1_0010 -5-> s0_0010 [10_00/00/11/00]

  Square s1_0010 adding result 2 s0_0010, pn 1, pnc false

Dom 0 s0_0010 -3-> s0_0000 [00_00/00/10/00]
4 steps run.

Dom 0 s0_0000 -6-> s0_0000 [00_00/00/00/00]

Dom 0 Adding square s0_0000 -6-> s0_0000
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 28, priority(count): 500(3) 501(3) 504(1) 600(8) 601(1) 602(3) 603(1) 606(1) 900(2) 902(1) 903(2) 904(2) 
Priority 500
Step: 244 All domain states: SC[s0_0000, s0001_0010_1101_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 500 Sample State s0_0000, far from anchor s1_1111 to define group rX_XXXX) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 500 Sample State s0_0000, far from anchor s1_1111 to define group rX_XXXX) At Target

Dom 0 s0_0000 -6-> s0_0000 [00_00/00/00/00]

  Square s0_0000 adding result 2 s0_0000, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 28, priority(count): 500(3) 501(3) 504(1) 600(8) 601(1) 602(3) 603(1) 606(1) 900(2) 902(1) 903(2) 904(2) 
Priority 500
Step: 245 All domain states: SC[s0_0000, s0001_0010_1101_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 500 Sample State s0_0000, far from anchor s1_1111 to define group rX_XXXX) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 500 Sample State s0_0000, far from anchor s1_1111 to define group rX_XXXX) At Target

Dom 0 s0_0000 -6-> s0_0000 [00_00/00/00/00]

  Square s0_0000 adding result 3 s0_0000, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
defining vert: rX_XX1X (s1_0110 - [s1_0100])
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
Options:
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 27, priority(count): 500(2) 501(3) 504(1) 600(8) 601(1) 602(3) 603(1) 606(1) 900(2) 902(1) 903(2) 904(2) 
Priority 500
Step: 246 All domain states: SC[s0_0000, s0001_0010_1101_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 10, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 1 Act 3 Pri 500 Sample State s0001_0100_1011_1011, far from anchor s0001_0011_0101_1011 to define group r0001_0xXX_Xxx1_1011) PCS[PC[P[1:2,5,7,1]]]/4/6/-4
 1 N(Dom 1 Act 4 Pri 500 Sample anchor State s0001_0101_1001_1011, to limit group r0001_0xXx_xxx1_1011) PCS[PC[P[1:2,5,7]]]/4/4/+0

Need chosen:  1 N(Dom 1 Act 4 Pri 500 Sample anchor State s0001_0101_1001_1011, to limit group r0001_0xXx_xxx1_1011) PCS[PC[P[1:2,5,7]]]

All domain states: SC[s0_0000, s0001_0010_1101_1011]

Dom 1 s0001_0010_1101_1011 -2-> s0001_0011_1001_1011 [00/00/00/11_00/00/11/01_11/10/00/11_11/00/11/11]

  Square s0001_0010_1101_1011 adding result 4 s0001_0011_1001_1011, pn 1, pnc true

Dom 1 s0001_0011_1001_1011 -5-> s0001_0001_1001_1011 [00/00/00/11_00/00/10/11_11/00/00/11_11/00/11/11]

  Square s0001_0011_1001_1011 adding result 2 s0001_0001_1001_1011, pn 1, pnc false

Dom 1 s0001_0001_1001_1011 -7-> s0001_0101_1001_1011 [00/00/00/11_00/01/00/11_11/00/00/11_11/00/11/11]

  Square s0001_0001_1001_1011 adding result 3 s0001_0101_1001_1011, pn 1, pnc changed from false to true
3 steps run.

Dom 1 s0001_0101_1001_1011 -4-> s0001_0100_1001_1011 [00/00/00/11_00/11/00/10_11/00/00/11_11/00/11/11]

  Square s0001_0101_1001_1011 adding result 2 s0001_0100_1001_1011, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 32, priority(count): 53(1) 500(2) 501(3) 504(1) 600(8) 601(1) 602(3) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 247 All domain states: SC[s0_0000, s0001_0100_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 12, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00X0_XXX1_1011, r0001_0XXX_XX11_1011, r0001_00XX_X1X1_1011, r0001_00XX_0XX1_1011, r0001_000X_XXX1_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11], limiting using s0001_0100_0111_1011) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0100_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 53 Get additional sample of state s0001_0011_1001_1011 to find closer incompatible pair within r0001_00xX_1x01_1011) PCS[PC[P[1:6,4,7]]]/3/3/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 53 Get additional sample of state s0001_0011_1001_1011 to find closer incompatible pair within r0001_00xX_1x01_1011) PCS[PC[P[1:6,4,7]]]

Dom 1 s0001_0100_1001_1011 -6-> s0001_0110_1001_1011 [00/00/00/11_00/11/01/00_11/00/00/11_11/00/11/11]

Dom 1 s0001_0110_1001_1011 -4-> s0001_0111_1001_1011 [00/00/00/11_00/11/11/01_11/00/00/11_11/00/11/11]

Dom 1 s0001_0111_1001_1011 -7-> s0001_0011_1001_1011 [00/00/00/11_00/10/11/11_11/00/00/11_11/00/11/11]
3 steps run.

Dom 1 s0001_0011_1001_1011 -7-> s0001_0111_1001_1011 [00/00/00/11_00/01/11/11_11/00/00/11_11/00/11/11]

  Square s0001_0011_1001_1011 adding result 2 s0001_0111_1001_1011, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 31, priority(count): 53(1) 500(2) 501(3) 504(1) 600(8) 601(1) 602(3) 603(1) 606(1) 900(2) 902(4) 903(2) 904(2) 
Priority 53
Step: 248 All domain states: SC[s0_0000, s0001_0111_1001_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 12, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00X0_XXX1_1011, r0001_0XXX_XX11_1011, r0001_00XX_X1X1_1011, r0001_00XX_0XX1_1011, r0001_000X_XXX1_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11], limiting using s0001_0100_0111_1011) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0111_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 53 Get additional sample of state s0001_0011_1001_1011 to find closer incompatible pair within r0001_00xX_1x01_1011) PCS[PC[P[1:7]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 53 Get additional sample of state s0001_0011_1001_1011 to find closer incompatible pair within r0001_00xX_1x01_1011) PCS[PC[P[1:7]]]

Dom 1 s0001_0111_1001_1011 -7-> s0001_0011_1001_1011 [00/00/00/11_00/10/11/11_11/00/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0011_1001_1011 -7-> s0001_0111_1001_1011 [00/00/00/11_00/01/11/11_11/00/00/11_11/00/11/11]

  Square s0001_0011_1001_1011 adding result 3 s0001_0111_1001_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 30, priority(count): 500(2) 501(3) 504(1) 600(8) 601(1) 602(3) 603(1) 606(1) 900(2) 902(4) 903(2) 904(2) 
Priority 500
Step: 249 All domain states: SC[s0_0000, s0001_0111_1001_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 12, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_X101_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_11X1_1011, r0001_0XXX_XX11_1011], defining regions: [r0001_0XXX_X0X1_1011, r0001_0XXX_XX11_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11], limiting using s0001_0100_0111_1011) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0111_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 4 Pri 500 Sample anchor State s0001_0101_1001_1011, to limit group r0001_0xXx_xxx1_1011) PCS[PC[P[1:5]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 4 Pri 500 Sample anchor State s0001_0101_1001_1011, to limit group r0001_0xXx_xxx1_1011) PCS[PC[P[1:5]]]

Dom 1 s0001_0111_1001_1011 -5-> s0001_0101_1001_1011 [00/00/00/11_00/11/10/11_11/00/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0101_1001_1011 -4-> s0001_0100_1001_1011 [00/00/00/11_00/11/00/10_11/00/00/11_11/00/11/11]

  Square s0001_0101_1001_1011 adding result 3 s0001_0100_1001_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 31, priority(count): 500(2) 501(3) 504(1) 600(8) 601(1) 602(3) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 250 All domain states: SC[s0_0000, s0001_0100_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 4
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 12, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_X101_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_11X1_1011, r0001_0XXX_XX11_1011], defining regions: [r0001_0XXX_X0X1_1011, r0001_0XXX_XX11_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11], limiting using s0001_0100_0111_1011) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0100_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 3 Pri 500 Sample State s0001_0100_1011_1011, far from anchor s0001_0011_0101_1011 to define group r0001_0xXX_Xxx1_1011) PCS[PC[P[1:1,4]]]/1/3/-4

Need chosen:  0 N(Dom 1 Act 3 Pri 500 Sample State s0001_0100_1011_1011, far from anchor s0001_0011_0101_1011 to define group r0001_0xXX_Xxx1_1011) PCS[PC[P[1:1,4]]]

Dom 1 s0001_0100_1001_1011 -1-> s0001_0101_1011_1011 [00/00/00/11_00/11/00/01_11/00/01/11_11/00/11/11]

Dom 1 s0001_0101_1011_1011 -4-> s0001_0100_1011_1011 [00/00/00/11_00/11/00/10_11/00/11/11_11/00/11/11]
2 steps run.

Dom 1 s0001_0100_1011_1011 -3-> s0001_0101_0011_1011 [00/00/00/11_00/11/00/01_10/00/11/11_11/00/11/11]

Dom 1 Adding square s0001_0100_1011_1011 -3-> s0001_0101_0011_1011
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 22, priority(count): 250(1) 300(1) 500(2) 501(3) 504(1) 600(8) 601(1) 602(3) 603(1) 606(1) 
Priority 250
Step: 251 All domain states: SC[s0_0000, s0001_0101_0011_1011] Status: Negative, in RC[rx_XX00, rXXXX_XXx1_0xXX_XXXX], -1 

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 12, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_X101_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_11X1_1011, r0001_0XXX_XX11_1011], defining regions: [r0001_0XXX_X0X1_1011, r0001_0XXX_XX11_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(r0001_0xXX_X111_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/11/11/11_11/00/11/11], limiting using s0001_0100_0111_1011) num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0101_0011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 250 Sample State s0001_0101_0011_1011 not in a group) At Target

Need chosen:  0 N(Dom 1 Act 7 Pri 250 Sample State s0001_0101_0011_1011 not in a group) At Target

Dom 1 s0001_0101_0011_1011 -7-> s0001_0100_0011_1011 [00/00/00/11_00/11/00/10_00/00/11/11_11/00/11/11]

Dom 1 Adding square s0001_0101_0011_1011 -7-> s0001_0100_0011_1011

Dom 1 Act 7 Adding Group G(r0001_0X0X_00X1_1011, pn: 1, pnc: f, [00/00/00/11_00/X1/00/X0_00/00/XX/11_11/00/11/11]) from [s0001_0101_0011_1011, s0001_0000_0001_1011]

Dom 1 Act 7 Adding Group G(r0001_0xXX_XX11_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11]) from [s0001_0011_1111_1011, s0001_0100_0111_1011, s0001_0101_0011_1011]
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
anchor s0001_0100_0101_1011 in group r0001_0Xx0_x101_1011 removed, rate 1 below 2
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 35, priority(count): 200(1) 201(1) 401(2) 403(1) 500(2) 501(3) 504(1) 600(8) 602(3) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 200
Step: 252 All domain states: SC[s0_0000, s0001_0100_0011_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 13, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_X101_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_11X1_1011, r0001_0XXX_XX11_1011], defining regions: [r0001_0XXX_X0X1_1011, r0001_0XXX_XX11_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(r0001_0X0X_00X1_1011,  pn: 1, pnc: f, [00/00/00/11_00/X1/00/X0_00/00/XX/11_11/00/11/11])                                      num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(r0001_0xXX_XX11_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11])                                      num Sqrs: 3 Sqrs in: 3 in1: 2))

Dom: 1 Current State: s0001_0100_0011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 200 Sample Region r0001_0101_0001_1011 intersection of r0001_0Xxx_X001_1011 [00/00/00/11_00/10/00/11_00/00/00/11_11/00/11/11] and r0001_0X0X_00X1_1011 [00/00/00/11_00/11/00/10_00/00/00/11_11/00/11/11]) PCS[PC[P[0:2]], PC[P[1:1]]]/3/3/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 200 Sample Region r0001_0101_0001_1011 intersection of r0001_0Xxx_X001_1011 [00/00/00/11_00/10/00/11_00/00/00/11_11/00/11/11] and r0001_0X0X_00X1_1011 [00/00/00/11_00/11/00/10_00/00/00/11_11/00/11/11]) PCS[PC[P[0:2]], PC[P[1:1]]]

Dom 0 s0_0000 -2-> s0_0010 [00_00/00/01/00]
---- 
Dom 1 s0001_0100_0011_1011 -1-> s0001_0101_0001_1011 [00/00/00/11_00/11/00/01_00/00/10/11_11/00/11/11]
2 steps run.

Dom 1 s0001_0101_0001_1011 -7-> s0001_0001_0001_1011 [00/00/00/11_00/10/00/11_00/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0101_0001_1011 -7-> s0001_0001_0001_1011

Dom 1 Act 7 square s0001_0101_0001_1011 [00/00/00/11_00/10/00/11_00/00/00/11_11/00/11/11] invalidates
             group r0001_0X0X_00X1_1011 [00/00/00/11_00/X1/00/X0_00/00/XX/11_11/00/11/11]
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]

Dom 1 Act 7 deleted unneeded squares: [s0001_0001_1001_1011, s0001_0101_0001_1011, s0001_0110_0101_1011, s0001_0011_1001_1011]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 31, priority(count): 402(1) 500(2) 501(3) 504(1) 600(8) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 402, none.
Priority 500
Step: 253 All domain states: SC[s0_0010, s0001_0001_0001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 4
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_X101_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_11X1_1011, r0001_0XXX_XX11_1011], defining regions: [r0001_0XXX_X0X1_1011, r0001_0XXX_XX11_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_XX11_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11])                                      num Sqrs: 3 Sqrs in: 3 in1: 3))

Dom: 1 Current State: s0001_0001_0001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 3 Pri 500 Sample State s0001_0100_1011_1011, far from anchor s0001_0011_0101_1011 to define group r0001_0xXX_Xxx1_1011) PCS[PC[P[1:3,7,1,7]]]/4/6/+0
 1 N(Dom 1 Act 4 Pri 500 Sample State s0001_0010_0111_1011, far from anchor s0001_0101_1001_1011 to define group r0001_0xXx_xxx1_1011) PCS[PC[P[1:2,7,1,7]]]/4/6/+0

Need chosen:  1 N(Dom 1 Act 4 Pri 500 Sample State s0001_0010_0111_1011, far from anchor s0001_0101_1001_1011 to define group r0001_0xXx_xxx1_1011) PCS[PC[P[1:2,7,1,7]]]

Dom 1 s0001_0001_0001_1011 -2-> s0001_0000_0101_1011 [00/00/00/11_00/00/00/10_00/01/00/11_11/00/11/11]

Dom 1 s0001_0000_0101_1011 -7-> s0001_0010_0101_1011 [00/00/00/11_00/00/01/00_00/11/00/11_11/00/11/11]

Dom 1 s0001_0010_0101_1011 -1-> s0001_0011_0111_1011 [00/00/00/11_00/00/11/01_00/11/01/11_11/00/11/11]

  Square s0001_0010_0101_1011 adding result 4 s0001_0011_0111_1011, pn 1, pnc true

Dom 1 s0001_0011_0111_1011 -7-> s0001_0010_0111_1011 [00/00/00/11_00/00/11/10_00/11/11/11_11/00/11/11]
4 steps run.

Dom 1 s0001_0010_0111_1011 -4-> s0001_0011_0111_1011 [00/00/00/11_00/00/11/01_00/11/11/11_11/00/11/11]

Dom 1 Adding square s0001_0010_0111_1011 -4-> s0001_0011_0111_1011
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 31, priority(count): 402(1) 500(2) 501(3) 504(1) 600(8) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 402
Step: 254 All domain states: SC[s0_0010, s0001_0011_0111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 10, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_XX11_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11])                                      num Sqrs: 3 Sqrs in: 3 in1: 3))

Dom: 1 Current State: s0001_0011_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0100_0011_1011 to confirm group r0001_0xXX_XX11_1011+) PCS[PC[P[1:1,2,5,7,1]]]/4/8/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0100_0011_1011 to confirm group r0001_0xXX_XX11_1011+) PCS[PC[P[1:1,2,5,7,1]]]

Dom 1 s0001_0011_0111_1011 -1-> s0001_0010_0101_1011 [00/00/00/11_00/00/11/10_00/11/10/11_11/00/11/11]

Dom 1 s0001_0010_0101_1011 -2-> s0001_0011_0001_1011 [00/00/00/11_00/00/11/01_00/10/00/11_11/00/11/11]

Dom 1 s0001_0011_0001_1011 -5-> s0001_0001_0001_1011 [00/00/00/11_00/00/10/11_00/00/00/11_11/00/11/11]

Dom 1 s0001_0001_0001_1011 -7-> s0001_0101_0001_1011 [00/00/00/11_00/01/00/11_00/00/00/11_11/00/11/11]

Dom 1 s0001_0101_0001_1011 -1-> s0001_0100_0011_1011 [00/00/00/11_00/11/00/10_00/00/01/11_11/00/11/11]
5 steps run.

Dom 1 s0001_0100_0011_1011 -7-> s0001_0101_0011_1011 [00/00/00/11_00/11/00/01_00/00/11/11_11/00/11/11]

Dom 1 Adding square s0001_0100_0011_1011 -7-> s0001_0101_0011_1011
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 31, priority(count): 402(1) 500(2) 501(3) 504(1) 600(8) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 402
Step: 255 All domain states: SC[s0_0010, s0001_0101_0011_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 11, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_XX11_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11])                                      num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0101_0011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0100_0011_1011 to confirm group r0001_0xXX_XX11_1011+) PCS[PC[P[1:7]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0100_0011_1011 to confirm group r0001_0xXX_XX11_1011+) PCS[PC[P[1:7]]]

Dom 1 s0001_0101_0011_1011 -7-> s0001_0100_0011_1011 [00/00/00/11_00/11/00/10_00/00/11/11_11/00/11/11]

  Square s0001_0101_0011_1011 adding result 2 s0001_0100_0011_1011, pn 1, pnc false
1 step run.

Dom 1 s0001_0100_0011_1011 -7-> s0001_0101_0011_1011 [00/00/00/11_00/11/00/01_00/00/11/11_11/00/11/11]

  Square s0001_0100_0011_1011 adding result 2 s0001_0101_0011_1011, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 31, priority(count): 402(1) 500(2) 501(3) 504(1) 600(8) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 402
Step: 256 All domain states: SC[s0_0010, s0001_0101_0011_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 11, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X0X1_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_XX11_1011+, pn: 1, pnc: f, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11])                                      num Sqrs: 3 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0101_0011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0100_0011_1011 to confirm group r0001_0xXX_XX11_1011+) PCS[PC[P[1:4]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0100_0011_1011 to confirm group r0001_0xXX_XX11_1011+) PCS[PC[P[1:4]]]

Dom 1 s0001_0101_0011_1011 -4-> s0001_0100_0011_1011 [00/00/00/11_00/11/00/10_00/00/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0100_0011_1011 -7-> s0001_0101_0011_1011 [00/00/00/11_00/11/00/01_00/00/11/11_11/00/11/11]

  Square s0001_0100_0011_1011 adding result 3 s0001_0101_0011_1011, pn 1, pnc changed from false to true
Dom 1 Act 7 Group r0001_0xXX_XX11_1011 confirmed
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 33, priority(count): 52(2) 500(2) 501(3) 502(1) 504(1) 600(8) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 257 All domain states: SC[s0_0010, s0001_0101_0011_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 11, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_10X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_XX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limiting using s0001_0100_0111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0101_0011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 52 Get sample in r0001_0100_1011_1011 to find closer incompatible pair within r0001_0100_X0x1_1011) PCS[PC[P[1:3]]]/2/2/+0
 1 N(Dom 1 Act 7 Pri 52 Get sample in r0001_0100_0001_1011 to find closer incompatible pair within r0001_0100_X0x1_1011) PCS[PC[P[1:1]]]/2/2/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 52 Get sample in r0001_0100_1011_1011 to find closer incompatible pair within r0001_0100_X0x1_1011) PCS[PC[P[1:3]]]

Dom 1 s0001_0101_0011_1011 -3-> s0001_0100_1011_1011 [00/00/00/11_00/11/00/10_01/00/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0100_1011_1011 -7-> s0001_0101_1011_1011 [00/00/00/11_00/11/00/01_11/00/11/11_11/00/11/11]

Dom 1 Adding square s0001_0100_1011_1011 -7-> s0001_0101_1011_1011
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 32, priority(count): 52(1) 500(2) 501(3) 502(1) 504(1) 600(8) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 258 All domain states: SC[s0_0010, s0001_0101_1011_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 12, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_10X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_XX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limiting using s0001_0100_0111_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0101_1011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 52 Get additional sample of state s0001_0100_1011_1011 to find closer incompatible pair within r0001_0100_X0x1_1011) PCS[PC[P[1:7]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 52 Get additional sample of state s0001_0100_1011_1011 to find closer incompatible pair within r0001_0100_X0x1_1011) PCS[PC[P[1:7]]]

Dom 1 s0001_0101_1011_1011 -7-> s0001_0100_1011_1011 [00/00/00/11_00/11/00/10_11/00/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0100_1011_1011 -7-> s0001_0101_1011_1011 [00/00/00/11_00/11/00/01_11/00/11/11_11/00/11/11]

  Square s0001_0100_1011_1011 adding result 2 s0001_0101_1011_1011, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 32, priority(count): 52(1) 500(2) 501(3) 502(1) 504(1) 600(8) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 259 All domain states: SC[s0_0010, s0001_0101_1011_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 12, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_10X1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limiting using s0001_0100_1001_1011) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_XX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limiting using s0001_0100_0111_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0101_1011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 52 Get additional sample of state s0001_0100_1011_1011 to find closer incompatible pair within r0001_0100_X0x1_1011) PCS[PC[P[1:4]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 52 Get additional sample of state s0001_0100_1011_1011 to find closer incompatible pair within r0001_0100_X0x1_1011) PCS[PC[P[1:4]]]

Dom 1 s0001_0101_1011_1011 -4-> s0001_0100_1011_1011 [00/00/00/11_00/11/00/10_11/00/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0100_1011_1011 -7-> s0001_0101_1011_1011 [00/00/00/11_00/11/00/01_11/00/11/11_11/00/11/11]

  Square s0001_0100_1011_1011 adding result 3 s0001_0101_1011_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
Dom 1 Act 7 Group r0001_0Xxx_X001_1011 set limited on, adj mask m0000_0000_0110_0000
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 30, priority(count): 500(2) 501(3) 502(1) 504(1) 600(7) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 260 All domain states: SC[s0_0010, s0001_0101_1011_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 12, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011)                              num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_XX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limiting using s0001_0100_0111_1011)                              num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0101_1011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 3 Pri 500 Sample State s0001_0100_1011_1011, far from anchor s0001_0011_0101_1011 to define group r0001_0xXX_Xxx1_1011) PCS[PC[P[1:7]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 3 Pri 500 Sample State s0001_0100_1011_1011, far from anchor s0001_0011_0101_1011 to define group r0001_0xXX_Xxx1_1011) PCS[PC[P[1:7]]]

Dom 1 s0001_0101_1011_1011 -7-> s0001_0100_1011_1011 [00/00/00/11_00/11/00/10_11/00/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0100_1011_1011 -3-> s0001_0101_0011_1011 [00/00/00/11_00/11/00/01_10/00/11/11_11/00/11/11]

  Square s0001_0100_1011_1011 adding result 2 s0001_0101_0011_1011, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
defining vert: rX_XX0X (s1_0101 - [s1_0111])
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
defining vert: rX_XX0X (s1_0100 - [s1_0110])
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
defining vert: rX_XX1X (s1_1010 - [s1_1000])
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_0111 - [s1_0101])
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 30, priority(count): 500(2) 501(3) 502(1) 504(1) 600(7) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 261 All domain states: SC[s0_0010, s0001_0101_0011_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limiting using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 12, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011)                              num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_XX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limiting using s0001_0100_0111_1011)                              num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0101_0011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 3 Pri 500 Sample State s0001_0100_1011_1011, far from anchor s0001_0011_0101_1011 to define group r0001_0xXX_Xxx1_1011) PCS[PC[P[1:3]]]/2/2/+0

Need chosen:  0 N(Dom 1 Act 3 Pri 500 Sample State s0001_0100_1011_1011, far from anchor s0001_0011_0101_1011 to define group r0001_0xXX_Xxx1_1011) PCS[PC[P[1:3]]]

Dom 1 s0001_0101_0011_1011 -3-> s0001_0100_1011_1011 [00/00/00/11_00/11/00/10_01/00/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0100_1011_1011 -3-> s0001_0101_0011_1011 [00/00/00/11_00/11/00/01_10/00/11/11_11/00/11/11]

  Square s0001_0100_1011_1011 adding result 3 s0001_0101_0011_1011, pn 1, pnc changed from false to true
Need satisfied
Dom 1 Act 3 Group r0001_0xXX_Xxx1_1011 set limited on, adj mask m0000_0000_0000_0000
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 29, priority(count): 500(1) 501(3) 502(1) 504(1) 600(7) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 262 All domain states: SC[s0_0010, s0001_0101_0011_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 12, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011)                              num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_XX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limiting using s0001_0100_0111_1011)                              num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0101_0011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 4 Pri 500 Sample State s0001_0010_0111_1011, far from anchor s0001_0101_1001_1011 to define group r0001_0xXx_xxx1_1011) PCS[PC[P[1:1,7,5,1,2]]]/4/8/+0

Need chosen:  0 N(Dom 1 Act 4 Pri 500 Sample State s0001_0010_0111_1011, far from anchor s0001_0101_1001_1011 to define group r0001_0xXx_xxx1_1011) PCS[PC[P[1:1,7,5,1,2]]]

Dom 1 s0001_0101_0011_1011 -1-> s0001_0100_0001_1011 [00/00/00/11_00/11/00/10_00/00/10/11_11/00/11/11]

Dom 1 s0001_0100_0001_1011 -7-> s0001_0000_0001_1011 [00/00/00/11_00/10/00/00_00/00/00/11_11/00/11/11]

Dom 1 s0001_0000_0001_1011 -5-> s0001_0010_0001_1011 [00/00/00/11_00/00/01/00_00/00/00/11_11/00/11/11]

Dom 1 s0001_0010_0001_1011 -1-> s0001_0011_0011_1011 [00/00/00/11_00/00/11/01_00/00/01/11_11/00/11/11]

Dom 1 s0001_0011_0011_1011 -2-> s0001_0010_0111_1011 [00/00/00/11_00/00/11/10_00/01/11/11_11/00/11/11]
5 steps run.

Dom 1 s0001_0010_0111_1011 -4-> s0001_0011_0111_1011 [00/00/00/11_00/00/11/01_00/11/11/11_11/00/11/11]

  Square s0001_0010_0111_1011 adding result 2 s0001_0011_0111_1011, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 29, priority(count): 500(1) 501(3) 502(1) 504(1) 600(7) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 263 All domain states: SC[s0_0010, s0001_0011_0111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0xXx_xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limiting using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 12, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011)                              num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_XX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limiting using s0001_0100_0111_1011)                              num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0011_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 4 Pri 500 Sample State s0001_0010_0111_1011, far from anchor s0001_0101_1001_1011 to define group r0001_0xXx_xxx1_1011) PCS[PC[P[1:4]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 4 Pri 500 Sample State s0001_0010_0111_1011, far from anchor s0001_0101_1001_1011 to define group r0001_0xXx_xxx1_1011) PCS[PC[P[1:4]]]

Dom 1 s0001_0011_0111_1011 -4-> s0001_0010_0111_1011 [00/00/00/11_00/00/11/10_00/11/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0010_0111_1011 -4-> s0001_0011_0111_1011 [00/00/00/11_00/00/11/01_00/11/11/11_11/00/11/11]

  Square s0001_0010_0111_1011 adding result 3 s0001_0011_0111_1011, pn 1, pnc changed from false to true
Need satisfied
Dom 1 Act 4 Group r0001_0xXx_xxx1_1011 set limited on, adj mask m0000_0000_0000_0000
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
Options:
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 28, priority(count): 501(3) 502(1) 504(1) 600(7) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 501
Step: 264 All domain states: SC[s0_0010, s0001_0011_0111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 12, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011)                              num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_XX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limiting using s0001_0100_0111_1011)                              num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0011_0111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 501 Sample State s0_1011, far from anchor s1_0110 to define group rX_Xx1x) PCS[PC[P[0:1,4]]]/2/2/+0
 1 N(Dom 0 Act 4 Pri 501 Sample State s0_0100, far from anchor s1_0011 to define group rX_0Xxx) PCS[PC[P[1:7]], PC[P[0:3,3]]]/3/3/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 501 Sample State s0_1011, far from anchor s1_0110 to define group rX_Xx1x) PCS[PC[P[0:1,4]]]

All domain states: SC[s0_0010, s0001_0011_0111_1011]

Dom 0 s0_0010 -1-> s0_0011 [00_00/00/11/01]

Dom 0 s0_0011 -4-> s0_1011 [00_01/00/11/11]

  Square s0_0011 adding result 4 s0_1011, pn 1, pnc true
2 steps run.

Dom 0 s0_1011 -2-> s0_1111 [00_11/01/11/11]

Dom 0 Adding square s0_1011 -2-> s0_1111
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 28, priority(count): 501(3) 502(1) 504(1) 600(7) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 501
Step: 265 All domain states: SC[s0_1111, s0001_0011_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 501 Sample State s0_1011, far from anchor s1_0110 to define group rX_Xx1x) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 501 Sample State s0_1011, far from anchor s1_0110 to define group rX_Xx1x) PCS[PC[P[0:2]]]

Dom 0 s0_1111 -2-> s0_1011 [00_11/10/11/11]
1 step run.

Dom 0 s0_1011 -2-> s0_1111 [00_11/01/11/11]

  Square s0_1011 adding result 2 s0_1111, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 28, priority(count): 501(3) 502(1) 504(1) 600(7) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 501
Step: 266 All domain states: SC[s0_1111, s0001_0011_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXXX, rX_X0X1, rX_1XX1, rX_00XX, rX_XX0X, rX_11XX, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limiting using s1_0110)                 num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 501 Sample State s0_1011, far from anchor s1_0110 to define group rX_Xx1x) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 501 Sample State s0_1011, far from anchor s1_0110 to define group rX_Xx1x) PCS[PC[P[0:2]]]

Dom 0 s0_1111 -2-> s0_1011 [00_11/10/11/11]
1 step run.

Dom 0 s0_1011 -2-> s0_1111 [00_11/01/11/11]

  Square s0_1011 adding result 3 s0_1111, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
Dom 0 Act 2 Group rX_Xx1x set limited on, adj mask m0_0010
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 27, priority(count): 501(2) 502(1) 504(1) 600(7) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 501
Step: 267 All domain states: SC[s0_1111, s0001_0011_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 10, calculated structure regions: [rX_XXX1, rX_XX1X, rX_X1XX, rX_0XXX, r1_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 501 Sample anchor State s1_1101, to limit group rx_Xx0x) PCS[PC[P[0:4,3]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 501 Sample anchor State s1_1101, to limit group rx_Xx0x) PCS[PC[P[0:4,3]]]

Dom 0 s0_1111 -4-> s1_1111 [01_11/11/11/11]

Dom 0 s1_1111 -3-> s1_1101 [11_11/11/10/11]

  Square s1_1111 adding result 4 s1_1101, pn 1, pnc true
2 steps run.

Dom 0 s1_1101 -3-> s1_1001 [11_11/10/00/11]

  Square s1_1101 adding result 3 s1_1001, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]

Number needs: 30, priority(count): 52(3) 500(1) 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 268 All domain states: SC[s1_1001, s0001_0011_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 11, calculated structure regions: [r1_XXX0, rX_X0X1, r0_X1XX, r0_XXX1, rX_XX1X, rX_X1X0, r1_X0XX, rX_0XX0, rX_00XX, r0_0XXX, r1_0XX1, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_1001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s1_0100 to find closer incompatible pair within r1_01xX) PCS[PC[P[0:5,3]], PC[P[0:1]]]/3/3/+0
 1 N(Dom 0 Act 3 Pri 52 Get sample in r1_0111 to find closer incompatible pair within rX_01x1) PCS[PC[P[0:2,1,5]]]/3/3/+0
 2 N(Dom 0 Act 3 Pri 52 Get sample in r0_0101 to find closer incompatible pair within rX_01x1) PCS[PC[P[0:5,3,5]]]/3/3/+0

Need chosen:  2 N(Dom 0 Act 3 Pri 52 Get sample in r0_0101 to find closer incompatible pair within rX_01x1) PCS[PC[P[0:5,3,5]]]

Dom 0 s1_1001 -5-> s1_0001 [11_10/00/00/11]

Dom 0 s1_0001 -3-> s1_0101 [11_00/01/00/11]

Dom 0 s1_0101 -5-> s0_0101 [10_00/11/00/11]
3 steps run.

Dom 0 s0_0101 -3-> s0_0001 [00_00/10/00/11]

Dom 0 Adding square s0_0101 -3-> s0_0001
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 29, priority(count): 52(2) 500(1) 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 269 All domain states: SC[s0_0001, s0001_0011_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 12, calculated structure regions: [r1_XXX0, rX_X0X1, r0_X1XX, r0_XXX1, rX_XX1X, rX_X1X0, r1_X0XX, rX_0XX0, rX_00XX, r0_0XXX, r1_0XX1, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s0_0101 to find closer incompatible pair within rX_01x1) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s0_0101 to find closer incompatible pair within rX_01x1) PCS[PC[P[0:3]]]

Dom 0 s0_0001 -3-> s0_0101 [00_00/01/00/11]
1 step run.

Dom 0 s0_0101 -3-> s0_0001 [00_00/10/00/11]

  Square s0_0101 adding result 2 s0_0001, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 29, priority(count): 52(2) 500(1) 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 270 All domain states: SC[s0_0001, s0001_0011_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 12, calculated structure regions: [r1_XXX0, rX_X0X1, r0_X1XX, r0_XXX1, rX_XX1X, rX_X1X0, r1_X0XX, rX_0XX0, rX_00XX, r0_0XXX, r1_0XX1, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s0_0101 to find closer incompatible pair within rX_01x1) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s0_0101 to find closer incompatible pair within rX_01x1) PCS[PC[P[0:3]]]

Dom 0 s0_0001 -3-> s0_0101 [00_00/01/00/11]
1 step run.

Dom 0 s0_0101 -3-> s0_0001 [00_00/10/00/11]

  Square s0_0101 adding result 3 s0_0001, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX1X (s0_0111 - [s0_0101])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_XX0X (s0_0101 - [s0_0111])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s0_0111 - [s0_0101]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s0_0101 - [s0_0111])]
  gggg [(s0_0111 - [s0_0101]), (s0_0101 - [s0_0111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0101 - [s0_0111])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
  gggg [(s0_0111 - [s0_0101]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 28, priority(count): 52(1) 500(1) 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 271 All domain states: SC[s0_0001, s0001_0011_0111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 12, calculated structure regions: [r1_XXX0, r0_11XX, r1_X0XX, r0_1XX1, r1_0XX1, rX_X1X0, rX_0XX0, rX_X0X1, rX_00XX, rX_XX1X, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s1_0100 to find closer incompatible pair within r1_01xX) PCS[PC[P[0:5,3]], PC[P[0:1]]]/3/3/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s1_0100 to find closer incompatible pair within r1_01xX) PCS[PC[P[0:5,3]], PC[P[0:1]]]

Dom 0 s0_0001 -5-> s1_0001 [01_00/00/00/11]

Dom 0 s1_0001 -3-> s1_0101 [11_00/01/00/11]
---- 
Dom 0 s1_0101 -1-> s1_0100 [11_00/11/00/10]
3 steps run.

Dom 0 s1_0100 -3-> s1_0000 [11_00/10/00/00]

  Square s1_0100 adding result 2 s1_0000, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX1X (s0_0111 - [s0_0101])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_XX0X (s0_0101 - [s0_0111])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s0_0111 - [s0_0101]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s0_0101 - [s0_0111])]
  gggg [(s0_0111 - [s0_0101]), (s0_0101 - [s0_0111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0101 - [s0_0111])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
  gggg [(s0_0111 - [s0_0101]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 18, priority(count): 52(1) 300(1) 500(1) 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 
Priority 52
Step: 272 All domain states: SC[s1_0000, s0001_0011_0111_1011] Status: Negative, in RC[rx_XX00, rXXXX_XXx1_0xXX_XXXX], -1 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 12, calculated structure regions: [r1_XXX0, r0_11XX, r1_X0XX, r0_1XX1, r1_0XX1, rX_X1X0, rX_0XX0, rX_X0X1, rX_00XX, rX_XX1X, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s1_0100 to find closer incompatible pair within r1_01xX) PCS[PC[P[0:3]]]/1/1/-1

Need chosen:  0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s1_0100 to find closer incompatible pair within r1_01xX) PCS[PC[P[0:3]]]

Dom 0 s1_0000 -3-> s1_0100 [11_00/01/00/00]

  Square s1_0000 adding result 3 s1_0100, pn 1, pnc changed from false to true
1 step run.

Dom 0 s1_0100 -3-> s1_0000 [11_00/10/00/00]

  Square s1_0100 adding result 3 s1_0000, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX1X (s0_0111 - [s0_0101])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_XX0X (s0_0101 - [s0_0111])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s0_0111 - [s0_0101]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s1_0110 - [s1_0100]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s0_0101 - [s0_0111])]
  gggg [(s0_0111 - [s0_0101]), (s0_0101 - [s0_0111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0101 - [s0_0111])]
  gggg [(s1_0110 - [s1_0100]), (s0_0101 - [s0_0111])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
  gggg [(s0_0111 - [s0_0101]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s1_0110 - [s1_0100]), (s1_1101 - [s1_1111])]
  gggg [(s0_1010 - [s0_1000]), (s1_0100 - [s1_0110])]
  gggg [(s0_0111 - [s0_0101]), (s1_0100 - [s1_0110])]
  gggg [(s1_1111 - [s1_1101]), (s1_0100 - [s1_0110])]
  gggg [(s1_0110 - [s1_0100]), (s1_0100 - [s1_0110])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 19, priority(count): 52(2) 300(1) 500(1) 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 
Priority 52
Step: 273 All domain states: SC[s1_0000, s0001_0011_0111_1011] Status: Negative, in RC[rx_XX00, rXXXX_XXx1_0xXX_XXXX], -1 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 12, calculated structure regions: [rX_XX1X, r0_11XX, r1_1XX0, r0_1XX1, rX_11X0, r0_0XX0, r0_X1X0, r1_10XX, r1_0XX1, rX_00XX, rX_X0X1, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 52 Get sample in r1_1000 to find closer incompatible pair within r1_X0X0) PCS[PC[P[0:4]]]/1/1/-1
 1 N(Dom 0 Act 3 Pri 52 Get sample in r1_0010 to find closer incompatible pair within r1_X0X0) PCS[PC[P[0:2]]]/1/1/-1

Need chosen:  1 N(Dom 0 Act 3 Pri 52 Get sample in r1_0010 to find closer incompatible pair within r1_X0X0) PCS[PC[P[0:2]]]

Dom 0 s1_0000 -2-> s1_0010 [11_00/00/01/00]
1 step run.

Dom 0 s1_0010 -3-> s1_0000 [11_00/00/10/00]

Dom 0 Adding square s1_0010 -3-> s1_0000
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_XX1X (s0_0111 - [s0_0101])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_XX0X (s0_0101 - [s0_0111])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s0_0111 - [s0_0101]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s1_0110 - [s1_0100]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s0_0101 - [s0_0111])]
  gggg [(s0_0111 - [s0_0101]), (s0_0101 - [s0_0111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0101 - [s0_0111])]
  gggg [(s1_0110 - [s1_0100]), (s0_0101 - [s0_0111])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
  gggg [(s0_0111 - [s0_0101]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s1_0110 - [s1_0100]), (s1_1101 - [s1_1111])]
  gggg [(s0_1010 - [s0_1000]), (s1_0100 - [s1_0110])]
  gggg [(s0_0111 - [s0_0101]), (s1_0100 - [s1_0110])]
  gggg [(s1_1111 - [s1_1101]), (s1_0100 - [s1_0110])]
  gggg [(s1_0110 - [s1_0100]), (s1_0100 - [s1_0110])]
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 18, priority(count): 52(1) 300(1) 500(1) 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 
Priority 52
Step: 274 All domain states: SC[s1_0000, s0001_0011_0111_1011] Status: Negative, in RC[rx_XX00, rXXXX_XXx1_0xXX_XXXX], -1 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 13, calculated structure regions: [rX_XX1X, r0_11XX, r1_1XX0, r0_1XX1, rX_11X0, r0_0XX0, r0_X1X0, r1_10XX, r1_0XX1, rX_00XX, rX_X0X1, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s1_0010 to find closer incompatible pair within r1_X0X0) PCS[PC[P[0:2]]]/1/1/-1

Need chosen:  0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s1_0010 to find closer incompatible pair within r1_X0X0) PCS[PC[P[0:2]]]

Dom 0 s1_0000 -2-> s1_0010 [11_00/00/01/00]
1 step run.

Dom 0 s1_0010 -3-> s1_0000 [11_00/00/10/00]

  Square s1_0010 adding result 2 s1_0000, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_XX1X (s0_0111 - [s0_0101])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_XX0X (s0_0101 - [s0_0111])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s0_0111 - [s0_0101]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s1_0110 - [s1_0100]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s0_0101 - [s0_0111])]
  gggg [(s0_0111 - [s0_0101]), (s0_0101 - [s0_0111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0101 - [s0_0111])]
  gggg [(s1_0110 - [s1_0100]), (s0_0101 - [s0_0111])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
  gggg [(s0_0111 - [s0_0101]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s1_0110 - [s1_0100]), (s1_1101 - [s1_1111])]
  gggg [(s0_1010 - [s0_1000]), (s1_0100 - [s1_0110])]
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
  gggg [(s0_0111 - [s0_0101]), (s1_0100 - [s1_0110])]
  gggg [(s1_1111 - [s1_1101]), (s1_0100 - [s1_0110])]
  gggg [(s1_0110 - [s1_0100]), (s1_0100 - [s1_0110])]
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 18, priority(count): 52(1) 300(1) 500(1) 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 
Priority 52
Step: 275 All domain states: SC[s1_0000, s0001_0011_0111_1011] Status: Negative, in RC[rx_XX00, rXXXX_XXx1_0xXX_XXXX], -1 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 13, calculated structure regions: [rX_XX1X, r0_11XX, r1_1XX0, r0_1XX1, rX_11X0, r0_0XX0, r0_X1X0, r1_10XX, r1_0XX1, rX_00XX, rX_X0X1, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s1_0010 to find closer incompatible pair within r1_X0X0) PCS[PC[P[0:2]]]/1/1/-1

Need chosen:  0 N(Dom 0 Act 3 Pri 52 Get additional sample of state s1_0010 to find closer incompatible pair within r1_X0X0) PCS[PC[P[0:2]]]

Dom 0 s1_0000 -2-> s1_0010 [11_00/00/01/00]
1 step run.

Dom 0 s1_0010 -3-> s1_0000 [11_00/00/10/00]

  Square s1_0010 adding result 3 s1_0000, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_XX1X (s0_0111 - [s0_0101])
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_XX1X (s1_0010 - [s1_0000])
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
defining vert: rX_XX1X (s1_0110 - [s1_0100])
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
defining vert: rX_XX0X (s0_1000 - [s0_1010])
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
defining vert: rX_XX0X (s0_0101 - [s0_0111])
defining vert: rX_XX0X (s1_0000 - [s1_0010])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s0_0111 - [s0_0101]), (s0_1000 - [s0_1010])]
  gggg [(s1_0010 - [s1_0000]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s1_0110 - [s1_0100]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s0_0101 - [s0_0111])]
  gggg [(s0_0111 - [s0_0101]), (s0_0101 - [s0_0111])]
  gggg [(s1_0010 - [s1_0000]), (s0_0101 - [s0_0111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0101 - [s0_0111])]
  gggg [(s1_0110 - [s1_0100]), (s0_0101 - [s0_0111])]
  gggg [(s0_1010 - [s0_1000]), (s1_0000 - [s1_0010])]
  gggg [(s0_0111 - [s0_0101]), (s1_0000 - [s1_0010])]
  gggg [(s1_0010 - [s1_0000]), (s1_0000 - [s1_0010])]
  gggg [(s1_1111 - [s1_1101]), (s1_0000 - [s1_0010])]
  gggg [(s1_0110 - [s1_0100]), (s1_0000 - [s1_0010])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
  gggg [(s0_0111 - [s0_0101]), (s1_1101 - [s1_1111])]
  gggg [(s1_0010 - [s1_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s1_0110 - [s1_0100]), (s1_1101 - [s1_1111])]
  gggg [(s0_1010 - [s0_1000]), (s1_0100 - [s1_0110])]
  gggg [(s0_0111 - [s0_0101]), (s1_0100 - [s1_0110])]
  gggg [(s1_0010 - [s1_0000]), (s1_0100 - [s1_0110])]
  gggg [(s1_1111 - [s1_1101]), (s1_0100 - [s1_0110])]
  gggg [(s1_0110 - [s1_0100]), (s1_0100 - [s1_0110])]

Number needs: 17, priority(count): 300(1) 500(1) 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 
Priority 300
Step: 276 All domain states: SC[s1_0000, s0001_0011_0111_1011] Status: Negative, in RC[rx_XX00, rXXXX_XXx1_0xXX_XXXX], -1 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 13, calculated structure regions: [rX_X0X1, r1_10XX, r1_0XX1, r1_1XX0, rX_11X0, r0_X1X0, r0_1XX1, r0_00XX, r0_11XX, r0_0XX0, rX_XX1X, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Pri 300 Exit Select Regions to RC[rX_XXXX, rXXXX_XXXX_11XX_XXXX]) PCS[PC[P[1:3]]]/2/2/-4

Need chosen:  0 N(Pri 300 Exit Select Regions to RC[rX_XXXX, rXXXX_XXXX_11XX_XXXX]) PCS[PC[P[1:3]]]

Dom 1 s0001_0011_0111_1011 -3-> s0001_0010_1111_1011 [00/00/00/11_00/00/11/10_01/11/11/11_11/00/11/11]
1 step run.
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX1X (s0_0111 - [s0_0101])
defining vert: rX_XX1X (s1_0010 - [s1_0000])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_XX0X (s0_0101 - [s0_0111])
defining vert: rX_XX0X (s1_0000 - [s1_0010])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s0_0111 - [s0_0101]), (s0_1000 - [s0_1010])]
  gggg [(s1_0010 - [s1_0000]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s1_0110 - [s1_0100]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s0_0101 - [s0_0111])]
  gggg [(s0_0111 - [s0_0101]), (s0_0101 - [s0_0111])]
  gggg [(s1_0010 - [s1_0000]), (s0_0101 - [s0_0111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0101 - [s0_0111])]
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
  gggg [(s1_0110 - [s1_0100]), (s0_0101 - [s0_0111])]
  gggg [(s0_1010 - [s0_1000]), (s1_0000 - [s1_0010])]
  gggg [(s0_0111 - [s0_0101]), (s1_0000 - [s1_0010])]
  gggg [(s1_0010 - [s1_0000]), (s1_0000 - [s1_0010])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
  gggg [(s1_1111 - [s1_1101]), (s1_0000 - [s1_0010])]
  gggg [(s1_0110 - [s1_0100]), (s1_0000 - [s1_0010])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
  gggg [(s0_0111 - [s0_0101]), (s1_1101 - [s1_1111])]
  gggg [(s1_0010 - [s1_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s1_0110 - [s1_0100]), (s1_1101 - [s1_1111])]
  gggg [(s0_1010 - [s0_1000]), (s1_0100 - [s1_0110])]
  gggg [(s0_0111 - [s0_0101]), (s1_0100 - [s1_0110])]
  gggg [(s1_0010 - [s1_0000]), (s1_0100 - [s1_0110])]
  gggg [(s1_1111 - [s1_1101]), (s1_0100 - [s1_0110])]
  gggg [(s1_0110 - [s1_0100]), (s1_0100 - [s1_0110])]
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 23, priority(count): 500(1) 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 900(2) 902(1) 903(2) 904(2) 
Priority 500
Step: 277 All domain states: SC[s1_0000, s0001_0010_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 13, calculated structure regions: [rX_X0X1, r1_10XX, r1_0XX1, r1_1XX0, rX_11X0, r0_X1X0, r0_1XX1, r0_00XX, r0_11XX, r0_0XX0, rX_XX1X, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 500 Sample State s0_0010, far from anchor s1_1111 to define group rX_Xx1x) PCS[PC[P[0:5,2]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 500 Sample State s0_0010, far from anchor s1_1111 to define group rX_Xx1x) PCS[PC[P[0:5,2]]]

Dom 0 s1_0000 -5-> s0_0000 [10_00/00/00/00]

Dom 0 s0_0000 -2-> s0_0010 [00_00/00/01/00]
2 steps run.

Dom 0 s0_0010 -3-> s0_0000 [00_00/00/10/00]

Dom 0 Adding square s0_0010 -3-> s0_0000
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX1X (s0_0111 - [s0_0101])
defining vert: rX_XX1X (s1_0010 - [s1_0000])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_XX0X (s0_0101 - [s0_0111])
defining vert: rX_XX0X (s1_0000 - [s1_0010])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s0_0111 - [s0_0101]), (s0_1000 - [s0_1010])]
  gggg [(s1_0010 - [s1_0000]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s1_0110 - [s1_0100]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s0_0101 - [s0_0111])]
  gggg [(s0_0111 - [s0_0101]), (s0_0101 - [s0_0111])]
  gggg [(s1_0010 - [s1_0000]), (s0_0101 - [s0_0111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0101 - [s0_0111])]
  gggg [(s1_0110 - [s1_0100]), (s0_0101 - [s0_0111])]
  gggg [(s0_1010 - [s0_1000]), (s1_0000 - [s1_0010])]
  gggg [(s0_0111 - [s0_0101]), (s1_0000 - [s1_0010])]
  gggg [(s1_0010 - [s1_0000]), (s1_0000 - [s1_0010])]
  gggg [(s1_1111 - [s1_1101]), (s1_0000 - [s1_0010])]
  gggg [(s1_0110 - [s1_0100]), (s1_0000 - [s1_0010])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
  gggg [(s0_0111 - [s0_0101]), (s1_1101 - [s1_1111])]
  gggg [(s1_0010 - [s1_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s1_0110 - [s1_0100]), (s1_1101 - [s1_1111])]
  gggg [(s0_1010 - [s0_1000]), (s1_0100 - [s1_0110])]
  gggg [(s0_0111 - [s0_0101]), (s1_0100 - [s1_0110])]
  gggg [(s1_0010 - [s1_0000]), (s1_0100 - [s1_0110])]
  gggg [(s1_1111 - [s1_1101]), (s1_0100 - [s1_0110])]
  gggg [(s1_0110 - [s1_0100]), (s1_0100 - [s1_0110])]

Number needs: 23, priority(count): 500(1) 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 900(2) 902(1) 903(2) 904(2) 
Priority 500
Step: 278 All domain states: SC[s0_0000, s0001_0010_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 14, calculated structure regions: [rX_X0X1, r1_10XX, r1_0XX1, r1_1XX0, rX_11X0, r0_X1X0, r0_1XX1, r0_00XX, r0_11XX, r0_0XX0, rX_XX1X, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 8 in1: 8),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 500 Sample State s0_0010, far from anchor s1_1111 to define group rX_Xx1x) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 500 Sample State s0_0010, far from anchor s1_1111 to define group rX_Xx1x) PCS[PC[P[0:2]]]

Dom 0 s0_0000 -2-> s0_0010 [00_00/00/01/00]
1 step run.

Dom 0 s0_0010 -3-> s0_0000 [00_00/00/10/00]

  Square s0_0010 adding result 2 s0_0000, pn 1, pnc false
Need satisfied
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_XX1X (s0_0111 - [s0_0101])
defining vert: rX_XX1X (s1_0010 - [s1_0000])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_XX0X (s0_0101 - [s0_0111])
defining vert: rX_XX0X (s1_0000 - [s1_0010])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s0_0111 - [s0_0101]), (s0_1000 - [s0_1010])]
  gggg [(s1_0010 - [s1_0000]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s1_0110 - [s1_0100]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s0_0101 - [s0_0111])]
  gggg [(s0_0111 - [s0_0101]), (s0_0101 - [s0_0111])]
  gggg [(s1_0010 - [s1_0000]), (s0_0101 - [s0_0111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0101 - [s0_0111])]
  gggg [(s1_0110 - [s1_0100]), (s0_0101 - [s0_0111])]
  gggg [(s0_1010 - [s0_1000]), (s1_0000 - [s1_0010])]
  gggg [(s0_0111 - [s0_0101]), (s1_0000 - [s1_0010])]
  gggg [(s1_0010 - [s1_0000]), (s1_0000 - [s1_0010])]
  gggg [(s1_1111 - [s1_1101]), (s1_0000 - [s1_0010])]
  gggg [(s1_0110 - [s1_0100]), (s1_0000 - [s1_0010])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
  gggg [(s0_0111 - [s0_0101]), (s1_1101 - [s1_1111])]
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
  gggg [(s1_0010 - [s1_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s1_0110 - [s1_0100]), (s1_1101 - [s1_1111])]
  gggg [(s0_1010 - [s0_1000]), (s1_0100 - [s1_0110])]
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
  gggg [(s0_0111 - [s0_0101]), (s1_0100 - [s1_0110])]
  gggg [(s1_0010 - [s1_0000]), (s1_0100 - [s1_0110])]
  gggg [(s1_1111 - [s1_1101]), (s1_0100 - [s1_0110])]
  gggg [(s1_0110 - [s1_0100]), (s1_0100 - [s1_0110])]
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 23, priority(count): 500(1) 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 900(2) 902(1) 903(2) 904(2) 
Priority 500
Step: 279 All domain states: SC[s0_0000, s0001_0010_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 14, calculated structure regions: [rX_X0X1, r1_10XX, r1_0XX1, r1_1XX0, rX_11X0, r0_X1X0, r0_1XX1, r0_00XX, r0_11XX, r0_0XX0, rX_XX1X, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_Xx1x,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 8 in1: 8),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 500 Sample State s0_0010, far from anchor s1_1111 to define group rX_Xx1x) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 500 Sample State s0_0010, far from anchor s1_1111 to define group rX_Xx1x) PCS[PC[P[0:2]]]

Dom 0 s0_0000 -2-> s0_0010 [00_00/00/01/00]
1 step run.

Dom 0 s0_0010 -3-> s0_0000 [00_00/00/10/00]

  Square s0_0010 adding result 3 s0_0000, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
defining vert: rX_XX1X (s0_1010 - [s0_1000])
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
defining vert: rX_XX1X (s0_0111 - [s0_0101])
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
defining vert: rX_XX1X (s1_0010 - [s1_0000])
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
defining vert: rX_XX0X (s0_0101 - [s0_0111])
defining vert: rX_XX0X (s1_0000 - [s1_0010])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
Options:
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]
  gggg [(s0_0111 - [s0_0101]), (s0_1000 - [s0_1010])]
  gggg [(s1_0010 - [s1_0000]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s1_0110 - [s1_0100]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s0_0101 - [s0_0111])]
  gggg [(s0_0111 - [s0_0101]), (s0_0101 - [s0_0111])]
  gggg [(s1_0010 - [s1_0000]), (s0_0101 - [s0_0111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0101 - [s0_0111])]
  gggg [(s1_0110 - [s1_0100]), (s0_0101 - [s0_0111])]
  gggg [(s0_1010 - [s0_1000]), (s1_0000 - [s1_0010])]
  gggg [(s0_0111 - [s0_0101]), (s1_0000 - [s1_0010])]
  gggg [(s1_0010 - [s1_0000]), (s1_0000 - [s1_0010])]
  gggg [(s1_1111 - [s1_1101]), (s1_0000 - [s1_0010])]
  gggg [(s1_0110 - [s1_0100]), (s1_0000 - [s1_0010])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
  gggg [(s0_0111 - [s0_0101]), (s1_1101 - [s1_1111])]
  gggg [(s1_0010 - [s1_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s1_0110 - [s1_0100]), (s1_1101 - [s1_1111])]
  gggg [(s0_1010 - [s0_1000]), (s1_0100 - [s1_0110])]
  gggg [(s0_0111 - [s0_0101]), (s1_0100 - [s1_0110])]
  gggg [(s1_0010 - [s1_0000]), (s1_0100 - [s1_0110])]
  gggg [(s1_1111 - [s1_1101]), (s1_0100 - [s1_0110])]
  gggg [(s1_0110 - [s1_0100]), (s1_0100 - [s1_0110])]
Dom 0 Act 3 Group rX_Xx1x set limited on, adj mask m0_0010

Number needs: 22, priority(count): 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 900(2) 902(1) 903(2) 904(2) 
Priority 501
Step: 280 All domain states: SC[s0_0000, s0001_0010_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 14, calculated structure regions: [rX_X0X1, r1_10XX, r1_0XX1, r1_1XX0, rX_11X0, r0_X1X0, r0_1XX1, r0_00XX, r0_11XX, r0_0XX0, rX_XX1X, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 8 in1: 8),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101)                 num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 501 Sample State s0_0000, far from anchor s1_1101 to define group rx_Xx0x) At Target

Need chosen:  0 N(Dom 0 Act 3 Pri 501 Sample State s0_0000, far from anchor s1_1101 to define group rx_Xx0x) At Target

Dom 0 s0_0000 -3-> s0_0100 [00_00/01/00/00]

Dom 0 Adding square s0_0000 -3-> s0_0100
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_XX1X (s0_0111 - [s0_0101])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
defining vert: rX_XX1X (s1_0010 - [s1_0000])
defining vert: rX_XX1X (s0_1010 - [s0_1000])
defining vert: rX_XX0X (s0_0101 - [s0_0111])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX0X (s1_0000 - [s1_0010])
defining vert: rX_XX0X (s0_1000 - [s0_1010])
Options:
  gggg [(s0_0111 - [s0_0101]), (s0_0101 - [s0_0111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0101 - [s0_0111])]
  gggg [(s1_0110 - [s1_0100]), (s0_0101 - [s0_0111])]
  gggg [(s1_0010 - [s1_0000]), (s0_0101 - [s0_0111])]
  gggg [(s0_1010 - [s0_1000]), (s0_0101 - [s0_0111])]
  gggg [(s0_0111 - [s0_0101]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s1_0110 - [s1_0100]), (s1_1101 - [s1_1111])]
  gggg [(s1_0010 - [s1_0000]), (s1_1101 - [s1_1111])]
  gggg [(s0_1010 - [s0_1000]), (s1_1101 - [s1_1111])]
  gggg [(s0_0111 - [s0_0101]), (s1_0100 - [s1_0110])]
  gggg [(s1_1111 - [s1_1101]), (s1_0100 - [s1_0110])]
  gggg [(s1_0110 - [s1_0100]), (s1_0100 - [s1_0110])]
  gggg [(s1_0010 - [s1_0000]), (s1_0100 - [s1_0110])]
  gggg [(s0_1010 - [s0_1000]), (s1_0100 - [s1_0110])]
  gggg [(s0_0111 - [s0_0101]), (s1_0000 - [s1_0010])]
  gggg [(s1_1111 - [s1_1101]), (s1_0000 - [s1_0010])]
  gggg [(s1_0110 - [s1_0100]), (s1_0000 - [s1_0010])]
  gggg [(s1_0010 - [s1_0000]), (s1_0000 - [s1_0010])]
  gggg [(s0_1010 - [s0_1000]), (s1_0000 - [s1_0010])]
  gggg [(s0_0111 - [s0_0101]), (s0_1000 - [s0_1010])]
  gggg [(s1_1111 - [s1_1101]), (s0_1000 - [s0_1010])]
  gggg [(s1_0110 - [s1_0100]), (s0_1000 - [s0_1010])]
  gggg [(s1_0010 - [s1_0000]), (s0_1000 - [s0_1010])]
  gggg [(s0_1010 - [s0_1000]), (s0_1000 - [s0_1010])]

Dom 0 Act 3 deleted unneeded squares: [s0_0101, s1_0110, s1_0010, s0_1010, s1_0100, s1_1010, s1_0000, s0_0111]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 24, priority(count): 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 900(2) 902(3) 903(2) 904(2) 
Priority 501
Step: 281 All domain states: SC[s0_0100, s0001_0010_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r1_0XX1, rX_XX1X, r0_11XX, rX_11X0, r1_1XX0, r0_00XX, r0_X1X0, r0_0XX0, rX_X0X1, r0_1XX1, r1_10XX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 10, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 501 Sample State s0_0100, far from anchor s1_0011 to define group rX_0Xxx) At Target

Need chosen:  0 N(Dom 0 Act 4 Pri 501 Sample State s0_0100, far from anchor s1_0011 to define group rX_0Xxx) At Target

Dom 0 s0_0100 -4-> s0_1100 [00_01/11/00/00]

Dom 0 Adding square s0_0100 -4-> s0_1100
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 26, priority(count): 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 501
Step: 282 All domain states: SC[s0_1100, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [rX_XXX0, rX_XX1X, rX_X0XX, rX_0XXX, r0_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 501 Sample State s0_0100, far from anchor s1_0011 to define group rX_0Xxx) PCS[PC[P[0:5]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 4 Pri 501 Sample State s0_0100, far from anchor s1_0011 to define group rX_0Xxx) PCS[PC[P[0:5]]]

Dom 0 s0_1100 -5-> s0_0100 [00_10/11/00/00]
1 step run.

Dom 0 s0_0100 -4-> s0_1100 [00_01/11/00/00]

  Square s0_0100 adding result 2 s0_1100, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 26, priority(count): 501(2) 502(1) 504(1) 600(6) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 501
Step: 283 All domain states: SC[s0_1100, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [rX_XXX0, rX_XX1X, rX_X0XX, rX_0XXX, r0_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_1XXX, r0_XXX1, r1_X11X, r0_XX0X, rX_X0X0, rX_X00X, r1_XX10, r0_X0XX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1xxX,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limiting using s0_1100) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0Xxx,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limiting using s1_0011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 4 Pri 501 Sample State s0_0100, far from anchor s1_0011 to define group rX_0Xxx) PCS[PC[P[0:5]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 4 Pri 501 Sample State s0_0100, far from anchor s1_0011 to define group rX_0Xxx) PCS[PC[P[0:5]]]

Dom 0 s0_1100 -5-> s0_0100 [00_10/11/00/00]
1 step run.

Dom 0 s0_0100 -4-> s0_1100 [00_01/11/00/00]

  Square s0_0100 adding result 3 s0_1100, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
Dom 0 Act 4 Group rX_1xxX set limited on, adj mask m0_1000
Dom 0 Act 4 Group rX_0Xxx set limited on, adj mask m0_1000
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 24, priority(count): 501(1) 502(1) 504(1) 600(5) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 501
Step: 284 All domain states: SC[s0_1100, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [rX_XXX0, rX_XX1X, rX_X0XX, rX_0XXX, r0_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 501 Sample State s0_0000, far from anchor s1_1101 to define group rx_Xx0x) PCS[PC[P[0:5,3]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 501 Sample State s0_0000, far from anchor s1_1101 to define group rx_Xx0x) PCS[PC[P[0:5,3]]]

Dom 0 s0_1100 -5-> s0_0100 [00_10/11/00/00]

Dom 0 s0_0100 -3-> s0_0000 [00_00/10/00/00]
2 steps run.

Dom 0 s0_0000 -3-> s0_0100 [00_00/01/00/00]

  Square s0_0000 adding result 2 s0_0100, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 22, priority(count): 501(1) 502(1) 504(1) 600(5) 601(2) 602(1) 603(1) 606(1) 900(2) 902(3) 903(2) 904(2) 
Priority 501
Step: 285 All domain states: SC[s0_0100, s0001_0010_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [rX_XXX0, rX_XX1X, rX_X0XX, rX_0XXX, r0_XXXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rx_Xx0x,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limiting using s1_1101)                 num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 3 Pri 501 Sample State s0_0000, far from anchor s1_1101 to define group rx_Xx0x) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 3 Pri 501 Sample State s0_0000, far from anchor s1_1101 to define group rx_Xx0x) PCS[PC[P[0:3]]]

Dom 0 s0_0100 -3-> s0_0000 [00_00/10/00/00]
1 step run.

Dom 0 s0_0000 -3-> s0_0100 [00_00/01/00/00]

  Square s0_0000 adding result 3 s0_0100, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
Dom 0 Act 3 Group rx_Xx0x set limited on, adj mask m0_0010
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 21, priority(count): 502(1) 504(1) 600(5) 601(2) 602(1) 603(1) 606(1) 900(2) 902(3) 903(2) 904(2) 
Priority 502
Step: 286 All domain states: SC[s0_0100, s0001_0010_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r1_1110,  pn: 1, pnc: t, [11_11/11/10/00],                 limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 502 Sample State s0001_0011_1011_1011, far from anchor s0001_0100_0111_1011 to define group r0001_0xXX_XX11_1011) PCS[PC[P[0:2]], PC[P[1:2]]]/3/3/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 502 Sample State s0001_0011_1011_1011, far from anchor s0001_0100_0111_1011 to define group r0001_0xXX_XX11_1011) PCS[PC[P[0:2]], PC[P[1:2]]]

All domain states: SC[s0_0100, s0001_0010_1111_1011]

Dom 0 s0_0100 -2-> s0_0110 [00_00/11/01/00]
---- 
Dom 1 s0001_0010_1111_1011 -2-> s0001_0011_1011_1011 [00/00/00/11_00/00/11/01_11/10/11/11_11/00/11/11]
2 steps run.

Dom 1 s0001_0011_1011_1011 -7-> s0001_0010_1011_1011 [00/00/00/11_00/00/11/10_11/00/11/11_11/00/11/11]

Dom 1 Adding square s0001_0011_1011_1011 -7-> s0001_0010_1011_1011
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 23, priority(count): 502(1) 504(1) 600(5) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 502
Step: 287 All domain states: SC[s0_0110, s0001_0010_1011_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 13, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011)                              num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_XX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limiting using s0001_0100_0111_1011)                              num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 1 Current State: s0001_0010_1011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 502 Sample State s0001_0011_1011_1011, far from anchor s0001_0100_0111_1011 to define group r0001_0xXX_XX11_1011) PCS[PC[P[1:7]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 502 Sample State s0001_0011_1011_1011, far from anchor s0001_0100_0111_1011 to define group r0001_0xXX_XX11_1011) PCS[PC[P[1:7]]]

Dom 1 s0001_0010_1011_1011 -7-> s0001_0011_1011_1011 [00/00/00/11_00/00/11/01_11/00/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0011_1011_1011 -7-> s0001_0010_1011_1011 [00/00/00/11_00/00/11/10_11/00/11/11_11/00/11/11]

  Square s0001_0011_1011_1011 adding result 2 s0001_0010_1011_1011, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 23, priority(count): 502(1) 504(1) 600(5) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 502
Step: 288 All domain states: SC[s0_0110, s0001_0010_1011_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 13, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011)                              num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0xXX_XX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limiting using s0001_0100_0111_1011)                              num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 1 Current State: s0001_0010_1011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 502 Sample State s0001_0011_1011_1011, far from anchor s0001_0100_0111_1011 to define group r0001_0xXX_XX11_1011) PCS[PC[P[1:4]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 502 Sample State s0001_0011_1011_1011, far from anchor s0001_0100_0111_1011 to define group r0001_0xXX_XX11_1011) PCS[PC[P[1:4]]]

Dom 1 s0001_0010_1011_1011 -4-> s0001_0011_1011_1011 [00/00/00/11_00/00/11/01_11/00/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0011_1011_1011 -7-> s0001_0010_1011_1011 [00/00/00/11_00/00/11/10_11/00/11/11_11/00/11/11]

  Square s0001_0011_1011_1011 adding result 3 s0001_0010_1011_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
Dom 1 Act 7 Group r0001_0xXX_XX11_1011 set limited on, adj mask m0000_0000_0010_0000
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 22, priority(count): 504(1) 600(5) 601(2) 602(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 504
Step: 289 All domain states: SC[s0_0110, s0001_0010_1011_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 13, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xx0_x101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/00_XX/11/00/11_11/00/11/11], limiting using s0001_0100_1101_1011)                              num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0Xxx_xX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limited using s0001_0100_0111_1011 adj mask m0000_0000_0010_0000) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 1 Current State: s0001_0010_1011_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 504 Sample anchor State s1_1110, to limit group r1_1110) PCS[PC[P[0:4,4]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 504 Sample anchor State s1_1110, to limit group r1_1110) PCS[PC[P[0:4,4]]]

All domain states: SC[s0_0110, s0001_0010_1011_1011]

Dom 0 s0_0110 -4-> s0_1110 [00_01/11/11/00]

  Square s0_0110 adding result 4 s0_1110, pn 1, pnc true

Dom 0 s0_1110 -4-> s1_1110 [01_11/11/11/00]

  Square s0_1110 adding result 4 s1_1110, pn 1, pnc true
2 steps run.

Dom 0 s1_1110 -1-> s1_1010 [11_11/10/11/00]

  Square s1_1110 adding result 2 s1_1010, pn changed from 1 to 2, pnc false

Dom 0 Act 1 square s1_1110 pn: 2 invalidates
             group r1_1110 pn: 1
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 22, priority(count): 250(1) 600(5) 601(2) 602(1) 603(1) 605(1) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 290 All domain states: SC[s1_1010, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 17, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_1010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1010 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 250 Sample State s1_1010 not in a group) At Target

Dom 0 s1_1010 -1-> s1_1110 [11_11/01/11/00]

Dom 0 Adding square s1_1010 -1-> s1_1110

Dom 0 Act 1 Adding Group G(r1_1010, pn: 1, pnc: f, [11_11/01/11/00])
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 23, priority(count): 250(1) 406(1) 600(5) 601(2) 602(1) 603(1) 605(1) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 291 All domain states: SC[s1_1110, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 18, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r1_1010,  pn: 1, pnc: f, [11_11/01/11/00])                                                         num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s1_1110 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 250 Sample State s1_1110 not in a group) At Target

Dom 0 s1_1110 -1-> s1_1100 [11_11/11/10/00]

  Square s1_1110 adding result 3 s1_1100, pn 2, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1XX (s1_1111 - [s1_1011])
defining vert: rX_X1XX (s0_0101 - [s0_0001])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 13, priority(count): 251(1) 300(1) 406(1) 600(5) 601(2) 602(1) 603(1) 605(1) 
Priority 251
Step: 292 All domain states: SC[s1_1100, s0001_0010_1011_1011] Status: Negative, in RC[rx_X10X, rXXXX_XX1x_x0XX_XXXX], -4 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 18, calculated structure regions: [rX_XX10, r0_XXX0, rX_0X00, rX_1XX0, rX_X1XX, rX_101X, rX_000X, r0_1X1X, r1_0X0X, rX_0X1X, rX_1X0X], defining regions: [rX_X1XX, rX_101X, rX_000X, rX_0X1X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limiting using s1_1111)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r1_1010,  pn: 1, pnc: f, [11_11/01/11/00])                                                         num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_1100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 251 Sample State s1_1110 not in a group) PCS[PC[P[0:2]]]/1/1/-4

Need chosen:  0 N(Dom 0 Act 1 Pri 251 Sample State s1_1110 not in a group) PCS[PC[P[0:2]]]

Dom 0 s1_1100 -2-> s1_1110 [11_11/11/01/00]
1 step run.

Dom 0 s1_1110 -1-> s1_1010 [11_11/10/11/00]

  Square s1_1110 adding result 4 s1_1010, pn 2, pnc changed from false to true

Dom 0 Act 1 Adding Group G(r1_1110, pn: 2, pnc: f, [11_11/11/10/00, 11_11/10/11/00])
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
Dom 0 Act 1 Group r1_1110 confirmed
Dom 0 Act 1 Group rx_x1x1 set limited on, adj mask m0_0101

Number needs: 23, priority(count): 406(1) 600(5) 601(2) 603(1) 605(1) 607(2) 900(2) 902(5) 903(2) 904(2) 
Priority 406
Step: 293 All domain states: SC[s1_1010, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 18, calculated structure regions: [rX_X1X1, rX_X010, rX_0X1X, rX_10X0, rX_0X00, rX_1X10, r0_XXX0, rX_000X, r0_X1XX, rX_X10X, rX_01XX, rX_101X, r1_0X0X, r0_1X1X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_1X10, rX_000X, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r1_1010,  pn: 1, pnc: f, [11_11/01/11/00])                                                         num Sqrs: 1 Sqrs in: 1 in1: 1),
             G(r1_1110,  pn: 2, pnc: t, [11_11/11/10/00, 11_11/10/11/00], limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_1010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 406 Get additional sample of state s1_1010 to confirm group r1_1010) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 406 Get additional sample of state s1_1010 to confirm group r1_1010) At Target

Dom 0 s1_1010 -1-> s1_1000 [11_11/00/10/00]

  Square s1_1010 adding result 2 s1_1000, pn changed from 1 to 2, pnc false

Dom 0 Act 1 square s1_1010 pn: 2 invalidates
             group r1_1010 pn: 1
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 23, priority(count): 251(1) 600(5) 601(2) 603(1) 605(1) 606(2) 900(2) 902(5) 903(2) 904(2) 
Priority 251
Step: 294 All domain states: SC[s1_1000, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 18, calculated structure regions: [rX_X1X1, rX_X010, rX_0X1X, rX_10X0, rX_0X00, rX_1X10, r0_XXX0, rX_000X, r0_X1XX, rX_X10X, rX_01XX, rX_101X, r1_0X0X, r0_1X1X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_1X10, rX_000X, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r1_1110,  pn: 2, pnc: t, [11_11/11/10/00, 11_11/10/11/00], limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 251 Sample State s1_1010 not in a group) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 251 Sample State s1_1010 not in a group) PCS[PC[P[0:2]]]

Dom 0 s1_1000 -2-> s1_1010 [11_11/00/01/00]

  Square s1_1000 adding result 4 s1_1010, pn 1, pnc true
1 step run.

Dom 0 s1_1010 -1-> s1_1110 [11_11/01/11/00]

  Square s1_1010 adding result 3 s1_1110, pn 2, pnc false
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0011, s0_0101])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0011, s0_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]

Number needs: 23, priority(count): 251(1) 600(5) 601(2) 603(1) 605(1) 606(2) 900(2) 902(5) 903(2) 904(2) 
Priority 251
Step: 295 All domain states: SC[s1_1110, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 18, calculated structure regions: [rX_X1X1, rX_X010, rX_0X1X, rX_10X0, rX_0X00, rX_1X10, r0_XXX0, rX_000X, r0_X1XX, rX_X10X, rX_01XX, rX_101X, r1_0X0X, r0_1X1X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_1X10, rX_000X, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_1011,  pn: 2, pnc: t, [XX_11/01/11/11, XX_11/00/10/11], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 2 in1: 2),
             G(r1_1110,  pn: 2, pnc: t, [11_11/11/10/00, 11_11/10/11/00], limiting using s1_1110)                 num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 251 Sample State s1_1010 not in a group) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 251 Sample State s1_1010 not in a group) PCS[PC[P[0:2]]]

Dom 0 s1_1110 -2-> s1_1010 [11_11/10/11/00]
1 step run.

Dom 0 s1_1010 -1-> s1_1000 [11_11/00/10/00]

  Square s1_1010 adding result 4 s1_1000, pn 2, pnc changed from false to true

Dom 0 Act 1 Adding Group G(r1_1x10, pn: 2, pnc: f, [11_11/Xx/11/00, 11_11/XX/10/00]) from [s1_1010, s1_1110]

Dom 0 Act 1 Adding Group G(rX_101x, pn: 2, pnc: f, [XX_11/01/11/XX, XX_11/00/10/XX]) from [s1_1010, s0_1011]
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
defining vert: rX_XX1X (s1_0110 - [s1_0100])
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
Options:
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
Dom 0 Act 1 Group r1_1x10 confirmed
Dom 0 Act 1 Group rX_101x confirmed

Number needs: 21, priority(count): 506(1) 600(5) 601(2) 603(1) 605(1) 900(2) 902(5) 903(2) 904(2) 
Priority 506
Step: 296 All domain states: SC[s1_1000, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 18, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XXX0, rX_000X, r0_X1XX, rX_X10X, rX_01XX, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_1x10,  pn: 2, pnc: t, [11_11/Xx/11/00, 11_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 3 in1: 2))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 506 Sample State s0_1010, far from anchor s1_1011 to define group rX_101x) PCS[PC[P[0:4,2]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 506 Sample State s0_1010, far from anchor s1_1011 to define group rX_101x) PCS[PC[P[0:4,2]]]

Dom 0 s1_1000 -4-> s0_1000 [10_11/00/00/00]

Dom 0 s0_1000 -2-> s0_1010 [00_11/00/01/00]
2 steps run.

Dom 0 s0_1010 -1-> s0_1110 [00_11/01/11/00]

Dom 0 Adding square s0_1010 -1-> s0_1110
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
defining vert: rX_0XXX (s0_0000 - [s0_1000])
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
defining vert: rX_0XXX (s1_0111 - [s1_1111])
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
Options:
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 22, priority(count): 250(1) 506(1) 600(5) 601(2) 603(1) 605(1) 900(2) 902(5) 903(2) 904(2) 
Priority 250
Step: 297 All domain states: SC[s0_1110, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 19, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XXX0, rX_000X, r0_X1XX, rX_X10X, rX_01XX, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_1x10,  pn: 2, pnc: t, [11_11/Xx/11/00, 11_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 3))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 250 Sample State s0_1110 not in a group) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 250 Sample State s0_1110 not in a group) At Target

Dom 0 s0_1110 -1-> s0_1010 [00_11/10/11/00]

Dom 0 Adding square s0_1110 -1-> s0_1010

Dom 0 Act 1 Adding Group G(r0_1x10, pn: 1, pnc: f, [00_11/Xx/11/00]) from [s0_1010, s0_1110]
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 24, priority(count): 206(1) 407(2) 506(1) 600(5) 601(2) 603(1) 605(1) 900(2) 902(5) 903(2) 904(2) 
Priority 206
Step: 298 All domain states: SC[s0_1010, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 20, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XXX0, rX_000X, r0_X1XX, rX_X10X, rX_01XX, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_1x10,  pn: 2, pnc: t, [11_11/Xx/11/00, 11_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(r0_1x10,  pn: 1, pnc: f, [00_11/Xx/11/00])                                                         num Sqrs: 2 Sqrs in: 2 in1: 1))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 206 Sample Region r0_1010 intersection of rX_101x [00_11/01/11/00, 00_11/00/10/00] and r0_1x10 [00_11/01/11/00]) At Target

Need chosen:  0 N(Dom 0 Act 1 Pri 206 Sample Region r0_1010 intersection of rX_101x [00_11/01/11/00, 00_11/00/10/00] and r0_1x10 [00_11/01/11/00]) At Target

Dom 0 s0_1010 -1-> s0_1000 [00_11/00/10/00]

  Square s0_1010 adding result 2 s0_1000, pn changed from 1 to 2, pnc false

Dom 0 Act 1 square s0_1010 pn: 2 invalidates
             group r0_1x10 pn: 1

Dom 0 Act 1 Adding Group G(r0_1110, pn: 1, pnc: f, [00_11/10/11/00])
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 22, priority(count): 407(1) 506(1) 600(5) 601(2) 603(1) 605(1) 900(2) 902(5) 903(2) 904(2) 
Priority 407
Step: 299 All domain states: SC[s0_1000, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 20, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XXX0, rX_000X, r0_X1XX, rX_X10X, rX_01XX, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_1x10,  pn: 2, pnc: t, [11_11/Xx/11/00, 11_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(r0_1110,  pn: 1, pnc: f, [00_11/10/11/00])                                                         num Sqrs: 1 Sqrs in: 1 in1: 1))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 407 Get additional sample of state s0_1110 to confirm group r0_1110) PCS[PC[P[0:2]], PC[P[0:1]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 407 Get additional sample of state s0_1110 to confirm group r0_1110) PCS[PC[P[0:2]], PC[P[0:1]]]

Dom 0 s0_1000 -2-> s0_1010 [00_11/00/01/00]
---- 
Dom 0 s0_1010 -1-> s0_1110 [00_11/01/11/00]

  Square s0_1010 adding result 3 s0_1110, pn 2, pnc false
2 steps run.

Dom 0 s0_1110 -1-> s0_1100 [00_11/11/10/00]

  Square s0_1110 adding result 2 s0_1100, pn changed from 1 to 2, pnc false

Dom 0 Act 1 square s0_1110 pn: 2 invalidates
             group r0_1110 pn: 1
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 12, priority(count): 251(1) 300(1) 506(1) 600(5) 601(2) 603(1) 605(1) 
Priority 251
Step: 300 All domain states: SC[s0_1100, s0001_0010_1011_1011] Status: Negative, in RC[rx_X10X, rXXXX_XX1x_x0XX_XXXX], -4 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 20, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XXX0, rX_000X, r0_X1XX, rX_X10X, rX_01XX, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_1x10,  pn: 2, pnc: t, [11_11/Xx/11/00, 11_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 3))
  ACT(ID: 2, number squares: 11, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1XX, rX_00XX, r1_X0X1, r1_1XX1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 251 Sample State s0_1110 not in a group) PCS[PC[P[0:2]]]/1/1/-4

Need chosen:  0 N(Dom 0 Act 1 Pri 251 Sample State s0_1110 not in a group) PCS[PC[P[0:2]]]

Dom 0 s0_1100 -2-> s0_1110 [00_11/11/01/00]

  Square s0_1100 adding result 3 s0_1110, pn 1, pnc changed from false to true
1 step run.

Dom 0 s0_1110 -1-> s0_1010 [00_11/10/11/00]

  Square s0_1110 adding result 3 s0_1010, pn 2, pnc false
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 28, priority(count): 53(6) 251(1) 506(1) 600(5) 601(2) 603(1) 605(1) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 301 All domain states: SC[s0_1010, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 20, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XXX0, rX_000X, r0_X1XX, rX_X10X, rX_01XX, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_1x10,  pn: 2, pnc: t, [11_11/Xx/11/00, 11_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 3))
  ACT(ID: 2, number squares: 12, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1X1, r1_1XX1, rX_00XX, r1_X0X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 53 Get sample in r0_X110 to find closer incompatible pair within r0_x1XX) PCS[PC[P[0:2]]]/1/1/+0
 1 N(Dom 0 Act 2 Pri 53 Get sample in r0_111X to find closer incompatible pair within r0_x1XX) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  1 N(Dom 0 Act 2 Pri 53 Get sample in r0_111X to find closer incompatible pair within r0_x1XX) PCS[PC[P[0:2]]]

Dom 0 s0_1010 -2-> s0_1110 [00_11/01/11/00]
1 step run.

Dom 0 s0_1110 -2-> s0_1010 [00_11/10/11/00]

Dom 0 Adding square s0_1110 -2-> s0_1010
Need satisfied
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 23, priority(count): 53(1) 251(1) 506(1) 600(5) 601(2) 603(1) 605(1) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 302 All domain states: SC[s0_1010, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 20, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XXX0, rX_000X, r0_X1XX, rX_X10X, rX_01XX, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_1x10,  pn: 2, pnc: t, [11_11/Xx/11/00, 11_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 3))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1X1, r1_1XX1, rX_00XX, r1_X0X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 53 Get additional sample of state s0_1110 to find closer incompatible pair within r0_x1XX) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 53 Get additional sample of state s0_1110 to find closer incompatible pair within r0_x1XX) PCS[PC[P[0:2]]]

Dom 0 s0_1010 -2-> s0_1110 [00_11/01/11/00]
1 step run.

Dom 0 s0_1110 -2-> s0_1010 [00_11/10/11/00]

  Square s0_1110 adding result 2 s0_1010, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 23, priority(count): 53(1) 251(1) 506(1) 600(5) 601(2) 603(1) 605(1) 900(2) 902(5) 903(2) 904(2) 
Priority 53
Step: 303 All domain states: SC[s0_1010, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 20, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XXX0, rX_000X, r0_X1XX, rX_X10X, rX_01XX, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_1x10,  pn: 2, pnc: t, [11_11/Xx/11/00, 11_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 3))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r0_XXX0, rX_XX0X, r0_0XXX, rX_11XX, r0_X1X1, r1_1XX1, rX_00XX, r1_X0X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 2 Pri 53 Get additional sample of state s0_1110 to find closer incompatible pair within r0_x1XX) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 2 Pri 53 Get additional sample of state s0_1110 to find closer incompatible pair within r0_x1XX) PCS[PC[P[0:2]]]

Dom 0 s0_1010 -2-> s0_1110 [00_11/01/11/00]
1 step run.

Dom 0 s0_1110 -2-> s0_1010 [00_11/10/11/00]

  Square s0_1110 adding result 3 s0_1010, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 22, priority(count): 251(1) 506(1) 600(5) 601(2) 603(1) 605(1) 900(2) 902(5) 903(2) 904(2) 
Priority 251
Step: 304 All domain states: SC[s0_1010, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 20, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XXX0, rX_000X, r0_X1XX, rX_X10X, rX_01XX, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(r1_1x10,  pn: 2, pnc: t, [11_11/Xx/11/00, 11_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 2 in1: 1),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 3))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 251 Sample State s0_1110 not in a group) PCS[PC[P[0:2]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 251 Sample State s0_1110 not in a group) PCS[PC[P[0:2]]]

Dom 0 s0_1010 -2-> s0_1110 [00_11/01/11/00]
1 step run.

Dom 0 s0_1110 -1-> s0_1100 [00_11/11/10/00]

  Square s0_1110 adding result 4 s0_1100, pn 2, pnc changed from false to true

Dom 0 Act 1 Adding Group G(rX_1x10, pn: 2, pnc: f, [XX_11/Xx/11/00, XX_11/XX/10/00]) from [s1_1010, s0_1110]

Dom 0 Act 1 Adding Group G(r0_1x1X, pn: 2, pnc: f, [00_11/XX/10/XX, 00_11/Xx/11/XX]) from [s0_1011, s0_1110]
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
Dom 0 Act 1 Group rX_1x10 confirmed
Dom 0 Act 1 Group r0_1x1X confirmed
anchor s0_0011 in group rx_0x1X removed, rate 1 below 2
anchor s0_1001 in group rx_1x0X removed, rate 1 below 2

Number needs: 16, priority(count): 52(2) 202(1) 300(1) 500(1) 501(1) 505(1) 506(1) 600(5) 601(2) 603(1) 
Priority 52
Step: 305 All domain states: SC[s0_1100, s0001_0010_1011_1011] Status: Negative, in RC[rx_X10X, rXXXX_XX1x_x0XX_XXXX], -4 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 20, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XXX0, rX_000X, r0_11XX, rX_X10X, rX_01XX, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s1_0011)                 num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limiting using s1_1001)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(rX_1x10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1x1X,  pn: 2, pnc: t, [00_11/XX/10/XX, 00_11/Xx/11/XX])                                         num Sqrs: 2 Sqrs in: 3 in1: 0))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get sample in r0_1111 to find closer incompatible pair within r0_X11x) PCS[PC[P[0:1]], PC[P[0:2]]]/2/2/-4
 1 N(Dom 0 Act 1 Pri 52 Get sample in r0_0110 to find closer incompatible pair within r0_X11x) PCS[PC[P[0:5]], PC[P[0:2]]]/2/2/-4

Need chosen:  1 N(Dom 0 Act 1 Pri 52 Get sample in r0_0110 to find closer incompatible pair within r0_X11x) PCS[PC[P[0:5]], PC[P[0:2]]]

Dom 0 s0_1100 -5-> s0_0100 [00_10/11/00/00]
---- 
Dom 0 s0_0100 -2-> s0_0110 [00_00/11/01/00]
2 steps run.

Dom 0 s0_0110 -1-> s0_0111 [00_00/11/11/01]

Dom 0 Adding square s0_0110 -1-> s0_0111
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 25, priority(count): 52(1) 202(1) 500(1) 501(1) 505(1) 506(1) 600(5) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 306 All domain states: SC[s0_0111, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 21, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XXX0, rX_000X, r0_11XX, rX_X10X, rX_01XX, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s1_0011)                 num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limiting using s1_1001)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(rX_1x10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1x1X,  pn: 2, pnc: t, [00_11/XX/10/XX, 00_11/Xx/11/XX])                                         num Sqrs: 2 Sqrs in: 3 in1: 0))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0110 to find closer incompatible pair within r0_X11x) PCS[PC[P[0:1]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0110 to find closer incompatible pair within r0_X11x) PCS[PC[P[0:1]]]

Dom 0 s0_0111 -1-> s0_0110 [00_00/11/11/10]

  Square s0_0111 adding result 4 s0_0110, pn 1, pnc true
1 step run.

Dom 0 s0_0110 -1-> s0_0111 [00_00/11/11/01]

  Square s0_0110 adding result 2 s0_0111, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 25, priority(count): 52(1) 202(1) 500(1) 501(1) 505(1) 506(1) 600(5) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 307 All domain states: SC[s0_0111, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 21, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XXX0, rX_000X, r0_11XX, rX_X10X, rX_01XX, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rx_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limiting using s1_0011)                 num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limiting using s1_1001)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(rX_1x10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1x1X,  pn: 2, pnc: t, [00_11/XX/10/XX, 00_11/Xx/11/XX])                                         num Sqrs: 2 Sqrs in: 3 in1: 0))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0110 to find closer incompatible pair within r0_X11x) PCS[PC[P[0:1]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0110 to find closer incompatible pair within r0_X11x) PCS[PC[P[0:1]]]

Dom 0 s0_0111 -1-> s0_0110 [00_00/11/11/10]
1 step run.

Dom 0 s0_0110 -1-> s0_0111 [00_00/11/11/01]

  Square s0_0110 adding result 3 s0_0111, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
Dom 0 Act 1 Group rx_0x1X set limited on, adj mask m0_1010

Number needs: 23, priority(count): 202(1) 501(1) 505(1) 506(1) 600(5) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 202
Step: 308 All domain states: SC[s0_0111, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 21, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XX00, r0_X0X0, r0_0XX0, r0_1XX0, rX_000X, r0_11XX, rX_01XX, rX_X10X, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limiting using s1_1001)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(rX_1x10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(r0_1x1X,  pn: 2, pnc: t, [00_11/XX/10/XX, 00_11/Xx/11/XX])                                         num Sqrs: 2 Sqrs in: 3 in1: 0))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 202 Sample Region r0_1111 intersection of rx_x1x1 [00_11/11/11/10] and r0_1x1X [00_11/11/10/11, 00_11/10/11/11]) PCS[PC[P[0:4]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 202 Sample Region r0_1111 intersection of rx_x1x1 [00_11/11/11/10] and r0_1x1X [00_11/11/10/11, 00_11/10/11/11]) PCS[PC[P[0:4]]]

Dom 0 s0_0111 -4-> s0_1111 [00_01/11/11/11]
1 step run.

Dom 0 s0_1111 -1-> s0_1110 [00_11/11/11/10]

Dom 0 Adding square s0_1111 -1-> s0_1110

Dom 0 Act 1 square s0_1111 [00_11/11/11/10] invalidates
             group r0_1x1X [00_11/XX/10/XX, 00_11/Xx/11/XX]
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 22, priority(count): 501(1) 505(1) 506(1) 600(5) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 501
Step: 309 All domain states: SC[s0_1110, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 22, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XX00, r0_X0X0, r0_0XX0, r0_1XX0, rX_000X, r0_11XX, rX_01XX, rX_X10X, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limiting using s1_1001)                 num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 2 in1: 0),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1x10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 501 Sample State s0_1100, far from anchor s1_1001 to define group rx_1x0X) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 501 Sample State s0_1100, far from anchor s1_1001 to define group rx_1x0X) PCS[PC[P[0:3]]]

Dom 0 s0_1110 -3-> s0_1100 [00_11/11/10/00]

  Square s0_1110 adding result 2 s0_1100, pn 1, pnc false
1 step run.

Dom 0 s0_1100 -1-> s0_1101 [00_11/11/00/01]

Dom 0 Adding square s0_1100 -1-> s0_1101
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 12, priority(count): 300(1) 501(1) 505(1) 506(1) 600(5) 601(2) 603(1) 
Priority 300
Step: 310 All domain states: SC[s0_1101, s0001_0010_1011_1011] Status: Negative, in RC[rx_X10X, rXXXX_XX1x_x0XX_XXXX], -4 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XX00, r0_X0X0, r0_0XX0, r0_1XX0, rX_000X, r0_11XX, rX_01XX, rX_X10X, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limiting using s1_1001)                 num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1x10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Pri 300 Exit Select Regions to RC[rX_X0XX, rXXXX_XXXX_1XXX_XXXX]) PCS[PC[P[0:3]]]/1/1/-4

Need chosen:  0 N(Pri 300 Exit Select Regions to RC[rX_X0XX, rXXXX_XXXX_1XXX_XXXX]) PCS[PC[P[0:3]]]

Dom 0 s0_1101 -3-> s0_1001 [00_11/10/00/11]
1 step run.
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 22, priority(count): 501(1) 505(1) 506(1) 600(5) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 501
Step: 311 All domain states: SC[s0_1001, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XX00, r0_X0X0, r0_0XX0, r0_1XX0, rX_000X, r0_11XX, rX_01XX, rX_X10X, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limiting using s1_1001)                 num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1x10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 501 Sample State s0_1100, far from anchor s1_1001 to define group rx_1x0X) PCS[PC[P[0:1]], PC[P[0:3]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 501 Sample State s0_1100, far from anchor s1_1001 to define group rx_1x0X) PCS[PC[P[0:1]], PC[P[0:3]]]

Dom 0 s0_1001 -1-> s0_1000 [00_11/00/00/10]
---- 
Dom 0 s0_1000 -3-> s0_1100 [00_11/01/00/00]

  Square s0_1000 adding result 4 s0_1100, pn 1, pnc true
2 steps run.

Dom 0 s0_1100 -1-> s0_1101 [00_11/11/00/01]

  Square s0_1100 adding result 2 s0_1101, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 12, priority(count): 300(1) 501(1) 505(1) 506(1) 600(5) 601(2) 603(1) 
Priority 300
Step: 312 All domain states: SC[s0_1101, s0001_0010_1011_1011] Status: Negative, in RC[rx_X10X, rXXXX_XX1x_x0XX_XXXX], -4 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XX00, r0_X0X0, r0_0XX0, r0_1XX0, rX_000X, r0_11XX, rX_01XX, rX_X10X, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limiting using s1_1001)                 num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1x10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Pri 300 Exit Select Regions to RC[rX_X0X1, rXXXX_XXXX_XXXX_XXXX]) PCS[PC[P[0:3]]]/1/1/-4

Need chosen:  0 N(Pri 300 Exit Select Regions to RC[rX_X0X1, rXXXX_XXXX_XXXX_XXXX]) PCS[PC[P[0:3]]]

Dom 0 s0_1101 -3-> s0_1001 [00_11/10/00/11]
1 step run.
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 22, priority(count): 501(1) 505(1) 506(1) 600(5) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 501
Step: 313 All domain states: SC[s0_1001, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_X1X1, rX_0X1X, rX_0X00, r0_XX00, r0_X0X0, r0_0XX0, r0_1XX0, rX_000X, r0_11XX, rX_01XX, rX_X10X, rX_1X10, rX_101X, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_X1X1, rX_0X1X, rX_000X, rX_1X10, rX_101X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limiting using s1_1001)                 num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1x10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 501 Sample State s0_1100, far from anchor s1_1001 to define group rx_1x0X) PCS[PC[P[0:1]], PC[P[0:3]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 501 Sample State s0_1100, far from anchor s1_1001 to define group rx_1x0X) PCS[PC[P[0:1]], PC[P[0:3]]]

Dom 0 s0_1001 -1-> s0_1000 [00_11/00/00/10]
---- 
Dom 0 s0_1000 -3-> s0_1100 [00_11/01/00/00]
2 steps run.

Dom 0 s0_1100 -1-> s0_1101 [00_11/11/00/01]

  Square s0_1100 adding result 3 s0_1101, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_0110, s1_1111, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
Dom 0 Act 1 Group rx_1x0X set limited on, adj mask m0_1010

Number needs: 11, priority(count): 300(1) 505(1) 506(1) 600(5) 601(2) 603(1) 
Priority 300
Step: 314 All domain states: SC[s0_1101, s0001_0010_1011_1011] Status: Negative, in RC[rx_X10X, rXXXX_XX1x_x0XX_XXXX], -4 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_000X, rX_0X1X, r0_XX00, rX_0X00, rX_1X10, rX_X10X, r0_X0X0, r0_0XX0, rX_101X, rX_X1X1, rX_01XX, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_000X, rX_0X1X, rX_1X10, rX_101X, rX_X1X1, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1x10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Pri 300 Exit Select Regions to RC[rX_X0XX, rXXXX_XXX0_XXXX_XXXX]) PCS[PC[P[0:3]]]/1/1/-4

Need chosen:  0 N(Pri 300 Exit Select Regions to RC[rX_X0XX, rXXXX_XXX0_XXXX_XXXX]) PCS[PC[P[0:3]]]

Dom 0 s0_1101 -3-> s0_1001 [00_11/10/00/11]
1 step run.
Need satisfied
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_0110, s1_1111, s1_1100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_1111 - [s1_1011, s1_1110]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 21, priority(count): 505(1) 506(1) 600(5) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 505
Step: 315 All domain states: SC[s0_1001, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_000X, rX_0X1X, r0_XX00, rX_0X00, rX_1X10, rX_X10X, r0_X0X0, r0_0XX0, rX_101X, rX_X1X1, rX_01XX, r0_1X1X, r1_0X0X, rX_1X0X], defining regions: [rX_000X, rX_0X1X, rX_1X10, rX_101X, rX_X1X1, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101x,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limiting using s1_1011)                 num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1x10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limiting using s1_1110)                 num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 505 Sample State s0_1010, far from anchor s1_1011 to define group rX_101x) PCS[PC[P[0:1,2]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 505 Sample State s0_1010, far from anchor s1_1011 to define group rX_101x) PCS[PC[P[0:1,2]]]

Dom 0 s0_1001 -1-> s0_1000 [00_11/00/00/10]

Dom 0 s0_1000 -2-> s0_1010 [00_11/00/01/00]
2 steps run.

Dom 0 s0_1010 -1-> s0_1000 [00_11/00/10/00]

  Square s0_1010 adding result 4 s0_1000, pn 2, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
Options:
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
Dom 0 Act 1 Group rX_101x set limited on, adj mask m0_1110
Dom 0 Act 1 Group rX_1x10 set limited on, adj mask m0_1011

Number needs: 19, priority(count): 600(5) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 600
Step: 316 All domain states: SC[s0_1000, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s0_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s1_1110, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:4,2]], PC[P[0:1]]]/3/3/+0
 1 N(Dom 0 Act 6 Pri 600 Sample State s1_1101, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:1,4]], PC[P[0:3]]]/3/3/+0
 2 N(Dom 0 Act 6 Pri 600 Sample State s1_1011, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:1,4,2]]]/3/3/+0
 3 N(Dom 0 Act 6 Pri 600 Sample State s0_1111, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:1,2]], PC[P[0:2]]]/3/3/+0

Need chosen:  3 N(Dom 0 Act 6 Pri 600 Sample State s0_1111, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:1,2]], PC[P[0:2]]]

Dom 0 s0_1000 -1-> s0_1001 [00_11/00/00/01]

Dom 0 s0_1001 -2-> s0_1011 [00_11/00/01/11]
---- 
Dom 0 s0_1011 -2-> s0_1111 [00_11/01/11/11]

  Square s0_1011 adding result 4 s0_1111, pn 1, pnc true
3 steps run.

Dom 0 s0_1111 -6-> s0_1111 [00_11/11/11/11]

Dom 0 Adding square s0_1111 -6-> s0_1111
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s0_1110 - [s0_0110])
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 19, priority(count): 600(5) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 600
Step: 317 All domain states: SC[s0_1111, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 7
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 7 in1: 7))

Dom: 0 Current State: s0_1111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s0_1111, adj to s1_1111 to limit group rX_XXXX) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 600 Sample State s0_1111, adj to s1_1111 to limit group rX_XXXX) At Target

Dom 0 s0_1111 -6-> s0_1111 [00_11/11/11/11]

  Square s0_1111 adding result 2 s0_1111, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
Options:
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 19, priority(count): 600(5) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 600
Step: 318 All domain states: SC[s0_1111, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 7
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 7 in1: 7))

Dom: 0 Current State: s0_1111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s0_1111, adj to s1_1111 to limit group rX_XXXX) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 600 Sample State s0_1111, adj to s1_1111 to limit group rX_XXXX) At Target

Dom 0 s0_1111 -6-> s0_1111 [00_11/11/11/11]

  Square s0_1111 adding result 3 s0_1111, pn 1, pnc changed from false to true
Dom 0 Act 6 skipped adding group rx_1111, a superset exists in [rX_XXXX]
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 18, priority(count): 600(4) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 600
Step: 319 All domain states: SC[s0_1111, s0001_0010_1011_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 7
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s0_1101) num Sqrs: 2 Sqrs in: 7 in1: 7))

Dom: 0 Current State: s0_1111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s0_1100, adj to s0_1101 to limit group rX_XXXX) PCS[PC[P[0:1]], PC[P[0:3]]]/2/2/+0
 1 N(Dom 0 Act 6 Pri 600 Sample State s0_1001, adj to s0_1101 to limit group rX_XXXX) PCS[PC[P[0:2]], PC[P[0:1]]]/2/2/+0
 2 N(Dom 0 Act 6 Pri 600 Sample State s0_0101, adj to s0_1101 to limit group rX_XXXX) PCS[PC[P[0:5]], PC[P[0:3]]]/2/2/+0
 3 N(Dom 0 Act 6 Pri 600 Sample State s1_1101, adj to s0_1101 to limit group rX_XXXX) PCS[PC[P[0:4]], PC[P[0:3]]]/2/2/+0

Need chosen:  2 N(Dom 0 Act 6 Pri 600 Sample State s0_0101, adj to s0_1101 to limit group rX_XXXX) PCS[PC[P[0:5]], PC[P[0:3]]]

Dom 0 s0_1111 -5-> s0_0111 [00_10/11/11/11]
---- 
Dom 0 s0_0111 -3-> s0_0101 [00_00/11/10/11]

  Square s0_0111 adding result 4 s0_0101, pn 1, pnc true
2 steps run.

Dom 0 s0_0101 -6-> s0_0101 [00_00/11/00/11]

Dom 0 Adding square s0_0101 -6-> s0_0101
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
Options:
defining vert: rX_1XXX (s1_1111 - [s1_0111])
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 8, priority(count): 300(1) 600(4) 601(2) 603(1) 
Priority 300
Step: 320 All domain states: SC[s0_0101, s0001_0010_1011_1011] Status: Conflicted, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 in RC[rx_X10X, rXXXX_XX1x_x0XX_XXXX], -4 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 8
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 8 in1: 8))

Dom: 0 Current State: s0_0101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Pri 300 Exit Select Regions to RC[rX_XXXX, rXXXX_XXX0_X1XX_XXXX]) PCS[PC[P[1:2,7]]]/1/3/-4

Need chosen:  0 N(Pri 300 Exit Select Regions to RC[rX_XXXX, rXXXX_XXX0_X1XX_XXXX]) PCS[PC[P[1:2,7]]]

Dom 1 s0001_0010_1011_1011 -2-> s0001_0011_1111_1011 [00/00/00/11_00/00/11/01_11/01/11/11_11/00/11/11]

Dom 1 s0001_0011_1111_1011 -7-> s0001_0010_1111_1011 [00/00/00/11_00/00/11/10_11/11/11/11_11/00/11/11]

  Square s0001_0011_1111_1011 adding result 4 s0001_0010_1111_1011, pn 1, pnc true
2 steps run.
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 17, priority(count): 600(4) 601(2) 603(1) 900(2) 902(4) 903(2) 904(2) 
Priority 600
Step: 321 All domain states: SC[s0_0101, s0001_0010_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 8
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 8 in1: 8))

Dom: 0 Current State: s0_0101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s1_1101, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:5,4]]]/2/2/+0
 1 N(Dom 0 Act 6 Pri 600 Sample State s1_0111, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:2,5]]]/2/2/+0

Need chosen:  1 N(Dom 0 Act 6 Pri 600 Sample State s1_0111, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:2,5]]]

Dom 0 s0_0101 -2-> s0_0111 [00_00/11/01/11]

Dom 0 s0_0111 -5-> s1_0111 [01_00/11/11/11]
2 steps run.

Dom 0 s1_0111 -6-> s1_0111 [11_00/11/11/11]

Dom 0 Adding square s1_0111 -6-> s1_0111
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 18, priority(count): 600(4) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 600
Step: 322 All domain states: SC[s1_0111, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s1_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s1_0111, adj to s1_1111 to limit group rX_XXXX) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 600 Sample State s1_0111, adj to s1_1111 to limit group rX_XXXX) At Target

Dom 0 s1_0111 -6-> s1_0111 [11_00/11/11/11]

  Square s1_0111 adding result 2 s1_0111, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 18, priority(count): 600(4) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 600
Step: 323 All domain states: SC[s1_0111, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s1_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s1_0111, adj to s1_1111 to limit group rX_XXXX) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 600 Sample State s1_0111, adj to s1_1111 to limit group rX_XXXX) At Target

Dom 0 s1_0111 -6-> s1_0111 [11_00/11/11/11]

  Square s1_0111 adding result 3 s1_0111, pn 1, pnc changed from false to true
Dom 0 Act 6 skipped adding group r1_x111, a superset exists in [rX_XXXX]
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
defining vert: rX_1XXX (s0_1100 - [s0_0100])
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1011 - [s1_0011])
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 15, priority(count): 500(1) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 324 All domain states: SC[s1_0111, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s0_0101) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s1_0111 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 500 Sample anchor State s0_0101, to limit group rX_XXXX) PCS[PC[P[0:5,3]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 6 Pri 500 Sample anchor State s0_0101, to limit group rX_XXXX) PCS[PC[P[0:5,3]]]

Dom 0 s1_0111 -5-> s0_0111 [10_00/11/11/11]

  Square s1_0111 adding result 4 s0_0111, pn 1, pnc true

Dom 0 s0_0111 -3-> s0_0101 [00_00/11/10/11]
2 steps run.

Dom 0 s0_0101 -6-> s0_0101 [00_00/11/00/11]

  Square s0_0101 adding result 2 s0_0101, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 14, priority(count): 500(1) 601(2) 603(1) 900(2) 902(4) 903(2) 904(2) 
Priority 500
Step: 325 All domain states: SC[s0_0101, s0001_0010_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s0_0101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 500 Sample anchor State s0_0101, to limit group rX_XXXX) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 500 Sample anchor State s0_0101, to limit group rX_XXXX) At Target

Dom 0 s0_0101 -6-> s0_0101 [00_00/11/00/11]

  Square s0_0101 adding result 3 s0_0101, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
Options:
defining vert: rX_0XXX (s1_0011 - [s1_1011])
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
Options:
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 16, priority(count): 600(3) 601(2) 603(1) 900(2) 902(4) 903(2) 904(2) 
Priority 600
Step: 326 All domain states: SC[s0_0101, s0001_0010_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s0_0101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s1_1101, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:5,4]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 6 Pri 600 Sample State s1_1101, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:5,4]]]

Dom 0 s0_0101 -5-> s1_0101 [01_00/11/00/11]

Dom 0 s1_0101 -4-> s1_1101 [11_01/11/00/11]
2 steps run.

Dom 0 s1_1101 -6-> s1_1101 [11_11/11/00/11]

Dom 0 Adding square s1_1101 -6-> s1_1101
Need satisfied

Dom 0 Act 6 deleted unneeded squares: [s0_0101, s0_1101, s1_0010, s1_1100, s0_0111]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 17, priority(count): 600(3) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 600
Step: 327 All domain states: SC[s1_1101, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s1_1101, adj to s1_1111 to limit group rX_XXXX) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 600 Sample State s1_1101, adj to s1_1111 to limit group rX_XXXX) At Target

Dom 0 s1_1101 -6-> s1_1101 [11_11/11/00/11]

  Square s1_1101 adding result 2 s1_1101, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 17, priority(count): 600(3) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 600
Step: 328 All domain states: SC[s1_1101, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s1_1101, adj to s1_1111 to limit group rX_XXXX) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 600 Sample State s1_1101, adj to s1_1111 to limit group rX_XXXX) At Target

Dom 0 s1_1101 -6-> s1_1101 [11_11/11/00/11]

  Square s1_1101 adding result 3 s1_1101, pn 1, pnc changed from false to true
Dom 0 Act 6 skipped adding group r1_11x1, a superset exists in [rX_XXXX]
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 16, priority(count): 600(2) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 600
Step: 329 All domain states: SC[s1_1101, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 5
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 0 Current State: s1_1101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s1_1110, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:2,1]]]/2/2/+0
 1 N(Dom 0 Act 6 Pri 600 Sample State s1_1011, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:3,2]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 6 Pri 600 Sample State s1_1110, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:2,1]]]

Dom 0 s1_1101 -2-> s1_1111 [11_11/11/01/11]

  Square s1_1101 adding result 4 s1_1111, pn 1, pnc true

Dom 0 s1_1111 -1-> s1_1110 [11_11/11/11/10]

  Square s1_1111 adding result 4 s1_1110, pn 1, pnc true
2 steps run.

Dom 0 s1_1110 -6-> s1_1110 [11_11/11/11/00]

Dom 0 Adding square s1_1110 -6-> s1_1110
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 16, priority(count): 600(2) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 600
Step: 330 All domain states: SC[s1_1110, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s1_1110, adj to s1_1111 to limit group rX_XXXX) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 600 Sample State s1_1110, adj to s1_1111 to limit group rX_XXXX) At Target

Dom 0 s1_1110 -6-> s1_1110 [11_11/11/11/00]

  Square s1_1110 adding result 2 s1_1110, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 16, priority(count): 600(2) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 600
Step: 331 All domain states: SC[s1_1110, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 6
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 6 in1: 6))

Dom: 0 Current State: s1_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s1_1110, adj to s1_1111 to limit group rX_XXXX) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 600 Sample State s1_1110, adj to s1_1111 to limit group rX_XXXX) At Target

Dom 0 s1_1110 -6-> s1_1110 [11_11/11/11/00]

  Square s1_1110 adding result 3 s1_1110, pn 1, pnc changed from false to true
Dom 0 Act 6 skipped adding group r1_111x, a superset exists in [rX_XXXX]
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 15, priority(count): 600(1) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 600
Step: 332 All domain states: SC[s1_1110, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 7
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 7 in1: 7))

Dom: 0 Current State: s1_1110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s1_1011, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:5,1,2,4]]]/2/4/+0

Need chosen:  0 N(Dom 0 Act 6 Pri 600 Sample State s1_1011, adj to s1_1111 to limit group rX_XXXX) PCS[PC[P[0:5,1,2,4]]]

Dom 0 s1_1110 -5-> s1_0110 [11_10/11/11/00]

Dom 0 s1_0110 -1-> s1_0111 [11_00/11/11/01]

  Square s1_0110 adding result 4 s1_0111, pn 1, pnc true

Dom 0 s1_0111 -2-> s1_0011 [11_00/10/11/11]

  Square s1_0111 adding result 4 s1_0011, pn 1, pnc true

Dom 0 s1_0011 -4-> s1_1011 [11_01/00/11/11]
4 steps run.

Dom 0 s1_1011 -6-> s1_1011 [11_11/00/11/11]

Dom 0 Adding square s1_1011 -6-> s1_1011
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 15, priority(count): 600(1) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 600
Step: 333 All domain states: SC[s1_1011, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 8
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 8 in1: 8))

Dom: 0 Current State: s1_1011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s1_1011, adj to s1_1111 to limit group rX_XXXX) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 600 Sample State s1_1011, adj to s1_1111 to limit group rX_XXXX) At Target

Dom 0 s1_1011 -6-> s1_1011 [11_11/00/11/11]

  Square s1_1011 adding result 2 s1_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 15, priority(count): 600(1) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 600
Step: 334 All domain states: SC[s1_1011, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 8
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_1111) num Sqrs: 2 Sqrs in: 8 in1: 8))

Dom: 0 Current State: s1_1011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 600 Sample State s1_1011, adj to s1_1111 to limit group rX_XXXX) At Target

Need chosen:  0 N(Dom 0 Act 6 Pri 600 Sample State s1_1011, adj to s1_1111 to limit group rX_XXXX) At Target

Dom 0 s1_1011 -6-> s1_1011 [11_11/00/11/11]

  Square s1_1011 adding result 3 s1_1011, pn 1, pnc changed from false to true
Dom 0 Act 6 skipped adding group r1_1x11, a superset exists in [rX_XXXX]
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 19, priority(count): 500(1) 600(4) 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 500
Step: 335 All domain states: SC[s1_1011, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 8
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limiting using s1_0111) num Sqrs: 2 Sqrs in: 8 in1: 8))

Dom: 0 Current State: s1_1011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 6 Pri 500 Sample State s0_1000, far from anchor s1_0111 to define group rX_XXXX) PCS[PC[P[0:4,3,1]]]/3/3/+0

Need chosen:  0 N(Dom 0 Act 6 Pri 500 Sample State s0_1000, far from anchor s1_0111 to define group rX_XXXX) PCS[PC[P[0:4,3,1]]]

Dom 0 s1_1011 -4-> s0_1011 [10_11/00/11/11]

  Square s1_1011 adding result 4 s0_1011, pn 1, pnc true

Dom 0 s0_1011 -3-> s0_1001 [00_11/00/10/11]

Dom 0 s0_1001 -1-> s0_1000 [00_11/00/00/10]
3 steps run.

Dom 0 s0_1000 -6-> s0_1000 [00_11/00/00/00]

Dom 0 Adding square s0_1000 -6-> s0_1000
Need satisfied
Dom 0 Act 6 Group rX_XXXX set limited on, adj mask m0_0000
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
defining vert: rX_0XXX (s1_0100 - [s1_1100])
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
defining vert: rX_0XXX (s0_0110 - [s0_1110])
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
defining vert: rX_0XXX (s0_0100 - [s0_1100])
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 14, priority(count): 601(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 601
Step: 336 All domain states: SC[s0_1000, s0001_0010_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 23, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s0_1000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 601 Sample State s0001_0101_1101_1011, adj to s0001_0100_1101_1011 to limit group r0001_0Xx0_x101_1011) PCS[PC[P[1:6,1,2,7,2]]]/4/8/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 601 Sample State s0001_0101_1101_1011, adj to s0001_0100_1101_1011 to limit group r0001_0Xx0_x101_1011) PCS[PC[P[1:6,1,2,7,2]]]

All domain states: SC[s0_1000, s0001_0010_1111_1011]

Dom 1 s0001_0010_1111_1011 -6-> s0001_0000_1111_1011 [00/00/00/11_00/00/10/00_11/11/11/11_11/00/11/11]

  Square s0001_0010_1111_1011 adding result 2 s0001_0000_1111_1011, pn 1, pnc false

Dom 1 s0001_0000_1111_1011 -1-> s0001_0001_1101_1011 [00/00/00/11_00/00/00/01_11/11/10/11_11/00/11/11]

Dom 1 s0001_0001_1101_1011 -2-> s0001_0000_1001_1011 [00/00/00/11_00/00/00/10_11/10/00/11_11/00/11/11]

Dom 1 s0001_0000_1001_1011 -7-> s0001_0100_1001_1011 [00/00/00/11_00/01/00/00_11/00/00/11_11/00/11/11]

  Square s0001_0000_1001_1011 adding result 2 s0001_0100_1001_1011, pn 1, pnc false

Dom 1 s0001_0100_1001_1011 -2-> s0001_0101_1101_1011 [00/00/00/11_00/11/00/01_11/01/00/11_11/00/11/11]
5 steps run.

Dom 1 s0001_0101_1101_1011 -7-> s0001_0111_1101_1011 [00/00/00/11_00/11/01/11_11/11/00/11_11/00/11/11]

Dom 1 Adding square s0001_0101_1101_1011 -7-> s0001_0111_1101_1011

Dom 1 Act 7 Adding Group G(r0001_0XxX_X101_1011, pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/11/00/11_11/00/11/11]) from [s0001_0101_1101_1011, s0001_0010_0101_1011]
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 14, priority(count): 402(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 402
Step: 337 All domain states: SC[s0_1000, s0001_0111_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 14, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xxx_xX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limited using s0001_0100_0111_1011 adj mask m0000_0000_0010_0000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(r0001_0XxX_X101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/11/00/11_11/00/11/11])                                                                   num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0111_1101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0101_1101_1011 to confirm group r0001_0XxX_X101_1011) PCS[PC[P[1:6]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0101_1101_1011 to confirm group r0001_0XxX_X101_1011) PCS[PC[P[1:6]]]

Dom 1 s0001_0111_1101_1011 -6-> s0001_0101_1101_1011 [00/00/00/11_00/11/10/11_11/11/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0101_1101_1011 -7-> s0001_0111_1101_1011 [00/00/00/11_00/11/01/11_11/11/00/11_11/00/11/11]

  Square s0001_0101_1101_1011 adding result 2 s0001_0111_1101_1011, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 14, priority(count): 402(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 402
Step: 338 All domain states: SC[s0_1000, s0001_0111_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 14, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xxx_xX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limited using s0001_0100_0111_1011 adj mask m0000_0000_0010_0000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(r0001_0XxX_X101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/11/00/11_11/00/11/11])                                                                   num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0111_1101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0101_1101_1011 to confirm group r0001_0XxX_X101_1011) PCS[PC[P[1:7]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0101_1101_1011 to confirm group r0001_0XxX_X101_1011) PCS[PC[P[1:7]]]

Dom 1 s0001_0111_1101_1011 -7-> s0001_0101_1101_1011 [00/00/00/11_00/11/10/11_11/11/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0101_1101_1011 -7-> s0001_0111_1101_1011 [00/00/00/11_00/11/01/11_11/11/00/11_11/00/11/11]

  Square s0001_0101_1101_1011 adding result 3 s0001_0111_1101_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 13, priority(count): 402(1) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 402
Step: 339 All domain states: SC[s0_1000, s0001_0111_1101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 14, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xxx_xX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limited using s0001_0100_0111_1011 adj mask m0000_0000_0010_0000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(r0001_0XxX_X101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/11/00/11_11/00/11/11])                                                                   num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0111_1101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0010_0101_1011 to confirm group r0001_0XxX_X101_1011) PCS[PC[P[0:1]], PC[P[1:3,2,7,2]]]/4/8/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0010_0101_1011 to confirm group r0001_0XxX_X101_1011) PCS[PC[P[0:1]], PC[P[1:3,2,7,2]]]

Dom 0 s0_1000 -1-> s0_1001 [00_11/00/00/01]
---- 
Dom 1 s0001_0111_1101_1011 -3-> s0001_0110_0101_1011 [00/00/00/11_00/11/11/10_10/11/00/11_11/00/11/11]

Dom 1 s0001_0110_0101_1011 -2-> s0001_0111_0001_1011 [00/00/00/11_00/11/11/01_00/10/00/11_11/00/11/11]

Dom 1 s0001_0111_0001_1011 -7-> s0001_0011_0001_1011 [00/00/00/11_00/10/11/11_00/00/00/11_11/00/11/11]

Dom 1 s0001_0011_0001_1011 -2-> s0001_0010_0101_1011 [00/00/00/11_00/00/11/10_00/01/00/11_11/00/11/11]

  Square s0001_0011_0001_1011 adding result 3 s0001_0010_0101_1011, pn 1, pnc changed from false to true
5 steps run.

Dom 1 s0001_0010_0101_1011 -7-> s0001_0000_0101_1011 [00/00/00/11_00/00/10/00_00/11/00/11_11/00/11/11]

  Square s0001_0010_0101_1011 adding result 2 s0001_0000_0101_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 13, priority(count): 402(1) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 402
Step: 340 All domain states: SC[s0_1001, s0001_0000_0101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 14, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xxx_xX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limited using s0001_0100_0111_1011 adj mask m0000_0000_0010_0000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(r0001_0XxX_X101_1011,  pn: 1, pnc: f, [00/00/00/11_00/XX/Xx/XX_XX/11/00/11_11/00/11/11])                                                                   num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0000_0101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0010_0101_1011 to confirm group r0001_0XxX_X101_1011) PCS[PC[P[1:6]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 402 Get additional sample of state s0001_0010_0101_1011 to confirm group r0001_0XxX_X101_1011) PCS[PC[P[1:6]]]

Dom 1 s0001_0000_0101_1011 -6-> s0001_0010_0101_1011 [00/00/00/11_00/00/01/00_00/11/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0010_0101_1011 -7-> s0001_0000_0101_1011 [00/00/00/11_00/00/10/00_00/11/00/11_11/00/11/11]

  Square s0001_0010_0101_1011 adding result 3 s0001_0000_0101_1011, pn 1, pnc changed from false to true
Dom 1 Act 7 Group r0001_0XxX_X101_1011 confirmed
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 14, priority(count): 602(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 602
Step: 341 All domain states: SC[s0_1001, s0001_0000_0101_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 14, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(r0001_0Xxx_xX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limited using s0001_0100_0111_1011 adj mask m0000_0000_0010_0000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(r0001_0XxX_X101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/11/00/11_11/00/11/11], limiting using s0001_0101_1101_1011)                              num Sqrs: 2 Sqrs in: 5 in1: 5))

Dom: 1 Current State: s0001_0000_0101_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 602 Sample State s0001_0101_1111_1011, adj to s0001_0101_1101_1011 to limit group r0001_0XxX_X101_1011) PCS[PC[P[1:2,4,7,3,1,2]]]/4/10/+0
 1 N(Dom 1 Act 7 Pri 602 Sample State s0001_0101_1001_1011, adj to s0001_0101_1101_1011 to limit group r0001_0XxX_X101_1011) PCS[PC[P[1:3,2,4,7]]]/4/6/+0

Need chosen:  1 N(Dom 1 Act 7 Pri 602 Sample State s0001_0101_1001_1011, adj to s0001_0101_1101_1011 to limit group r0001_0XxX_X101_1011) PCS[PC[P[1:3,2,4,7]]]

Dom 1 s0001_0000_0101_1011 -3-> s0001_0001_1101_1011 [00/00/00/11_00/00/00/01_01/11/00/11_11/00/11/11]

  Square s0001_0000_0101_1011 adding result 2 s0001_0001_1101_1011, pn 1, pnc false

Dom 1 s0001_0001_1101_1011 -2-> s0001_0000_1001_1011 [00/00/00/11_00/00/00/10_11/10/00/11_11/00/11/11]

Dom 1 s0001_0000_1001_1011 -4-> s0001_0001_1001_1011 [00/00/00/11_00/00/00/01_11/00/00/11_11/00/11/11]

Dom 1 s0001_0001_1001_1011 -7-> s0001_0101_1001_1011 [00/00/00/11_00/01/00/11_11/00/00/11_11/00/11/11]

  Square s0001_0001_1001_1011 adding result 4 s0001_0101_1001_1011, pn 1, pnc true
4 steps run.

Dom 1 s0001_0101_1001_1011 -7-> s0001_0001_1001_1011 [00/00/00/11_00/10/00/11_11/00/00/11_11/00/11/11]

Dom 1 Adding square s0001_0101_1001_1011 -7-> s0001_0001_1001_1011
Need satisfied
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]

Dom 1 Act 7 deleted unneeded squares: [s0001_0101_0011_1011, s0001_0010_1101_1011]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 14, priority(count): 602(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 602
Step: 342 All domain states: SC[s0_1001, s0001_0001_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 13, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_11X1_1011, r0001_0XXX_00X1_1011, r0001_0XXX_XX11_1011], defining regions: [r0001_0XXX_X001_1011, r0001_0XXX_XX11_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0Xxx_xX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limited using s0001_0100_0111_1011 adj mask m0000_0000_0010_0000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(r0001_0XxX_X101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/11/00/11_11/00/11/11], limiting using s0001_0101_1101_1011)                              num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0001_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 602 Sample State s0001_0101_1001_1011, adj to s0001_0101_1101_1011 to limit group r0001_0XxX_X101_1011) PCS[PC[P[1:7]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 602 Sample State s0001_0101_1001_1011, adj to s0001_0101_1101_1011 to limit group r0001_0XxX_X101_1011) PCS[PC[P[1:7]]]

Dom 1 s0001_0001_1001_1011 -7-> s0001_0101_1001_1011 [00/00/00/11_00/01/00/11_11/00/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0101_1001_1011 -7-> s0001_0001_1001_1011 [00/00/00/11_00/10/00/11_11/00/00/11_11/00/11/11]

  Square s0001_0101_1001_1011 adding result 2 s0001_0001_1001_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
defining vert: rX_XX1X (s0_0010 - [s0_0000])
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 14, priority(count): 602(2) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 602
Step: 343 All domain states: SC[s0_1001, s0001_0001_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 13, calculated structure regions: [r0001_0XX1_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_00XX_XXX1_1011, r0001_0XXX_X001_1011, r0001_0XXX_0X01_1011, r0001_0XXX_X101_1011, r0001_0XXX_00X1_1011, r0001_0XXX_11X1_1011, r0001_0XXX_XX11_1011], defining regions: [r0001_0XXX_X001_1011, r0001_0XXX_XX11_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(r0001_0Xxx_xX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limited using s0001_0100_0111_1011 adj mask m0000_0000_0010_0000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(r0001_0XxX_X101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/11/00/11_11/00/11/11], limiting using s0001_0101_1101_1011)                              num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0001_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 602 Sample State s0001_0101_1001_1011, adj to s0001_0101_1101_1011 to limit group r0001_0XxX_X101_1011) PCS[PC[P[1:7]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 602 Sample State s0001_0101_1001_1011, adj to s0001_0101_1101_1011 to limit group r0001_0XxX_X101_1011) PCS[PC[P[1:7]]]

Dom 1 s0001_0001_1001_1011 -7-> s0001_0101_1001_1011 [00/00/00/11_00/01/00/11_11/00/00/11_11/00/11/11]
1 step run.

Dom 1 s0001_0101_1001_1011 -7-> s0001_0001_1001_1011 [00/00/00/11_00/10/00/11_11/00/00/11_11/00/11/11]

  Square s0001_0101_1001_1011 adding result 3 s0001_0001_1001_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 13, priority(count): 602(1) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 602
Step: 344 All domain states: SC[s0_1001, s0001_0001_1001_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 14, calculated structure regions: [r0001_00XX_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_0XX1_X0X1_1011, r0001_0XX1_0XX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X101_1011, r0001_0XXX_X001_1011, r0001_0XXX_00X1_1011, r0001_0XXX_0X01_1011, r0001_0XX1_X1X1_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(r0001_0Xxx_xX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limited using s0001_0100_0111_1011 adj mask m0000_0000_0010_0000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(r0001_0XxX_X101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/11/00/11_11/00/11/11], limiting using s0001_0101_1101_1011)                              num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0001_1001_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 602 Sample State s0001_0101_1111_1011, adj to s0001_0101_1101_1011 to limit group r0001_0XxX_X101_1011) PCS[PC[P[1:7,2,1]]]/3/5/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 602 Sample State s0001_0101_1111_1011, adj to s0001_0101_1101_1011 to limit group r0001_0XxX_X101_1011) PCS[PC[P[1:7,2,1]]]

Dom 1 s0001_0001_1001_1011 -7-> s0001_0101_1001_1011 [00/00/00/11_00/01/00/11_11/00/00/11_11/00/11/11]

Dom 1 s0001_0101_1001_1011 -2-> s0001_0100_1101_1011 [00/00/00/11_00/11/00/10_11/01/00/11_11/00/11/11]

Dom 1 s0001_0100_1101_1011 -1-> s0001_0101_1111_1011 [00/00/00/11_00/11/00/01_11/11/01/11_11/00/11/11]
3 steps run.

Dom 1 s0001_0101_1111_1011 -7-> s0001_0100_1111_1011 [00/00/00/11_00/11/00/10_11/11/11/11_11/00/11/11]

Dom 1 Adding square s0001_0101_1111_1011 -7-> s0001_0100_1111_1011
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 13, priority(count): 602(1) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 602
Step: 345 All domain states: SC[s0_1001, s0001_0100_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 15, calculated structure regions: [r0001_00XX_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_0XX1_X0X1_1011, r0001_0XX1_0XX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X101_1011, r0001_0XXX_X001_1011, r0001_0XXX_00X1_1011, r0001_0XXX_0X01_1011, r0001_0XX1_X1X1_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(r0001_0Xxx_xX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limited using s0001_0100_0111_1011 adj mask m0000_0000_0010_0000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(r0001_0XxX_X101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/11/00/11_11/00/11/11], limiting using s0001_0101_1101_1011)                              num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0100_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 602 Sample State s0001_0101_1111_1011, adj to s0001_0101_1101_1011 to limit group r0001_0XxX_X101_1011) PCS[PC[P[1:7]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 602 Sample State s0001_0101_1111_1011, adj to s0001_0101_1101_1011 to limit group r0001_0XxX_X101_1011) PCS[PC[P[1:7]]]

Dom 1 s0001_0100_1111_1011 -7-> s0001_0101_1111_1011 [00/00/00/11_00/11/00/01_11/11/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0101_1111_1011 -7-> s0001_0100_1111_1011 [00/00/00/11_00/11/00/10_11/11/11/11_11/00/11/11]

  Square s0001_0101_1111_1011 adding result 2 s0001_0100_1111_1011, pn 1, pnc false
Need satisfied
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 13, priority(count): 602(1) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 602
Step: 346 All domain states: SC[s0_1001, s0001_0100_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 15, calculated structure regions: [r0001_00XX_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_0XX1_X0X1_1011, r0001_0XX1_0XX1_1011, r0001_0XXX_XX11_1011, r0001_0XXX_X101_1011, r0001_0XXX_X001_1011, r0001_0XXX_00X1_1011, r0001_0XXX_0X01_1011, r0001_0XX1_X1X1_1011, r0001_0XXX_11X1_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(r0001_0Xxx_xX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limited using s0001_0100_0111_1011 adj mask m0000_0000_0010_0000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(r0001_0XxX_X101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/11/00/11_11/00/11/11], limiting using s0001_0101_1101_1011)                              num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0100_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 1 Act 7 Pri 602 Sample State s0001_0101_1111_1011, adj to s0001_0101_1101_1011 to limit group r0001_0XxX_X101_1011) PCS[PC[P[1:7]]]/1/1/+0

Need chosen:  0 N(Dom 1 Act 7 Pri 602 Sample State s0001_0101_1111_1011, adj to s0001_0101_1101_1011 to limit group r0001_0XxX_X101_1011) PCS[PC[P[1:7]]]

Dom 1 s0001_0100_1111_1011 -7-> s0001_0101_1111_1011 [00/00/00/11_00/11/00/01_11/11/11/11_11/00/11/11]
1 step run.

Dom 1 s0001_0101_1111_1011 -7-> s0001_0100_1111_1011 [00/00/00/11_00/11/00/10_11/11/11/11_11/00/11/11]

  Square s0001_0101_1111_1011 adding result 3 s0001_0100_1111_1011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
Dom 1 Act 7 Group r0001_0XxX_X101_1011 set limited on, adj mask m0000_0000_0110_0000
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 12, priority(count): 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 603
Step: 347 All domain states: SC[s0_1001, s0001_0100_1111_1011] Status: Neutral

Current Domain: 1 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rxxxx_xxxx_xxxx_xxxx,  pn: 1, pnc: t, [XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 4
       Grps: G(r0001_0XxX_XxX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/Xx/11_11/00/11/11], limited using s0001_0101_1011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 2, number squares: 4
       Grps: G(r0001_0xXx_XXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/Xx/XX/11_11/00/11/11], limited using s0001_0101_0011_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 3, number squares: 5
       Grps: G(r0001_0xXX_xXx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_Xx/XX/XX/11_11/00/11/11], limited using s0001_0011_0101_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 4, number squares: 5
       Grps: G(r0001_0XxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/XX/11_11/00/11/11], limited using s0001_0101_1001_1011) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 4
       Grps: G(r0001_0xxX_XXX1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1111_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 4
       Grps: G(r0001_0xxX_Xxx1_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/XX/XX/11_11/00/11/11], limited using s0001_0001_1001_1011) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 7, number squares: 15, calculated structure regions: [r0001_00XX_XXX1_1011, r0001_0X1X_XXX1_1011, r0001_0XX1_X0X1_1011, r0001_0XX1_0XX1_1011, r0001_0XXX_0X01_1011, r0001_0XXX_XX11_1011, r0001_0XX0_11X1_1011, r0001_0XXX_X001_1011, r0001_0XXX_00X1_1011, r0001_0XXX_X101_1011], defining regions: [r0001_0XXX_XX11_1011, r0001_0XXX_X001_1011, r0001_0XXX_X101_1011]
       Grps: G(r0001_0Xxx_X001_1011,  pn: 1, pnc: t, [00/00/00/11_00/Xx/XX/XX_XX/00/00/11_11/00/11/11], limited using s0001_0100_1001_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(r0001_0Xxx_xX11_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/XX/Xx_XX/XX/11/11_11/00/11/11], limited using s0001_0100_0111_1011 adj mask m0000_0000_0010_0000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(r0001_0XxX_X101_1011,  pn: 1, pnc: t, [00/00/00/11_00/XX/Xx/XX_XX/11/00/11_11/00/11/11], limited using s0001_0101_1101_1011 adj mask m0000_0000_0110_0000) num Sqrs: 2 Sqrs in: 4 in1: 4))

Dom: 1 Current State: s0001_0100_1111_1011 Available changes: ../../../.._../Xx/Xx/Xx_Xx/Xx/Xx/.._../../../..

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 603 Sample State s1_0100, adj to s1_0000 to limit group rx_000X) PCS[PC[P[0:5,3,5,1]]]/4/4/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 603 Sample State s1_0100, adj to s1_0000 to limit group rx_000X) PCS[PC[P[0:5,3,5,1]]]

All domain states: SC[s0_1001, s0001_0100_1111_1011]

Dom 0 s0_1001 -5-> s0_0001 [00_10/00/00/11]

Dom 0 s0_0001 -3-> s0_0101 [00_00/01/00/11]

Dom 0 s0_0101 -5-> s1_0101 [01_00/11/00/11]

Dom 0 s1_0101 -1-> s1_0100 [11_00/11/00/10]
4 steps run.

Dom 0 s1_0100 -1-> s1_0101 [11_00/11/00/01]

Dom 0 Adding square s1_0100 -1-> s1_0101
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]

Number needs: 13, priority(count): 504(1) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 504
Step: 348 All domain states: SC[s1_0101, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 24, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0000)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_X10x,  pn: 1, pnc: t, [XX_XX/11/00/Xx],                 limiting using s1_0100)                 num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s1_0101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 504 Sample anchor State s1_0100, to limit group rX_X10x) PCS[PC[P[0:1]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 504 Sample anchor State s1_0100, to limit group rX_X10x) PCS[PC[P[0:1]]]

Dom 0 s1_0101 -1-> s1_0100 [11_00/11/00/10]
1 step run.

Dom 0 s1_0100 -1-> s1_0110 [11_00/11/01/00]

  Square s1_0100 adding result 2 s1_0110, pn changed from 1 to 2, pnc false

Dom 0 Act 1 square s1_0100 pn: 2 invalidates
             group rX_X10x pn: 1
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1111 - [s1_1011, s1_1110]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
anchor s1_0000 in group rx_000X removed, rate 2 below 3

Number needs: 13, priority(count): 251(1) 603(1) 900(2) 902(5) 903(2) 904(2) 
Priority 251
Step: 349 All domain states: SC[s1_0110, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 24, calculated structure regions: [rX_101X, r1_0X0X, rX_0X1X, rX_0X00, r0_X0X0, r0_0XX0, r0_XX00, rX_X1X1, rX_1X10, rX_X10X, rX_01XX, r0_1X1X, rX_000X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_X1X1, rX_1X10, rX_000X, rX_1X0X]
       Grps: G(rX_0x1X,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0011 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rX_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s1_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s1_0110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 251 Sample State s1_0100 not in a group) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 251 Sample State s1_0100 not in a group) PCS[PC[P[0:3]]]

Dom 0 s1_0110 -3-> s1_0100 [11_00/11/10/00]
1 step run.

Dom 0 s1_0100 -1-> s1_0000 [11_00/10/00/00]

  Square s1_0100 adding result 3 s1_0000, pn changed from 2 to U, pnc changed from false to true

Dom 0 Act 1 Adding Group G(r1_0x0X, pn: U, pnc: f, [Unpredictable]) from [s1_0001, s1_0100]
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
Options:
defining vert: rX_0XXX (s0_0000 - [s0_1000])
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s1_0110 - [s1_1110, s1_0100])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_000X (s1_0000 - [s1_0010, s1_1000, s1_0100])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
defining vert: rX_1X0X (s1_1100 - [s1_1110, s1_0100])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
Dom 0 Act 1 Group r1_0x0X confirmed
anchor s1_0011 in group rX_0x1X removed, rate 1 below 2
anchor s1_1001 in group rX_1x0X removed, rate 1 below 2
Dom 0 Act 1 Group rX_0x1X set limited on, adj mask m0_1010
Dom 0 Act 1 Group rX_1x0X set limited on, adj mask m0_1010

Number needs: 16, priority(count): 52(2) 202(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 350 All domain states: SC[s1_0000, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 24, calculated structure regions: [r0_X0X0, rX_101X, r0_0XX0, r0_01XX, rX_0X1X, r0_XX00, rX_1X10, rX_X1X1, rX_000X, r0_1X1X, r0_X10X, rX_0X00, r1_0X0X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_1X10, rX_X1X1, rX_000X, rX_1X0X]
       Grps: G(rX_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(r1_0x0X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0100)                 num Sqrs: 2 Sqrs in: 3 in1: 1))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s1_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get sample in r0_0100 to find closer incompatible pair within rx_010X) PCS[PC[P[0:3,5]]]/2/2/+0
 1 N(Dom 0 Act 1 Pri 52 Get sample in r1_0101 to find closer incompatible pair within rx_010X) PCS[PC[P[0:2,1,3,3]]]/2/4/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get sample in r0_0100 to find closer incompatible pair within rx_010X) PCS[PC[P[0:3,5]]]

Dom 0 s1_0000 -3-> s1_0100 [11_00/01/00/00]

  Square s1_0000 adding result 4 s1_0100, pn 1, pnc true

Dom 0 s1_0100 -5-> s0_0100 [10_00/11/00/00]
2 steps run.

Dom 0 s0_0100 -1-> s0_0101 [00_00/11/00/01]

Dom 0 Adding square s0_0100 -1-> s0_0101

Dom 0 Act 1 Adding Group G(r0_01Xx, pn: 1, pnc: f, [00_00/11/XX/Xx]) from [s0_0110, s0_0101]

Dom 0 Act 1 Adding Group G(r0_X10x, pn: 1, pnc: f, [00_XX/11/00/Xx]) from [s0_1100, s0_0101]
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_101X (s1_1010 - [s1_0010, s1_1000, s1_1110])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s1_0110 - [s1_1110, s1_0100])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X10 (s1_1010 - [s1_1011, s1_0010, s1_1000])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_0110, s1_1100])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_000X (s1_0000 - [s1_0010, s1_1000, s1_0100])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1000 - [s1_1010, s1_0000])
defining vert: rX_1X0X (s1_1100 - [s1_1110, s1_0100])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1000 - [s1_1010, s1_0000])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1010 - [s1_1011, s1_0010, s1_1000]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1010 - [s1_0010, s1_1000, s1_1110]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_0110, s1_1100]), (s1_1111 - [s1_1011, s1_1110]), (s1_0000 - [s1_0010, s1_1000, s1_0100]), (s1_1100 - [s1_1110, s1_0100])]
Dom 0 Act 1 Group r0_01Xx confirmed
Dom 0 Act 1 Group r0_X10x confirmed

Dom 0 Act 1 deleted unneeded squares: [s1_1000]

Number needs: 15, priority(count): 52(1) 202(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 351 All domain states: SC[s0_0101, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 24, calculated structure regions: [r0_X0X0, rX_101X, r0_0XX0, r0_01XX, rX_0X1X, r0_XX00, rX_1X10, rX_X1X1, rX_000X, r0_1X1X, r0_X10X, rX_0X00, r1_0X0X, rX_1X0X], defining regions: [rX_101X, rX_0X1X, rX_1X10, rX_X1X1, rX_000X, rX_1X0X]
       Grps: G(rX_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 4),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(r1_0x0X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0100)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(r0_01Xx,  pn: 1, pnc: t, [00_00/11/XX/Xx])                                                         num Sqrs: 2 Sqrs in: 4 in1: 0),
             G(r0_X10x,  pn: 1, pnc: t, [00_XX/11/00/Xx])                                                         num Sqrs: 2 Sqrs in: 3 in1: 0))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s0_0101 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0100 to find closer incompatible pair within rx_010X) PCS[PC[P[0:1]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0100 to find closer incompatible pair within rx_010X) PCS[PC[P[0:1]]]

Dom 0 s0_0101 -1-> s0_0100 [00_00/11/00/10]

  Square s0_0101 adding result 4 s0_0100, pn 1, pnc true
1 step run.

Dom 0 s0_0100 -1-> s0_0110 [00_00/11/01/00]

  Square s0_0100 adding result 2 s0_0110, pn changed from 1 to 2, pnc false

Dom 0 Act 1 square s0_0100 pn: 2 invalidates
             group r0_01Xx pn: 1

Dom 0 Act 1 square s0_0100 pn: 2 invalidates
             group r0_X10x pn: 1
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s1_0110 - [s1_1110, s1_0100])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X10 (s1_1110 - [s1_1111, s1_1100, s1_0110])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s1_1100 - [s1_1110, s1_0100])
Options:
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_1100, s1_0110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_1100, s1_0110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_1100, s1_0110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_1100, s1_0110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_1100, s1_0110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_1100, s1_0110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_1100, s1_0110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_1100, s1_0110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1111, s1_1100, s1_0110]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1111, s1_1100, s1_0110]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1111, s1_1100, s1_0110]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1111, s1_1100, s1_0110]), (s1_1100 - [s1_1110, s1_0100])]

Number needs: 16, priority(count): 52(1) 202(1) 251(1) 603(1) 606(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 352 All domain states: SC[s0_0110, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 24, calculated structure regions: [rX_X000, rX_0X00, r0_XX00, rX_101X, r1_0X0X, rX_X1X1, r0_01XX, rX_000X, r0_X10X, rX_0X1X, r0_1X1X, rX_1X10, r0_0XX0, r0_X0X0, rX_10X0, rX_1X0X], defining regions: [rX_101X, rX_X1X1, rX_000X, rX_0X1X, rX_1X10, rX_1X0X]
       Grps: G(rX_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s1_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(r1_0x0X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0100)                 num Sqrs: 2 Sqrs in: 3 in1: 1))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s0_0110 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0100 to find closer incompatible pair within rx_010X) PCS[PC[P[0:3]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0100 to find closer incompatible pair within rx_010X) PCS[PC[P[0:3]]]

Dom 0 s0_0110 -3-> s0_0100 [00_00/11/10/00]
1 step run.

Dom 0 s0_0100 -1-> s0_0000 [00_00/10/00/00]

  Square s0_0100 adding result 3 s0_0000, pn changed from 2 to U, pnc changed from false to true

Dom 0 Act 1 Adding Group G(rX_0x00, pn: U, pnc: f, [Unpredictable]) from [s1_0000, s0_0100]
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_0X00 (s0_0100 - [s0_0101, s0_0110, s0_1100])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0110 - [s0_1110, s0_0100])
defining vert: rX_0X1X (s1_0110 - [s1_1110, s1_0100])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X10 (s1_1110 - [s1_1100, s1_0110, s1_1111])
defining vert: rX_X1X1 (s0_0101 - [s0_0001, s0_0100])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s0_1100 - [s0_1110, s0_0100])
defining vert: rX_1X0X (s1_1100 - [s1_1110, s1_0100])
Options:
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
Dom 0 Act 1 Group rX_0x00 confirmed
anchor s1_0110 in group rX_0X1x removed, rate 1 below 2
Dom 0 Act 1 Group rX_0X1x set limited on, adj mask m0_1010

Number needs: 14, priority(count): 202(1) 603(1) 607(1) 900(2) 902(5) 903(2) 904(2) 
Priority 202
Step: 353 All domain states: SC[s0_0000, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 24, calculated structure regions: [rX_X000, r1_0X0X, rX_10X0, rX_000X, rX_0X00, rX_0X1X, r0_X0X0, rX_1X10, r0_1X1X, rX_X1X1, rX_101X, rX_1X0X], defining regions: [rX_000X, rX_0X00, rX_0X1X, rX_1X10, rX_X1X1, rX_101X, rX_1X0X]
       Grps: G(rx_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 4 in1: 3),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(r1_0x0X,  pn: U, pnc: t, [Unpredictable])                                                          num Sqrs: 2 Sqrs in: 3 in1: 0),
             G(rX_0x00,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0100)                 num Sqrs: 2 Sqrs in: 3 in1: 1))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s0_0000 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 202 Sample Region r1_0101 intersection of rx_x1x1 [11_00/11/00/10] and r1_0x0X None) PCS[PC[P[0:2,1,3,5,3]]]/3/5/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 202 Sample Region r1_0101 intersection of rx_x1x1 [11_00/11/00/10] and r1_0x0X None) PCS[PC[P[0:2,1,3,5,3]]]

Dom 0 s0_0000 -2-> s0_0010 [00_00/00/01/00]

Dom 0 s0_0010 -1-> s0_0011 [00_00/00/11/01]

Dom 0 s0_0011 -3-> s0_0001 [00_00/00/10/11]

Dom 0 s0_0001 -5-> s1_0001 [01_00/00/00/11]

Dom 0 s1_0001 -3-> s1_0101 [11_00/01/00/11]
5 steps run.

Dom 0 s1_0101 -1-> s1_0100 [11_00/11/00/10]

Dom 0 Adding square s1_0101 -1-> s1_0100
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
defining vert: rX_1XXX (s0_1100 - [s0_0100])
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_0X00 (s0_0100 - [s0_0101, s0_0110, s0_1100])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0110 - [s0_1110, s0_0100])
defining vert: rX_0X1X (s1_0110 - [s1_1110, s1_0100])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X10 (s1_1110 - [s1_1100, s1_0110, s1_1111])
defining vert: rX_X1X1 (s0_0101 - [s0_0001, s0_0100])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s0_1100 - [s0_1110, s0_0100])
defining vert: rX_1X0X (s1_1100 - [s1_1110, s1_0100])
Options:
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]

Number needs: 14, priority(count): 202(1) 603(1) 607(1) 900(2) 902(5) 903(2) 904(2) 
Priority 202, none.
Priority 603
Step: 354 All domain states: SC[s1_0100, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 25, calculated structure regions: [rX_X000, r1_0X0X, rX_10X0, rX_000X, rX_0X00, rX_0X1X, r0_X0X0, rX_1X10, r0_1X1X, rX_X1X1, rX_101X, rX_1X0X], defining regions: [rX_000X, rX_0X00, rX_0X1X, rX_1X10, rX_X1X1, rX_101X, rX_1X0X]
       Grps: G(rx_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 2 Sqrs in: 3 in1: 1),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(r1_0x0X,  pn: U, pnc: t, [Unpredictable])                                                          num Sqrs: 2 Sqrs in: 4 in1: 0),
             G(rX_0x00,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0100)                 num Sqrs: 2 Sqrs in: 3 in1: 1))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s1_0100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 603 Sample State s0_0000, adj to s0_0001 to limit group rx_000X) PCS[PC[P[0:3,5]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 603 Sample State s0_0000, adj to s0_0001 to limit group rx_000X) PCS[PC[P[0:3,5]]]

Dom 0 s1_0100 -3-> s1_0000 [11_00/10/00/00]

  Square s1_0100 adding result 4 s1_0000, pn 1, pnc true

Dom 0 s1_0000 -5-> s0_0000 [10_00/00/00/00]
2 steps run.

Dom 0 s0_0000 -1-> s0_0010 [00_00/00/01/00]

Dom 0 Adding square s0_0000 -1-> s0_0010
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_0X00 (s0_0100 - [s0_0101, s0_0110, s0_1100])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0110 - [s0_1110, s0_0100])
defining vert: rX_0X1X (s1_0110 - [s1_1110, s1_0100])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X10 (s1_1110 - [s1_1100, s1_0110, s1_1111])
defining vert: rX_X1X1 (s0_0101 - [s0_0001, s0_0100])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s0_1100 - [s0_1110, s0_0100])
defining vert: rX_1X0X (s1_1100 - [s1_1110, s1_0100])
Options:
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]

Number needs: 14, priority(count): 202(1) 603(1) 607(1) 900(2) 902(5) 903(2) 904(2) 
Priority 202
Step: 355 All domain states: SC[s0_0010, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 26, calculated structure regions: [rX_X000, r1_0X0X, rX_10X0, rX_000X, rX_0X00, rX_0X1X, r0_X0X0, rX_1X10, r0_1X1X, rX_X1X1, rX_101X, rX_1X0X], defining regions: [rX_000X, rX_0X00, rX_0X1X, rX_1X10, rX_X1X1, rX_101X, rX_1X0X]
       Grps: G(rx_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(r1_0x0X,  pn: U, pnc: t, [Unpredictable])                                                          num Sqrs: 2 Sqrs in: 4 in1: 0),
             G(rX_0x00,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0100)                 num Sqrs: 2 Sqrs in: 4 in1: 1))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s0_0010 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 202 Sample Region r1_0101 intersection of rx_x1x1 [11_00/11/00/10] and r1_0x0X None) PCS[PC[P[0:1,3,5,3]]]/4/4/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 202 Sample Region r1_0101 intersection of rx_x1x1 [11_00/11/00/10] and r1_0x0X None) PCS[PC[P[0:1,3,5,3]]]

Dom 0 s0_0010 -1-> s0_0011 [00_00/00/11/01]

Dom 0 s0_0011 -3-> s0_0001 [00_00/00/10/11]

Dom 0 s0_0001 -5-> s1_0001 [01_00/00/00/11]

Dom 0 s1_0001 -3-> s1_0101 [11_00/01/00/11]
4 steps run.

Dom 0 s1_0101 -1-> s1_0100 [11_00/11/00/10]

  Square s1_0101 adding result 2 s1_0100, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_0X00 (s0_0100 - [s0_0101, s0_0110, s0_1100])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0110 - [s0_1110, s0_0100])
defining vert: rX_0X1X (s1_0110 - [s1_1110, s1_0100])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X10 (s1_1110 - [s1_1100, s1_0110, s1_1111])
defining vert: rX_X1X1 (s0_0101 - [s0_0001, s0_0100])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s0_1100 - [s0_1110, s0_0100])
defining vert: rX_1X0X (s1_1100 - [s1_1110, s1_0100])
Options:
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]

Number needs: 14, priority(count): 202(1) 603(1) 607(1) 900(2) 902(5) 903(2) 904(2) 
Priority 202, none.
Priority 603
Step: 356 All domain states: SC[s1_0100, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 26, calculated structure regions: [rX_X000, r1_0X0X, rX_10X0, rX_000X, rX_0X00, rX_0X1X, r0_X0X0, rX_1X10, r0_1X1X, rX_X1X1, rX_101X, rX_1X0X], defining regions: [rX_000X, rX_0X00, rX_0X1X, rX_1X10, rX_X1X1, rX_101X, rX_1X0X]
       Grps: G(rx_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(r1_0x0X,  pn: U, pnc: t, [Unpredictable])                                                          num Sqrs: 2 Sqrs in: 4 in1: 0),
             G(rX_0x00,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0100)                 num Sqrs: 2 Sqrs in: 4 in1: 1))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s1_0100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 603 Sample State s0_0000, adj to s0_0001 to limit group rx_000X) PCS[PC[P[0:5,3]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 603 Sample State s0_0000, adj to s0_0001 to limit group rx_000X) PCS[PC[P[0:5,3]]]

Dom 0 s1_0100 -5-> s0_0100 [10_00/11/00/00]

Dom 0 s0_0100 -3-> s0_0000 [00_00/10/00/00]
2 steps run.

Dom 0 s0_0000 -1-> s0_0100 [00_00/01/00/00]

  Square s0_0000 adding result 2 s0_0100, pn changed from 1 to 2, pnc false
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_0X00 (s0_0100 - [s0_0101, s0_0110, s0_1100])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0110 - [s0_1110, s0_0100])
defining vert: rX_0X1X (s1_0110 - [s1_1110, s1_0100])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X10 (s1_1110 - [s1_1100, s1_0110, s1_1111])
defining vert: rX_X1X1 (s0_0101 - [s0_0001, s0_0100])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s0_1100 - [s0_1110, s0_0100])
defining vert: rX_1X0X (s1_1100 - [s1_1110, s1_0100])
Options:
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0011 - [s1_1011, s1_0001]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0010 - [s1_1010, s1_0000]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0110 - [s0_1110, s0_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_0110 - [s1_1110, s1_0100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s0_0011 - [s0_0001, s0_1011]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100])]

Number needs: 14, priority(count): 202(1) 603(1) 607(1) 900(2) 902(5) 903(2) 904(2) 
Priority 202
Step: 357 All domain states: SC[s0_0100, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 26, calculated structure regions: [rX_X000, r1_0X0X, rX_10X0, rX_000X, rX_0X00, rX_0X1X, r0_X0X0, rX_1X10, r0_1X1X, rX_X1X1, rX_101X, rX_1X0X], defining regions: [rX_000X, rX_0X00, rX_0X1X, rX_1X10, rX_X1X1, rX_101X, rX_1X0X]
       Grps: G(rx_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 5 in1: 3),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0001)                 num Sqrs: 2 Sqrs in: 4 in1: 1),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(r1_0x0X,  pn: U, pnc: t, [Unpredictable])                                                          num Sqrs: 2 Sqrs in: 4 in1: 0),
             G(rX_0x00,  pn: U, pnc: t, [Unpredictable],                  limiting using s0_0100)                 num Sqrs: 2 Sqrs in: 4 in1: 1))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s0_0100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 202 Sample Region r1_0101 intersection of rx_x1x1 [11_00/11/00/10] and r1_0x0X None) PCS[PC[P[0:5,2,1,3]]]/2/4/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 202 Sample Region r1_0101 intersection of rx_x1x1 [11_00/11/00/10] and r1_0x0X None) PCS[PC[P[0:5,2,1,3]]]

Dom 0 s0_0100 -5-> s1_0100 [01_00/11/00/00]

  Square s0_0100 adding result 2 s1_0100, pn 1, pnc false

Dom 0 s1_0100 -2-> s1_0110 [11_00/11/01/00]

Dom 0 s1_0110 -1-> s1_0111 [11_00/11/11/01]

Dom 0 s1_0111 -3-> s1_0101 [11_00/11/10/11]
4 steps run.

Dom 0 s1_0101 -1-> s1_0100 [11_00/11/00/10]

  Square s1_0101 adding result 3 s1_0100, pn 1, pnc changed from false to true

Dom 0 Act 1 square s1_0101 pn: 1 pnc: true invalidates
             group r1_0x0X pn: U
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_000X (s1_0001 - [s1_1001, s1_0011, s1_0101])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_X1X1 (s0_0101 - [s0_0001, s0_0100])
defining vert: rX_X1X1 (s1_0101 - [s1_0001, s1_0100])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X00 (s0_0100 - [s0_0101, s0_0110, s0_1100])
defining vert: rX_0X00 (s1_0100 - [s1_0101, s1_1100, s1_0110])
defining vert: rX_1X10 (s1_1110 - [s1_1100, s1_0110, s1_1111])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0110 - [s0_1110, s0_0100])
defining vert: rX_0X1X (s1_0110 - [s1_0100, s1_1110])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s0_1100 - [s0_1110, s0_0100])
defining vert: rX_1X0X (s1_1100 - [s1_0100, s1_1110])
Options:
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]

Number needs: 13, priority(count): 503(1) 506(1) 900(2) 902(5) 903(2) 904(2) 
Priority 503
Step: 358 All domain states: SC[s1_0100, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 26, calculated structure regions: [rX_X000, rX_000X, rX_101X, r0_X0X0, rX_10X0, rX_X1X1, rX_0X00, rX_1X10, rX_0X1X, r0_1X1X, rX_1X0X], defining regions: [rX_000X, rX_101X, rX_X1X1, rX_0X00, rX_1X10, rX_0X1X, rX_1X0X]
       Grps: G(rx_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rx_000X,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0001)                 num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_0x00,  pn: U, pnc: t, [Unpredictable],                  limiting using s1_0100)                 num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s1_0100 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 503 Sample State s0_0000, far from anchor s1_0001 to define group rx_000X) PCS[PC[P[0:3,5]]]/2/2/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 503 Sample State s0_0000, far from anchor s1_0001 to define group rx_000X) PCS[PC[P[0:3,5]]]

Dom 0 s1_0100 -3-> s1_0000 [11_00/10/00/00]

Dom 0 s1_0000 -5-> s0_0000 [10_00/00/00/00]
2 steps run.

Dom 0 s0_0000 -1-> s0_0001 [00_00/00/00/01]

  Square s0_0000 adding result 3 s0_0001, pn changed from 2 to U, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_000X (s1_0001 - [s1_1001, s1_0011, s1_0101])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_X1X1 (s0_0101 - [s0_0001, s0_0100])
defining vert: rX_X1X1 (s1_0101 - [s1_0001, s1_0100])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X00 (s0_0100 - [s0_0101, s0_0110, s0_1100])
defining vert: rX_0X00 (s1_0100 - [s1_0101, s1_1100, s1_0110])
defining vert: rX_1X10 (s1_1110 - [s1_1100, s1_0110, s1_1111])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0110 - [s0_1110, s0_0100])
defining vert: rX_0X1X (s1_0110 - [s1_0100, s1_1110])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s0_1100 - [s0_1110, s0_0100])
defining vert: rX_1X0X (s1_1100 - [s1_0100, s1_1110])
Options:
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
Dom 0 Act 1 Group rx_000X set limited on, adj mask m0_1110
Dom 0 Act 1 Group rX_0x00 set limited on, adj mask m0_1011

Number needs: 13, priority(count): 52(2) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 359 All domain states: SC[s0_0001, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 26, calculated structure regions: [rX_X000, rX_000X, rX_101X, r0_00X0, r0_X010, rX_10X0, rX_X1X1, rX_0X00, rX_1X10, rX_0X1X, r0_1X1X, rX_1X0X], defining regions: [rX_000X, rX_101X, rX_X1X1, rX_0X00, rX_1X10, rX_0X1X, rX_1X0X]
       Grps: G(rx_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 6 in1: 5),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rX_000X,  pn: U, pnc: t, [Unpredictable],                  limited using s1_0001 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_0X00,  pn: U, pnc: t, [Unpredictable],                  limited using s1_0100 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s0_0001 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get sample in r0_1000 to find closer incompatible pair within r0_X0X0) PCS[PC[P[0:4,1]]]/2/2/+0
 1 N(Dom 0 Act 1 Pri 52 Get sample in r0_0010 to find closer incompatible pair within r0_X0X0) PCS[PC[P[0:2,1]]]/2/2/+0

Need chosen:  1 N(Dom 0 Act 1 Pri 52 Get sample in r0_0010 to find closer incompatible pair within r0_X0X0) PCS[PC[P[0:2,1]]]

Dom 0 s0_0001 -2-> s0_0011 [00_00/00/01/11]

  Square s0_0001 adding result 3 s0_0011, pn 1, pnc changed from false to true

Dom 0 s0_0011 -1-> s0_0010 [00_00/00/11/10]
2 steps run.

Dom 0 s0_0010 -1-> s0_0011 [00_00/00/11/01]

Dom 0 Adding square s0_0010 -1-> s0_0011
Need satisfied
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_000X (s1_0001 - [s1_1001, s1_0011, s1_0101])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_X1X1 (s0_0101 - [s0_0001, s0_0100])
defining vert: rX_X1X1 (s1_0101 - [s1_0001, s1_0100])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X00 (s0_0100 - [s0_0101, s0_0110, s0_1100])
defining vert: rX_0X00 (s1_0100 - [s1_0101, s1_1100, s1_0110])
defining vert: rX_1X10 (s1_1110 - [s1_1100, s1_0110, s1_1111])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0110 - [s0_1110, s0_0100])
defining vert: rX_0X1X (s1_0110 - [s1_0100, s1_1110])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s0_1100 - [s0_1110, s0_0100])
defining vert: rX_1X0X (s1_1100 - [s1_0100, s1_1110])
Options:
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]

Number needs: 12, priority(count): 52(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 360 All domain states: SC[s0_0011, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 27, calculated structure regions: [rX_X000, rX_000X, rX_101X, r0_00X0, r0_X010, rX_10X0, rX_X1X1, rX_0X00, rX_1X10, rX_0X1X, r0_1X1X, rX_1X0X], defining regions: [rX_000X, rX_101X, rX_X1X1, rX_0X00, rX_1X10, rX_0X1X, rX_1X0X]
       Grps: G(rx_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 7 in1: 6),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rX_000X,  pn: U, pnc: t, [Unpredictable],                  limited using s1_0001 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_0X00,  pn: U, pnc: t, [Unpredictable],                  limited using s1_0100 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s0_0011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0010 to find closer incompatible pair within r0_X0X0) PCS[PC[P[0:1]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0010 to find closer incompatible pair within r0_X0X0) PCS[PC[P[0:1]]]

Dom 0 s0_0011 -1-> s0_0010 [00_00/00/11/10]
1 step run.

Dom 0 s0_0010 -1-> s0_0011 [00_00/00/11/01]

  Square s0_0010 adding result 2 s0_0011, pn 1, pnc false
Need satisfied
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_000X (s1_0001 - [s1_1001, s1_0011, s1_0101])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_X1X1 (s0_0101 - [s0_0001, s0_0100])
defining vert: rX_X1X1 (s1_0101 - [s1_0001, s1_0100])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_0X00 (s0_0100 - [s0_0101, s0_0110, s0_1100])
defining vert: rX_0X00 (s1_0100 - [s1_0101, s1_1100, s1_0110])
defining vert: rX_1X10 (s1_1110 - [s1_1100, s1_0110, s1_1111])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0110 - [s0_1110, s0_0100])
defining vert: rX_0X1X (s1_0110 - [s1_0100, s1_1110])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s0_1100 - [s0_1110, s0_0100])
defining vert: rX_1X0X (s1_1100 - [s1_0100, s1_1110])
Options:
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1001 - [s0_0001, s0_1011])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1001 - [s1_1011, s1_0001])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s0_1100 - [s0_1110, s0_0100])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0011 - [s1_1011, s1_0001]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0010 - [s1_1010, s1_0000]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0110 - [s0_1110, s0_0100]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s1_0110 - [s1_0100, s1_1110]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_0101 - [s0_0001, s0_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_0101 - [s1_0001, s1_0100]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]
  gggg [(s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1111 - [s1_1011, s1_1110]), (s1_0100 - [s1_0101, s1_1100, s1_0110]), (s1_1110 - [s1_1100, s1_0110, s1_1111]), (s0_0011 - [s0_0001, s0_1011]), (s1_1100 - [s1_0100, s1_1110])]

Number needs: 12, priority(count): 52(1) 900(2) 902(5) 903(2) 904(2) 
Priority 52
Step: 361 All domain states: SC[s0_0011, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 27, calculated structure regions: [rX_X000, rX_000X, rX_101X, r0_00X0, r0_X010, rX_10X0, rX_X1X1, rX_0X00, rX_1X10, rX_0X1X, r0_1X1X, rX_1X0X], defining regions: [rX_000X, rX_101X, rX_X1X1, rX_0X00, rX_1X10, rX_0X1X, rX_1X0X]
       Grps: G(rx_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 7 in1: 6),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rX_000X,  pn: U, pnc: t, [Unpredictable],                  limited using s1_0001 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_0X00,  pn: U, pnc: t, [Unpredictable],                  limited using s1_0100 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s0_0011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0010 to find closer incompatible pair within r0_X0X0) PCS[PC[P[0:1]]]/1/1/+0

Need chosen:  0 N(Dom 0 Act 1 Pri 52 Get additional sample of state s0_0010 to find closer incompatible pair within r0_X0X0) PCS[PC[P[0:1]]]

Dom 0 s0_0011 -1-> s0_0010 [00_00/00/11/10]
1 step run.

Dom 0 s0_0010 -1-> s0_0011 [00_00/00/11/01]

  Square s0_0010 adding result 3 s0_0011, pn 1, pnc changed from false to true
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s0_0101 - [s0_0001, s0_0100])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_X1X1 (s1_0101 - [s1_0001, s1_0100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s0_1100 - [s0_1110, s0_0100])
defining vert: rX_1X0X (s1_1100 - [s1_1110, s1_0100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_000X (s1_0001 - [s1_1001, s1_0011, s1_0101])
defining vert: rX_0X00 (s0_0100 - [s0_0101, s0_0110, s0_1100])
defining vert: rX_0X00 (s1_0100 - [s1_0110, s1_1100, s1_0101])
defining vert: rX_1X10 (s1_1110 - [s1_0110, s1_1111, s1_1100])
defining vert: rX_0X1X (s0_0010 - [s0_1010, s0_0000])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0110 - [s0_1110, s0_0100])
defining vert: rX_0X1X (s1_0110 - [s1_1110, s1_0100])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]

Number needs: 11, priority(count): 900(2) 902(5) 903(2) 904(2) 
Priority 900
Step: 362 All domain states: SC[s0_0011, s0001_0100_1111_1011] Status: Neutral

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 27, calculated structure regions: [rX_X1X1, rX_101X, rX_1X0X, rX_000X, rX_0X00, rX_X000, rX_1X10, rX_10X0, r0_1X1X, rX_0X1X], defining regions: [rX_X1X1, rX_101X, rX_1X0X, rX_000X, rX_0X00, rX_1X10, rX_0X1X]
       Grps: G(rx_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 7 in1: 6),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rX_000X,  pn: U, pnc: t, [Unpredictable],                  limited using s1_0001 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_0X00,  pn: U, pnc: t, [Unpredictable],                  limited using s1_0100 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s0_0011 Available changes: Xx_Xx/Xx/Xx/Xx

Needs that can be done:
 0 N(Pri 900 To Select Regions SR[RC[rX_0001, rXXXX_XX11_1XXX_XXXX], +5], times visited: 0) PCS[PC[P[0:3], P[1:5,4]]]/3/3/+0
 1 N(Pri 900 To Select Regions SR[RC[rX_0X01, rXXXX_XX11_11XX_XXXX], +5], times visited: 0) PCS[PC[P[0:3], P[1:4,5]]]/3/3/+0

Need chosen:  0 N(Pri 900 To Select Regions SR[RC[rX_0001, rXXXX_XX11_1XXX_XXXX], +5], times visited: 0) PCS[PC[P[0:3], P[1:5,4]]]

Dom 0 s0_0011 -3-> s0_0001 [00_00/00/10/11]

Dom 1 s0001_0100_1111_1011 -5-> s0001_0110_1111_1011 [00/00/00/11_00/11/01/00_11/11/11/11_11/00/11/11]

Dom 1 s0001_0110_1111_1011 -4-> s0001_0111_1111_1011 [00/00/00/11_00/11/11/01_11/11/11/11_11/00/11/11]
3 steps run.
Need satisfied
defining vert: rX_1XXX (s0_1000 - [s0_0000])
defining vert: rX_1XXX (s1_1111 - [s1_0111])
defining vert: rX_0XXX (s0_0000 - [s0_1000])
defining vert: rX_0XXX (s1_0111 - [s1_1111])
Options:
  gggg [(s0_1000 - [s0_0000]), (s0_0000 - [s0_1000])]
  gggg [(s1_1111 - [s1_0111]), (s0_0000 - [s0_1000])]
  gggg [(s0_1000 - [s0_0000]), (s1_0111 - [s1_1111])]
  gggg [(s1_1111 - [s1_0111]), (s1_0111 - [s1_1111])]
defining vert: rX_XX1X (s1_1111 - [s1_1101])
defining vert: rX_XX1X (s0_0010 - [s0_0000])
defining vert: rX_XX0X (s1_1101 - [s1_1111])
defining vert: rX_XX0X (s0_0000 - [s0_0010])
Options:
  gggg [(s1_1111 - [s1_1101]), (s1_1101 - [s1_1111])]
  gggg [(s0_0010 - [s0_0000]), (s1_1101 - [s1_1111])]
  gggg [(s1_1111 - [s1_1101]), (s0_0000 - [s0_0010])]
  gggg [(s0_0010 - [s0_0000]), (s0_0000 - [s0_0010])]
defining vert: rX_1XXX (s1_1100 - [s1_0100])
defining vert: rX_1XXX (s0_1110 - [s0_0110])
defining vert: rX_1XXX (s0_1100 - [s0_0100])
defining vert: rX_1XXX (s1_1011 - [s1_0011])
defining vert: rX_0XXX (s1_0100 - [s1_1100])
defining vert: rX_0XXX (s0_0110 - [s0_1110])
defining vert: rX_0XXX (s0_0100 - [s0_1100])
defining vert: rX_0XXX (s1_0011 - [s1_1011])
Options:
  gggg [(s1_1100 - [s1_0100]), (s1_0100 - [s1_1100])]
  gggg [(s0_1110 - [s0_0110]), (s1_0100 - [s1_1100])]
  gggg [(s0_1100 - [s0_0100]), (s1_0100 - [s1_1100])]
  gggg [(s1_1011 - [s1_0011]), (s1_0100 - [s1_1100])]
  gggg [(s1_1100 - [s1_0100]), (s0_0110 - [s0_1110])]
  gggg [(s0_1110 - [s0_0110]), (s0_0110 - [s0_1110])]
  gggg [(s0_1100 - [s0_0100]), (s0_0110 - [s0_1110])]
  gggg [(s1_1011 - [s1_0011]), (s0_0110 - [s0_1110])]
  gggg [(s1_1100 - [s1_0100]), (s0_0100 - [s0_1100])]
  gggg [(s0_1110 - [s0_0110]), (s0_0100 - [s0_1100])]
  gggg [(s0_1100 - [s0_0100]), (s0_0100 - [s0_1100])]
  gggg [(s1_1011 - [s1_0011]), (s0_0100 - [s0_1100])]
  gggg [(s1_1100 - [s1_0100]), (s1_0011 - [s1_1011])]
  gggg [(s0_1110 - [s0_0110]), (s1_0011 - [s1_1011])]
  gggg [(s0_1100 - [s0_0100]), (s1_0011 - [s1_1011])]
  gggg [(s1_1011 - [s1_0011]), (s1_0011 - [s1_1011])]
defining vert: rX_XX0X (s1_1000 - [s1_1010])
defining vert: rX_XX0X (s0_1001 - [s0_1011])
defining vert: rX_XX0X (s1_0101 - [s1_0111])
defining vert: rX_XX0X (s0_1100 - [s0_1110])
defining vert: rX_XX0X (s1_0100 - [s1_0110])
defining vert: rX_XX1X (s1_1010 - [s1_1000])
defining vert: rX_XX1X (s0_1011 - [s0_1001])
defining vert: rX_XX1X (s1_0111 - [s1_0101])
defining vert: rX_XX1X (s0_1110 - [s0_1100])
defining vert: rX_XX1X (s1_0110 - [s1_0100])
Options:
  gggg [(s1_1000 - [s1_1010]), (s1_1010 - [s1_1000])]
  gggg [(s0_1001 - [s0_1011]), (s1_1010 - [s1_1000])]
  gggg [(s1_0101 - [s1_0111]), (s1_1010 - [s1_1000])]
  gggg [(s0_1100 - [s0_1110]), (s1_1010 - [s1_1000])]
  gggg [(s1_0100 - [s1_0110]), (s1_1010 - [s1_1000])]
  gggg [(s1_1000 - [s1_1010]), (s0_1011 - [s0_1001])]
  gggg [(s0_1001 - [s0_1011]), (s0_1011 - [s0_1001])]
  gggg [(s1_0101 - [s1_0111]), (s0_1011 - [s0_1001])]
  gggg [(s0_1100 - [s0_1110]), (s0_1011 - [s0_1001])]
  gggg [(s1_0100 - [s1_0110]), (s0_1011 - [s0_1001])]
  gggg [(s1_1000 - [s1_1010]), (s1_0111 - [s1_0101])]
  gggg [(s0_1001 - [s0_1011]), (s1_0111 - [s1_0101])]
  gggg [(s1_0101 - [s1_0111]), (s1_0111 - [s1_0101])]
  gggg [(s0_1100 - [s0_1110]), (s1_0111 - [s1_0101])]
  gggg [(s1_0100 - [s1_0110]), (s1_0111 - [s1_0101])]
  gggg [(s1_1000 - [s1_1010]), (s0_1110 - [s0_1100])]
  gggg [(s0_1001 - [s0_1011]), (s0_1110 - [s0_1100])]
  gggg [(s1_0101 - [s1_0111]), (s0_1110 - [s0_1100])]
  gggg [(s0_1100 - [s0_1110]), (s0_1110 - [s0_1100])]
  gggg [(s1_0100 - [s1_0110]), (s0_1110 - [s0_1100])]
  gggg [(s1_1000 - [s1_1010]), (s1_0110 - [s1_0100])]
  gggg [(s0_1001 - [s0_1011]), (s1_0110 - [s1_0100])]
  gggg [(s1_0101 - [s1_0111]), (s1_0110 - [s1_0100])]
  gggg [(s0_1100 - [s0_1110]), (s1_0110 - [s1_0100])]
  gggg [(s1_0100 - [s1_0110]), (s1_0110 - [s1_0100])]
defining vert: rX_X1X1 (s0_0101 - [s0_0001, s0_0100])
defining vert: rX_X1X1 (s1_1111 - [s1_1011, s1_1110])
defining vert: rX_X1X1 (s1_0101 - [s1_0001, s1_0100])
defining vert: rX_101X (s1_1011 - [s1_1001, s1_0011, s1_1111])
defining vert: rX_1X0X (s0_1001 - [s0_0001, s0_1011])
defining vert: rX_1X0X (s1_1001 - [s1_1011, s1_0001])
defining vert: rX_1X0X (s0_1100 - [s0_1110, s0_0100])
defining vert: rX_1X0X (s1_1100 - [s1_1110, s1_0100])
defining vert: rX_000X (s0_0001 - [s0_1001, s0_0101, s0_0011])
defining vert: rX_000X (s1_0001 - [s1_1001, s1_0011, s1_0101])
defining vert: rX_0X00 (s0_0100 - [s0_0101, s0_0110, s0_1100])
defining vert: rX_0X00 (s1_0100 - [s1_0110, s1_1100, s1_0101])
defining vert: rX_1X10 (s1_1110 - [s1_0110, s1_1111, s1_1100])
defining vert: rX_0X1X (s0_0010 - [s0_1010, s0_0000])
defining vert: rX_0X1X (s1_0011 - [s1_1011, s1_0001])
defining vert: rX_0X1X (s1_0010 - [s1_1010, s1_0000])
defining vert: rX_0X1X (s0_0110 - [s0_1110, s0_0100])
defining vert: rX_0X1X (s1_0110 - [s1_1110, s1_0100])
defining vert: rX_0X1X (s0_0011 - [s0_0001, s0_1011])
Options:
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0010 - [s0_1010, s0_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0011 - [s1_1011, s1_0001])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0010 - [s1_1010, s1_0000])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0110 - [s0_1110, s0_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s1_0110 - [s1_1110, s1_0100])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s0_0100 - [s0_0101, s0_0110, s0_1100]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s0_0001 - [s0_1001, s0_0101, s0_0011]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1001 - [s0_0001, s0_1011]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1001 - [s1_1011, s1_0001]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s0_1100 - [s0_1110, s0_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s0_0101 - [s0_0001, s0_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_1111 - [s1_1011, s1_1110]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]
  gggg [(s1_0101 - [s1_0001, s1_0100]), (s1_1011 - [s1_1001, s1_0011, s1_1111]), (s1_1100 - [s1_1110, s1_0100]), (s1_0001 - [s1_1001, s1_0011, s1_0101]), (s1_0100 - [s1_0110, s1_1100, s1_0101]), (s1_1110 - [s1_0110, s1_1111, s1_1100]), (s0_0011 - [s0_0001, s0_1011])]

Step: 363 All domain states: SC[s0_0001, s0001_0111_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 in RC[rx_0xx1, rXXXX_XXX1_1XXX_XXXX], 2 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 27, calculated structure regions: [rX_X1X1, rX_101X, rX_1X0X, rX_000X, rX_0X00, rX_X000, rX_1X10, rX_10X0, r0_1X1X, rX_0X1X], defining regions: [rX_X1X1, rX_101X, rX_1X0X, rX_000X, rX_0X00, rX_1X10, rX_0X1X]
       Grps: G(rx_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 7 in1: 6),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rX_000X,  pn: U, pnc: t, [Unpredictable],                  limited using s1_0001 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_0X00,  pn: U, pnc: t, [Unpredictable],                  limited using s1_0100 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s0_0001 Available changes: Xx_Xx/Xx/Xx/Xx

Number needs: 0

Select Region boredom/satiation level = 1 of limit 5

Startup Commands: <invoke> may be the command "ues" or "cargo run"

    <invoke>                  - Run default.kmp interactively, press Enter for each step.

    <invoke> 1                - Run default.kmp non-interactively, stop, in interactive mode, when no needs can be done.

    <invoke> <number times>   - Run default.kmp a number (> 1) times. Exit with step and duration statistics.

    <invoke> <file path>      - Open a file previously stored with the fsd command.

    <invoke> <file path>      - Run a file containing a SessionData configuration interactively, press Enter for each step.

    <invoke> <file path> 1    - Run a file containing a SessionData configuration non-interactively, stop when no needs can be done.

    <invoke> <file path> <nt> - Run a file containing a SessionData configuration a number (> 1) times. Exit with step and duration statistics.

    <invoke> [h | help]       - Show this list.


Session Commands:

    h | help                 - Help list display (this list).

    cd <dom num>             - Change the Curently Displayed Domain (CDD) to the given domain number.

    Press Enter (no command) - Satisfy one need that can be done, if any.

    q | exit | quit          - Quit the program.


    aj <act num>             - For an Action in the CDD, display all groups anchor, and adJacent, info.
    aj <act num> <region>      For an Action in the CDD, display group anchor, and adJacent, info.

    cs <state>               - Change State, an arbitrary change, for the CDD.

    dn <need number>         - Do a particular Need from the can-do need list.

    dcs                      - Display Current State, and domain.  After a number of commands,
                               the current state scrolls off screen, this might be useful.

    fsd <path>               - File Store Data.

    gps <act num> <region>   - Group Print Squares that define the group region, of a given action, of the CDD.

    ppd <need number>        - Print the Plan Details for a given need number in the can-do list.

    ps <act num>             - Print all Squares for an action, of the CDD.
    ps <act num> <region>      Print Squares in a given action and region, of the CDD.

    psr                      - Print Select Regions.

    run                      - Run until there are no needs that can be done.

    ss <act num>             - Sample the current State, for a given action, for the CDD.
    ss <act num> <state>       Sample State for a given action and state, for the CDD.
    ss <act num> <s1> <s2>     Sample State, for a given action, state and arbitrary result, for the CDD.

    to-rc <RC>               - Change the current states TO within a set of regions.

                               Like: to-rc RC[r1010, r1_000]
                               To target less than all domains: to-rc RC[r1010, rX_XXXX]

    step_rc <RC> <RC>        - Interactively use rules to navigate, step by step, from an initial set of regions to a goal set of regions.

                               Like: step_rc RC[r0101, r111] RC[r1001, r100]
                               To target less than all domains: step_rc RC[rXXXX, s111] RC[rXXXX, s100], or step_rc RC[s111] RC[s100]

                               This can be run anytime, but its probably more interesting to run with a fully developed set of rules.
                               The fsd command can store a full session.  Later, the program can be run with the data file as an argument,
                               giving immediate access to a fully develped set of rules.

    A domain number is an integer, zero or greater, where such a domain exists. CDD means the Currently Displayed Domain.

    An action number is an integer, zero or greater, where such an action exists.

    A need number is an integer, zero or greater, in a displayed list of needs that can be done.

    A state starts with an 's' character, followed by one, or more, binary digits.

    A region starts with an 'r' character, followed by one, or more, zero, one, X or x characters.
    A region displayed with a trailing "+" indicates the region is formed by more than two states.  Two states is a goal.

    A region, or state, may contain the separator '_', which will be ignored. All bit positions must be specified.

    A state can be used instead of a region, it will be translated to a region with no X-bits.

    An RC must have at least one region. An RC can have missing, and out of order regions, when the regions use different numbers of bits.

    pn stands for pattern number, the number of different samples. 1 = 1 kind of result, 2 = 2 kinds of results, in order. U = upredictable.

    pnc stands for pattern number confirmed, by enough extra samples.
          The bar for this is fairly low.
          Additional samples can cycle the pn and pnc values through all possible combinations.

    A Select Region is an arbitrary region, across all domains, with a given value, positive or negative.

        Plans, to satisfy a need, are made to avoid negative select regions, if possible.

        Finding the current state within a negative select region, the program will attempt to exit the region.

    A plan to satisfy a need may be shown in one of two ways.

        At Target - The current state is within the need target.

        PCS[PC[P[0:1], P[1:3]], PC[P[0:3,2]]]/3/6/-1 - Changes need to be made to the current state to be within the need target.

            PCS[ ... ]/3/6/-1 - A Plan Corresponding (per domain) Store, to change 3 bits, using plans that change 6 bits, passing through -1 valued regions.

            PC[ .. ] - A Plan Corresponding (per domain). No more than one plan per domain. If more than one plan, the plans will be run in parallel.

            P[ .. ] - A Plan. One, or more, actions for a single domain.

            0:3,2 - For domain 0, run action 3, then action 2.

        Once the current state is within the need target, most (but not all) needs require an additional action to get a sample.

    Needs that cannot be done.  Lets say the current state is s0000, there is a need for s1000, and no action that changes
    the left-most bit.  Using the command "cs s1000" will get things moving again.

        If there is only one square that makes a change that no other square makes, and that square has not happened to be sampled,
        the understanding of the logic will be deficient until the square is sampled.

    After no more needs can be done, positive select region seeking logic will be used.
    Repeatedly pressing the Enter key will increase the boredom duration.
    If there is more than one positive select region, when the boredom value reaches the the select region value,
    a different select region will be sought.

Given Select Regions (6):

  SR[RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], +3]
  SR[RC[rx_0xx1, rXXXX_XXX1_1XXX_XXXX], +2]
  SR[RC[rx_x1x1, rXXXX_XX00_0XXX_XXXX], +3]
  SR[RC[rx_1110, rXXXX_XXX0_0XXX_XXXX], +1]
  SR[RC[rx_XX00, rXXXX_XXx1_0xXX_XXXX], -1]
  SR[RC[rx_X10X, rXXXX_XX1x_x0XX_XXXX], -4]
 
Net-Positive SR fragments, each a subset of one or more SRs, no partial intersections. (11):

  SR[RC[rX_0000, rXXXX_XX1X_1XXX_XXXX], +3]
  SR[RC[rX_0X00, rXXXX_XX1X_11XX_XXXX], +3]
  SR[RC[rX_000X, rXXXX_XX10_1XXX_XXXX], +3]
  SR[RC[rX_0X0X, rXXXX_XX10_11XX_XXXX], +3]
  SR[RC[rX_0X11, rXXXX_XXX1_1XXX_XXXX], +2]
  SR[RC[rX_0XX1, rXXXX_XX01_1XXX_XXXX], +2]
  SR[RC[rx_x1x1, rXXXX_XX00_0XXX_XXXX], +3]
  SR[RC[rx_1110, rXXXX_XXX0_0XXX_XXXX], +1]
  SR[RC[rX_0001, rXXXX_XX11_1XXX_XXXX], +5]
  SR[RC[rX_0X01, rXXXX_XX11_11XX_XXXX], +5]
  SR[RC[rX_0101, rXXXX_XX11_10XX_XXXX], +1]
 
  To seek, when no other needs can be done.
 
Non-Negative RCs, maximum RC regions minus negative SR regions (10):

  RC[rX_X0X1, rXXXX_XXXX_XXXX_XXXX]
  RC[rX_XXX1, rXXXX_XX0X_XXXX_XXXX]
  RC[rX_XXX1, rXXXX_XXXX_X1XX_XXXX]
  RC[rX_XX1X, rXXXX_XXXX_XXXX_XXXX]
  RC[rX_X0XX, rXXXX_XXX0_XXXX_XXXX]
  RC[rX_XXXX, rXXXX_XX00_XXXX_XXXX]
  RC[rX_XXXX, rXXXX_XXX0_X1XX_XXXX]
  RC[rX_X0XX, rXXXX_XXXX_1XXX_XXXX]
  RC[rX_XXXX, rXXXX_XX0X_1XXX_XXXX]
  RC[rX_XXXX, rXXXX_XXXX_11XX_XXXX]
 
  Seek one of these when exiting a negative SR the current state is in.
 
  Only one bit needs to change to exit a region, with at least one edge,
  but there may be overlapping and adjacent negative SRs.
 
Net-Negative SR fragments, each a subset of one or more negative SRs, no partial intersections. (11):

  SR[RC[rX_X000, rXXXX_XXX1_0XXX_XXXX], -1]
  SR[RC[rX_XX00, rXXXX_XX01_0XXX_XXXX], -1]
  SR[RC[rX_XX00, rXXXX_XXX1_01XX_XXXX], -1]
  SR[RC[rX_1101, rXXXX_XX1X_X0XX_XXXX], -4]
  SR[RC[rX_110X, rXXXX_XX10_X0XX_XXXX], -4]
  SR[RC[rX_110X, rXXXX_XX1X_10XX_XXXX], -4]
  SR[RC[rX_X101, rXXXX_XX1X_00XX_XXXX], -4]
  SR[RC[rX_X10X, rXXXX_XX10_00XX_XXXX], -4]
  SR[RC[rX_0100, rXXXX_XX1X_10XX_XXXX], -1]
  SR[RC[rX_010X, rXXXX_XX10_10XX_XXXX], -1]
  SR[RC[rX_X100, rXXXX_XX11_00XX_XXXX], -5]
 
  If more than one different value, more and more negative value SRs may be considered to find a plan-path.
 

Step: 363 All domain states: SC[s0_0001, s0001_0111_1111_1011] Status: Positive, in RC[rx_0x0x, rXXXX_XX1X_1XXX_XXXX], 3 in RC[rx_0xx1, rXXXX_XXX1_1XXX_XXXX], 2 

Current Domain: 0 of 2
Acts: 
  ACT(ID: 0, number squares: 2
       Grps: G(rx_xxxx,  pn: 1, pnc: t, [XX_XX/XX/XX/XX]) num Sqrs: 2 Sqrs in: 2 in1: 2))
  ACT(ID: 1, number squares: 27, calculated structure regions: [rX_X1X1, rX_101X, rX_1X0X, rX_000X, rX_0X00, rX_X000, rX_1X10, rX_10X0, r0_1X1X, rX_0X1X], defining regions: [rX_X1X1, rX_101X, rX_1X0X, rX_000X, rX_0X00, rX_1X10, rX_0X1X]
       Grps: G(rx_0X1x,  pn: 1, pnc: t, [XX_00/XX/11/Xx],                 limited using s0_0110 adj mask m0_1010) num Sqrs: 2 Sqrs in: 7 in1: 6),
             G(rx_1x0X,  pn: 1, pnc: t, [XX_11/XX/00/Xx],                 limited using s0_1001 adj mask m0_1010) num Sqrs: 2 Sqrs in: 4 in1: 4),
             G(rx_x1x1,  pn: 1, pnc: t, [XX_XX/11/XX/10],                 limited using s1_1111 adj mask m0_0101) num Sqrs: 2 Sqrs in: 5 in1: 4),
             G(rX_000X,  pn: U, pnc: t, [Unpredictable],                  limited using s1_0001 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_101X,  pn: 2, pnc: t, [XX_11/01/11/XX, XX_11/00/10/XX], limited using s1_1011 adj mask m0_1110) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_1X10,  pn: 2, pnc: t, [XX_11/Xx/11/00, XX_11/XX/10/00], limited using s1_1110 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2),
             G(rX_0X00,  pn: U, pnc: t, [Unpredictable],                  limited using s1_0100 adj mask m0_1011) num Sqrs: 2 Sqrs in: 4 in1: 2))
  ACT(ID: 2, number squares: 13, calculated structure regions: [r1_1XX1, r0_X0X0, r1_X0X1, rX_XX0X, r0_0XXX, rX_11X1, rX_00XX, r1_11XX, r0_X1X1, rX_XX1X], defining regions: [rX_XX0X, rX_XX1X]
       Grps: G(rX_xX0x,  pn: 1, pnc: t, [XX_XX/XX/01/XX], limited using s1_0100 adj mask m0_0010) num Sqrs: 2 Sqrs in: 7 in1: 7),
             G(rX_xX1x,  pn: 1, pnc: t, [XX_XX/Xx/11/XX], limited using s1_0110 adj mask m0_0010) num Sqrs: 2 Sqrs in: 6 in1: 6))
  ACT(ID: 3, number squares: 7, calculated structure regions: [r0_XXX1, rX_X1X0, rX_1XX0, r1_XXX0, rX_XX1X, rX_X0X1, r0_1XXX, rX_10XX, r1_X0XX, rX_0XX1, r0_X1XX, rX_01XX, r1_0XXX, rX_XX0X], defining regions: [rX_XX1X, rX_XX0X]
       Grps: G(rX_XX1X,  pn: 1, pnc: t, [XX_XX/XX/10/XX], limited using s1_1111 adj mask m0_0010) num Sqrs: 2 Sqrs in: 3 in1: 3),
             G(rX_XX0X,  pn: 1, pnc: t, [XX_XX/Xx/00/XX], limited using s1_1101 adj mask m0_0010) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 4, number squares: 11, calculated structure regions: [rX_XX01, rX_X1X1, rX_X00X, r0_XXX1, rX_1XXX, r1_XX10, r1_X11X, r0_X0XX, rX_X0X0, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rx_1Xxx,  pn: 1, pnc: t, [Xx_11/XX/XX/XX], limited using s0_1100 adj mask m0_1000) num Sqrs: 2 Sqrs in: 6 in1: 6),
             G(rX_0xXX,  pn: 1, pnc: t, [XX_01/XX/XX/XX], limited using s1_0011 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5))
  ACT(ID: 5, number squares: 9, calculated structure regions: [rX_XX01, rX_X0X1, r1_XXX0, r0_XXX1, r1_XX0X, rX_XX10, rX_X01X, r0_X1XX, r0_XX1X, r1_X0XX, rX_X1X0, rX_X10X, rX_1XXX, rX_0XXX], defining regions: [rX_1XXX, rX_0XXX]
       Grps: G(rX_1XXX,  pn: 1, pnc: t, [XX_10/XX/XX/XX], limited using s1_1111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 5 in1: 5),
             G(rX_0XXX,  pn: 1, pnc: t, [Xx_00/XX/XX/XX], limited using s1_0111 adj mask m0_1000) num Sqrs: 2 Sqrs in: 4 in1: 4))
  ACT(ID: 6, number squares: 9
       Grps: G(rX_XXXX,  pn: 1, pnc: t, [XX_XX/XX/XX/XX], limited using s1_1111) num Sqrs: 2 Sqrs in: 9 in1: 9))

Dom: 0 Current State: s0_0001 Available changes: Xx_Xx/Xx/Xx/Xx

Number needs: 0

Select Region boredom/satiation level = 1 of limit 5
Steps: 363 Time elapsed: 22.24s seconds

Press Enter or type a command: q
Done
[?2004h]0;earl@earl-MS-7C39: ~/rust/ues/src[01;32mearl@earl-MS-7C39[00m:[01;34m~/rust/ues/src[00m$ exit
[?2004lexit

Script done on 2025-06-10 23:42:11-05:00 [COMMAND_EXIT_CODE="0"]
